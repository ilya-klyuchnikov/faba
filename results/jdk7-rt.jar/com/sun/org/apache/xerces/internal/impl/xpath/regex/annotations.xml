<root>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.BMPattern BMPattern(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.BMPattern BMPattern(java.lang.String, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap CaseInsensitiveMap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap boolean contains(int[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap boolean contains(int[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap boolean contains(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap boolean contains(int[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap int[] expandAndAdd(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap int[] expandAndAdd(int[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap int[] expandMap(int[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap int[] expandMap(int[], int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap int[] get(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap int[] getMapping(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap int[] updateMap(int, int[], int, int[], int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.CaseInsensitiveMap int[] updateMap(int, int[], int, int[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Match java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Match java.lang.String getCapturedText(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op createDot()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.CharOp createAnchor(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.CharOp createBackReference(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.CharOp createCapture(int, com.sun.org.apache.xerces.internal.impl.xpath.regex.Op)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.CharOp createChar(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ChildOp createClosure(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ChildOp createIndependent(com.sun.org.apache.xerces.internal.impl.xpath.regex.Op, com.sun.org.apache.xerces.internal.impl.xpath.regex.Op)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ChildOp createLook(int, com.sun.org.apache.xerces.internal.impl.xpath.regex.Op, com.sun.org.apache.xerces.internal.impl.xpath.regex.Op)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ChildOp createNonGreedyClosure()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ChildOp createQuestion(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ConditionOp createCondition(com.sun.org.apache.xerces.internal.impl.xpath.regex.Op, int, com.sun.org.apache.xerces.internal.impl.xpath.regex.Op, com.sun.org.apache.xerces.internal.impl.xpath.regex.Op, com.sun.org.apache.xerces.internal.impl.xpath.regex.Op)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ModifierOp createModifier(com.sun.org.apache.xerces.internal.impl.xpath.regex.Op, com.sun.org.apache.xerces.internal.impl.xpath.regex.Op, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.RangeOp createRange(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.StringOp createString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.UnionOp createUnion(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.CharOp int getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ChildOp com.sun.org.apache.xerces.internal.impl.xpath.regex.Op getChild()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ModifierOp int getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.ModifierOp int getData2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.RangeOp com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken getToken()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Op.StringOp java.lang.String getString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.ParseException int getLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema boolean checkQuestion(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken parseCharacterClass(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processCaret()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processDollar()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processParen()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processPlus(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processQuestion(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processStar(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema int processCIinCharacterClass(com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema void setupRange(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token, int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.ParserForXMLSchema void setupRange(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil REUtil()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil boolean isHighSurrogate(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil boolean isLowSurrogate(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil int composeFromSurrogates(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil int getOptionValue(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil int parseOptions(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil java.lang.String decomposeToSurrogates(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil java.lang.String quoteMeta(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil java.lang.String quoteMeta(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil java.lang.String stripExtendedComment(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil java.lang.String stripExtendedComment(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil java.lang.String substring(java.text.CharacterIterator, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.REUtil void dumpString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken boolean isCompacted()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken boolean isSorted()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken com.sun.org.apache.xerces.internal.impl.xpath.regex.Token complementRanges(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken com.sun.org.apache.xerces.internal.impl.xpath.regex.Token complementRanges(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken java.lang.String escapeCharInCharClass(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken void intersectRanges(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken void mergeRanges(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken void subtractRanges(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser boolean isSet(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.ParseException ex(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken parseCharacterClass(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken processBacksolidus_pP(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processBackreference()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processBacksolidus_c()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processBacksolidus_i()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processCondition()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processIndependent()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processLookahead()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processLookbehind()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processModifiers()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processNegativelookahead()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processNegativelookbehind()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processParen()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processParen2()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processPlus(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processQuestion(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser com.sun.org.apache.xerces.internal.impl.xpath.regex.Token processStar(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser int hexChar(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser int processCIinCharacterClass(com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser int read()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser void addCaseInsensitiveChar(com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegexParser void addCaseInsensitiveCharRange(com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean equals(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean equals(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean isEOLChar(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean isSet(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean isWordChar(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean matchAnchor(com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.ExpressionTarget, com.sun.org.apache.xerces.internal.impl.xpath.regex.Op, com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.Context, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean matches(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean matches(char[], com.sun.org.apache.xerces.internal.impl.xpath.regex.Match) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean matches(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean matches(java.lang.String, com.sun.org.apache.xerces.internal.impl.xpath.regex.Match) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression boolean matches(java.text.CharacterIterator, com.sun.org.apache.xerces.internal.impl.xpath.regex.Match) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression com.sun.org.apache.xerces.internal.impl.xpath.regex.Op compile(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token, com.sun.org.apache.xerces.internal.impl.xpath.regex.Op, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression int getNumberOfGroups()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression int match(com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.Context, com.sun.org.apache.xerces.internal.impl.xpath.regex.Op, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression java.lang.String getPattern()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression void setPattern(java.lang.String, java.lang.String, java.util.Locale) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.CharArrayTarget boolean regionMatches(boolean, int, int, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.CharArrayTarget boolean regionMatches(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.CharArrayTarget char charAt(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.CharacterIteratorTarget boolean regionMatches(boolean, int, int, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.ClosureContext boolean contains(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.ClosureContext int[] expandOffsets()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.ExpressionTarget ExpressionTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.RegularExpression.StringTarget boolean regionMatches(boolean, int, int, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token boolean isSet(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token boolean isShorterThan(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token boolean isShorterThan(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken createNRange()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken createRange()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.RangeToken getRange(java.lang.String, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token complementRanges(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token complementRanges(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token createEmpty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token getChild(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.CharToken createAnchor(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.CharToken createChar(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken createClosure(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken createNGClosure(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConcatToken createConcat(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token, com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConditionToken createCondition(int, com.sun.org.apache.xerces.internal.impl.xpath.regex.Token, com.sun.org.apache.xerces.internal.impl.xpath.regex.Token, com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ModifierToken createModifierGroup(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ParenToken createLook(int, com.sun.org.apache.xerces.internal.impl.xpath.regex.Token)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ParenToken createParen(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.StringToken createBackReference(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.StringToken createString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.UnionToken createConcat()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.UnionToken createUnion()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token int getChar()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token int getMax()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token int getMin()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token int getParenNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token int getReferenceNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token java.lang.String getString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token void addChild(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token void intersectRanges(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token void mergeRanges(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token void setMax(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token void setMin(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token void subtractRanges(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.CharToken int getChar()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.CharToken java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken com.sun.org.apache.xerces.internal.impl.xpath.regex.Token getChild(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken int getMax()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken int getMin()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ClosureToken java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConcatToken com.sun.org.apache.xerces.internal.impl.xpath.regex.Token getChild(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConcatToken int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConcatToken java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConditionToken int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ConditionToken java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ModifierToken com.sun.org.apache.xerces.internal.impl.xpath.regex.Token getChild(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ModifierToken int getOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ModifierToken int getOptionsMask()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ModifierToken int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ModifierToken java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ParenToken com.sun.org.apache.xerces.internal.impl.xpath.regex.Token getChild(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ParenToken int getParenNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ParenToken int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.ParenToken java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.StringToken int getReferenceNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.StringToken java.lang.String getString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.StringToken java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.UnionToken java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xerces.internal.impl.xpath.regex.Token.UnionToken void addChild(com.sun.org.apache.xerces.internal.impl.xpath.regex.Token) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
