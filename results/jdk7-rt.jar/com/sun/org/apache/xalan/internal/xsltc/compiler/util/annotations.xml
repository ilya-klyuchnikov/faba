<root>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.AttributeSetMethodGenerator AttributeSetMethodGenerator(java.lang.String, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.AttributeSetMethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadParameter(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.AttributeSetMethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeParameter(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.AttributeSetMethodGenerator int getLocalIndex(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType BooleanType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType boolean isSimple()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType com.sun.org.apache.bcel.internal.generic.BranchInstruction GE(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType com.sun.org.apache.bcel.internal.generic.BranchInstruction GT(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType com.sun.org.apache.bcel.internal.generic.BranchInstruction LE(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType com.sun.org.apache.bcel.internal.generic.BranchInstruction LT(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType com.sun.org.apache.bcel.internal.generic.Instruction LOAD(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType com.sun.org.apache.bcel.internal.generic.Instruction STORE(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator ClassGenerator(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator ClassGenerator(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadTranslet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator com.sun.org.apache.xalan.internal.xsltc.compiler.Parser getParser()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet getStylesheet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator java.lang.String getApplyTemplatesSig()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator java.lang.String getApplyTemplatesSigForImport()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator java.lang.String getDOMClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator java.lang.String getDOMClassSig()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator void addMethod(com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator CompareGenerator(int, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[], java.lang.String[], java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.InstructionList, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator CompareGenerator(int, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[], java.lang.String[], java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.InstructionList, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadCurrentNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadDOM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadLastNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeCurrentNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator int getHandlerIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator int getIteratorIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.CompareGenerator int getLocalIndex(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_ca java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_cs java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_de java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_es java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_fr java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_it java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_ja java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_ko java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_pt_BR java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_sk java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_sv java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_zh_CN java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMessages_zh_TW java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg ErrorMsg(java.lang.String, com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg ErrorMsg(java.lang.String, java.lang.Object, com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg ErrorMsg(java.lang.String, java.lang.Object, java.lang.Object, com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg ErrorMsg(java.lang.String, java.lang.Throwable) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg boolean isWarningError()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg java.lang.String formatLine()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg java.lang.String getFileName(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg java.lang.String getFileName(com.sun.org.apache.xalan.internal.xsltc.compiler.SyntaxTreeNode)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg java.lang.String toString(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg java.lang.String toString(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg java.lang.String toString(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg java.lang.String toString(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg java.lang.String toString(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.FilterGenerator FilterGenerator(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.FilterGenerator FilterGenerator(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.FilterGenerator boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.FilterGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadTranslet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType IntType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.BranchInstruction GE(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.BranchInstruction GT(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.BranchInstruction LE(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.BranchInstruction LT(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction ADD()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction DIV()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction LOAD(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction MUL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction NEG()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction REM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction STORE(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Instruction SUB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType int distanceTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType int distanceTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction com.sun.org.apache.bcel.internal.generic.Instruction copy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction int consumeStack(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction int consumeStack(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction int produceStack(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction int produceStack(com.sun.org.apache.bcel.internal.generic.ConstantPoolGen)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction void accept(com.sun.org.apache.bcel.internal.generic.Visitor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction void accept(com.sun.org.apache.bcel.internal.generic.Visitor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MarkerInstruction void dump(java.io.DataOutputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator MatchGenerator(int, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[], java.lang.String[], java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.InstructionList, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadCurrentNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadDOM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeCurrentNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator int getHandlerIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator int getIteratorIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MatchGenerator int getLocalIndex(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator MethodGenerator(int, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[], java.lang.String[], java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.InstructionList, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator boolean offsetInLocalVariableGenRange(com.sun.org.apache.bcel.internal.generic.LocalVariableGen, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.classfile.Method outline(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, java.lang.String, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.classfile.Method outline(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, java.lang.String, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.classfile.Method outline(com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle, java.lang.String, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.classfile.Method[] outlineChunks(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction attribute()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction endDocument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction endElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadDOM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadLocal(int, com.sun.org.apache.bcel.internal.generic.Type) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadLocal(int, com.sun.org.apache.bcel.internal.generic.Type)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction namespace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction nextNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction reset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction setStartNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction startDocument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction startElement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeDOM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeLocal(int, com.sun.org.apache.bcel.internal.generic.Type) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeLocal(int, com.sun.org.apache.bcel.internal.generic.Type)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction uniqueAttribute()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.LocalVariableGen addLocalVariable2(java.lang.String, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.InstructionHandle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator com.sun.org.apache.bcel.internal.generic.LocalVariableGen addLocalVariable2(java.lang.String, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.InstructionHandle)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator java.util.ArrayList getCandidateChunks(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator java.util.ArrayList getCandidateChunks(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator java.util.ArrayList mergeAdjacentChunks(com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator java.util.ArrayList mergeAdjacentChunks(com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator void removeLocalVariable(com.sun.org.apache.bcel.internal.generic.LocalVariableGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.1 1(com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.1 1(com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.1 boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk Chunk(com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk Chunk(com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.bcel.internal.generic.InstructionHandle, com.sun.org.apache.bcel.internal.generic.InstructionHandle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk boolean isAdjacentTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk com.sun.org.apache.bcel.internal.generic.InstructionHandle getChunkEnd()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk com.sun.org.apache.bcel.internal.generic.InstructionHandle getChunkStart()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.Chunk int getChunkSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry com.sun.org.apache.bcel.internal.generic.LocalVariableGen lookUpByName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry com.sun.org.apache.bcel.internal.generic.LocalVariableGen lookupRegisteredLocalVariable(int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry com.sun.org.apache.bcel.internal.generic.LocalVariableGen[] getLocals(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry void registerByName(com.sun.org.apache.bcel.internal.generic.LocalVariableGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry void registerLocalVariable(com.sun.org.apache.bcel.internal.generic.LocalVariableGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator.LocalVariableRegistry void removeByNameTracking(com.sun.org.apache.bcel.internal.generic.LocalVariableGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType MethodType(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type, java.util.Vector) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type resultType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType int distanceTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType java.lang.String toSignature(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType java.lang.String toSignature(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodType java.util.Vector argsType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable java.lang.Object maps(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.MultiHashtable java.lang.Object maps(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NamedMethodGenerator NamedMethodGenerator(int, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[], java.lang.String[], java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.InstructionList, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NamedMethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadParameter(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NamedMethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeParameter(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NamedMethodGenerator int getLocalIndex(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeCounterGenerator NodeCounterGenerator(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeCounterGenerator NodeCounterGenerator(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeCounterGenerator boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeCounterGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadTranslet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType NodeSetType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType com.sun.org.apache.bcel.internal.generic.Instruction LOAD(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType com.sun.org.apache.bcel.internal.generic.Instruction STORE(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void getFirstNode(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void getFirstNode(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordFactGenerator NodeSortRecordFactGenerator(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordFactGenerator NodeSortRecordFactGenerator(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordFactGenerator boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordGenerator NodeSortRecordGenerator(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordGenerator NodeSortRecordGenerator(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String[], com.sun.org.apache.xalan.internal.xsltc.compiler.Stylesheet) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordGenerator boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSortRecordGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadTranslet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType com.sun.org.apache.bcel.internal.generic.Instruction LOAD(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType com.sun.org.apache.bcel.internal.generic.Instruction STORE(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType int getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NumberType NumberType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NumberType boolean isNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.NumberType boolean isSimple()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType ObjectType(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType com.sun.org.apache.bcel.internal.generic.Instruction LOAD(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType com.sun.org.apache.bcel.internal.generic.Instruction STORE(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType java.lang.Class getJavaClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType java.lang.String getJavaClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType RealType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction ADD()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction CMP(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction DIV()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction DUP()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction LOAD(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction MUL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction NEG()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction POP()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction REM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction STORE(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Instruction SUB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType int distanceTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType int distanceTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.IntType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType ReferenceType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType com.sun.org.apache.bcel.internal.generic.Instruction LOAD(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType com.sun.org.apache.bcel.internal.generic.Instruction STORE(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType boolean implementedAsMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType com.sun.org.apache.bcel.internal.generic.Instruction LOAD(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType com.sun.org.apache.bcel.internal.generic.Instruction STORE(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType java.lang.String getMethodName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.NodeSetType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ObjectType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.ResultTreeType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator RtMethodGenerator(int, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[], java.lang.String[], java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.InstructionList, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator int getIteratorIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator int getLocalIndex(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.RtMethodGenerator int getLocalIndex(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.SlotAllocator int allocateSlot(com.sun.org.apache.bcel.internal.generic.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.SlotAllocator void initialize(com.sun.org.apache.bcel.internal.generic.LocalVariableGen[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.SlotAllocator void releaseSlot(com.sun.org.apache.bcel.internal.generic.LocalVariableGen) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType StringType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType boolean isSimple()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType com.sun.org.apache.bcel.internal.generic.Instruction LOAD(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType com.sun.org.apache.bcel.internal.generic.Instruction STORE(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.RealType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.ReferenceType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator TestGenerator(int, com.sun.org.apache.bcel.internal.generic.Type, com.sun.org.apache.bcel.internal.generic.Type[], java.lang.String[], java.lang.String, java.lang.String, com.sun.org.apache.bcel.internal.generic.InstructionList, com.sun.org.apache.bcel.internal.generic.ConstantPoolGen) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadContextNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadCurrentNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadDOM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction loadIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeContextNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeCurrentNode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator com.sun.org.apache.bcel.internal.generic.Instruction storeIterator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator int getHandlerIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator int getIteratorIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TestGenerator int getLocalIndex(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type Type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type boolean implementedAsMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type boolean isNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type boolean isSimple()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.BranchInstruction GE(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.BranchInstruction GT(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.BranchInstruction LE(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.BranchInstruction LT(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction ADD()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction CMP(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction DIV()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction DUP()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction LOAD(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction MUL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction NEG()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction POP()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction REM()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction STORE(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.bcel.internal.generic.Instruction SUB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.BooleanType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;null;_,!null,_-&gt;null;_,_,!null-&gt;null;_,null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type com.sun.org.apache.xalan.internal.xsltc.compiler.FlowList translateToDesynthesized(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type int distanceTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type int distanceTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type void translateUnBox(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError com.sun.org.apache.xalan.internal.xsltc.compiler.util.ErrorMsg getErrorMsg()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.TypeCheckError java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util Util()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util boolean isLiteral(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util boolean isValidQNames(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util boolean isValidQNames(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util com.sun.org.apache.bcel.internal.generic.Type getJCRefType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String baseName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String baseName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String escape(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String escape(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String getLocalName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String getLocalName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String getPrefix(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String getPrefix(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String internalName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String internalName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String noExtName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String noExtName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String pathName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String pathName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String replace(java.lang.String, char, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String replace(java.lang.String, char, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String replace(java.lang.String, java.lang.String, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String replace(java.lang.String, java.lang.String, java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String toJavaName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.Util java.lang.String toJavaName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType VoidType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType boolean identicalTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType com.sun.org.apache.bcel.internal.generic.Instruction POP()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType com.sun.org.apache.bcel.internal.generic.Type toJCType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType java.lang.String toSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType void translateFrom(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.StringType) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.xalan.internal.xsltc.compiler.util.VoidType void translateTo(com.sun.org.apache.xalan.internal.xsltc.compiler.util.ClassGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.MethodGenerator, com.sun.org.apache.xalan.internal.xsltc.compiler.util.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
