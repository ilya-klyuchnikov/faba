<root>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags AccessFlags()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isAbstract()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isFinal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isInterface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isNative()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isPrivate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isProtected()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isPublic()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isStatic()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isStrictfp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isSynchronized()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isTransient()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags boolean isVolatile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags int getAccessFlags()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.AccessFlags int getModifiers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute byte getTag()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute com.sun.org.apache.bcel.internal.classfile.Attribute readAttribute(java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute com.sun.org.apache.bcel.internal.classfile.Attribute readAttribute(java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute int getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute int getNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Attribute void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ClassParser ClassParser(java.io.InputStream, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ClassParser ClassParser(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ClassParser com.sun.org.apache.bcel.internal.classfile.JavaClass parse()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code Code(com.sun.org.apache.bcel.internal.classfile.Code) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code Code(int, int, java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code byte[] getCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code com.sun.org.apache.bcel.internal.classfile.Attribute[] getAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code com.sun.org.apache.bcel.internal.classfile.CodeException[] getExceptionTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code com.sun.org.apache.bcel.internal.classfile.LineNumberTable getLineNumberTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code com.sun.org.apache.bcel.internal.classfile.LocalVariableTable getLocalVariableTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code int calculateLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code int getInternalLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code int getMaxLocals()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code int getMaxStack()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Code void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException CodeException(com.sun.org.apache.bcel.internal.classfile.CodeException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException CodeException(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException com.sun.org.apache.bcel.internal.classfile.CodeException copy()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException int getCatchType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException int getEndPC()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException int getHandlerPC()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException int getStartPC()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.CodeException void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Constant byte getTag()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Constant com.sun.org.apache.bcel.internal.classfile.Constant copy()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Constant com.sun.org.apache.bcel.internal.classfile.Constant readConstant(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Constant com.sun.org.apache.bcel.internal.classfile.Constant readConstant(java.io.DataInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Constant java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantCP ConstantCP(byte, java.io.DataInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantCP ConstantCP(com.sun.org.apache.bcel.internal.classfile.ConstantCP) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantCP int getClassIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantCP int getNameAndTypeIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantCP java.lang.String getClass(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantCP java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantCP void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantClass ConstantClass(com.sun.org.apache.bcel.internal.classfile.ConstantClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantClass ConstantClass(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantClass int getNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantClass java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantClass java.lang.String getBytes(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantClass java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantClass void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantClass void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble ConstantDouble(com.sun.org.apache.bcel.internal.classfile.ConstantDouble) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble ConstantDouble(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble double getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantDouble void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFieldref ConstantFieldref(com.sun.org.apache.bcel.internal.classfile.ConstantFieldref) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFieldref ConstantFieldref(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFieldref void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat ConstantFloat(com.sun.org.apache.bcel.internal.classfile.ConstantFloat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat ConstantFloat(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat float getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantFloat void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger ConstantInteger(com.sun.org.apache.bcel.internal.classfile.ConstantInteger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger ConstantInteger(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger int getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInteger void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref ConstantInterfaceMethodref(com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref ConstantInterfaceMethodref(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong ConstantLong(com.sun.org.apache.bcel.internal.classfile.ConstantLong) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong ConstantLong(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong long getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantLong void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantMethodref ConstantMethodref(com.sun.org.apache.bcel.internal.classfile.ConstantMethodref) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantMethodref ConstantMethodref(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantMethodref void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType ConstantNameAndType(com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType ConstantNameAndType(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType int getNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType int getSignatureIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType java.lang.String getName(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType java.lang.String getSignature(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool ConstantPool(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool com.sun.org.apache.bcel.internal.classfile.Constant getConstant(int, byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool com.sun.org.apache.bcel.internal.classfile.ConstantPool copy()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool com.sun.org.apache.bcel.internal.classfile.Constant[] getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool int getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool java.lang.String constantToString(com.sun.org.apache.bcel.internal.classfile.Constant) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool java.lang.String escape(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool java.lang.String escape(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantPool void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantString ConstantString(com.sun.org.apache.bcel.internal.classfile.ConstantString) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantString ConstantString(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantString int getStringIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantString java.lang.Object getConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantString java.lang.String getBytes(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantString java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantString void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantString void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantUtf8 ConstantUtf8(com.sun.org.apache.bcel.internal.classfile.ConstantUtf8) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantUtf8 ConstantUtf8(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantUtf8 ConstantUtf8(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantUtf8 java.lang.String getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantUtf8 java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantUtf8 void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantUtf8 void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantValue ConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantValue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantValue ConstantValue(int, int, java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantValue com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantValue int getConstantValueIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantValue java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantValue void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ConstantValue void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Deprecated Deprecated(com.sun.org.apache.bcel.internal.classfile.Deprecated) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Deprecated byte[] getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Deprecated com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Deprecated java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Deprecated void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Deprecated void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor java.lang.Object predecessor()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor java.lang.Object predecessor(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitCode(com.sun.org.apache.bcel.internal.classfile.Code) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitCodeException(com.sun.org.apache.bcel.internal.classfile.CodeException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantClass(com.sun.org.apache.bcel.internal.classfile.ConstantClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantDouble(com.sun.org.apache.bcel.internal.classfile.ConstantDouble) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantFieldref(com.sun.org.apache.bcel.internal.classfile.ConstantFieldref) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantFloat(com.sun.org.apache.bcel.internal.classfile.ConstantFloat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantInteger(com.sun.org.apache.bcel.internal.classfile.ConstantInteger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantInterfaceMethodref(com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantLong(com.sun.org.apache.bcel.internal.classfile.ConstantLong) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantMethodref(com.sun.org.apache.bcel.internal.classfile.ConstantMethodref) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantNameAndType(com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantPool(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantString(com.sun.org.apache.bcel.internal.classfile.ConstantString) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantUtf8(com.sun.org.apache.bcel.internal.classfile.ConstantUtf8) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantValue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitDeprecated(com.sun.org.apache.bcel.internal.classfile.Deprecated) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitExceptionTable(com.sun.org.apache.bcel.internal.classfile.ExceptionTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitField(com.sun.org.apache.bcel.internal.classfile.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitInnerClass(com.sun.org.apache.bcel.internal.classfile.InnerClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitInnerClasses(com.sun.org.apache.bcel.internal.classfile.InnerClasses) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitJavaClass(com.sun.org.apache.bcel.internal.classfile.JavaClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitLineNumber(com.sun.org.apache.bcel.internal.classfile.LineNumber) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitLineNumberTable(com.sun.org.apache.bcel.internal.classfile.LineNumberTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitLocalVariable(com.sun.org.apache.bcel.internal.classfile.LocalVariable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitLocalVariableTable(com.sun.org.apache.bcel.internal.classfile.LocalVariableTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitLocalVariableTypeTable(com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitMethod(com.sun.org.apache.bcel.internal.classfile.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitSignature(com.sun.org.apache.bcel.internal.classfile.Signature) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitSourceFile(com.sun.org.apache.bcel.internal.classfile.SourceFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitStackMap(com.sun.org.apache.bcel.internal.classfile.StackMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitStackMapEntry(com.sun.org.apache.bcel.internal.classfile.StackMapEntry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitSynthetic(com.sun.org.apache.bcel.internal.classfile.Synthetic) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.DescendingVisitor void visitUnknown(com.sun.org.apache.bcel.internal.classfile.Unknown) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor EmptyVisitor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitCode(com.sun.org.apache.bcel.internal.classfile.Code) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitCode(com.sun.org.apache.bcel.internal.classfile.Code)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitCodeException(com.sun.org.apache.bcel.internal.classfile.CodeException) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitCodeException(com.sun.org.apache.bcel.internal.classfile.CodeException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantClass(com.sun.org.apache.bcel.internal.classfile.ConstantClass) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantClass(com.sun.org.apache.bcel.internal.classfile.ConstantClass)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantDouble(com.sun.org.apache.bcel.internal.classfile.ConstantDouble) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantDouble(com.sun.org.apache.bcel.internal.classfile.ConstantDouble)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantFieldref(com.sun.org.apache.bcel.internal.classfile.ConstantFieldref) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantFieldref(com.sun.org.apache.bcel.internal.classfile.ConstantFieldref)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantFloat(com.sun.org.apache.bcel.internal.classfile.ConstantFloat) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantFloat(com.sun.org.apache.bcel.internal.classfile.ConstantFloat)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantInteger(com.sun.org.apache.bcel.internal.classfile.ConstantInteger) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantInteger(com.sun.org.apache.bcel.internal.classfile.ConstantInteger)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantInterfaceMethodref(com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantInterfaceMethodref(com.sun.org.apache.bcel.internal.classfile.ConstantInterfaceMethodref)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantLong(com.sun.org.apache.bcel.internal.classfile.ConstantLong) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantLong(com.sun.org.apache.bcel.internal.classfile.ConstantLong)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantMethodref(com.sun.org.apache.bcel.internal.classfile.ConstantMethodref) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantMethodref(com.sun.org.apache.bcel.internal.classfile.ConstantMethodref)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantNameAndType(com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantNameAndType(com.sun.org.apache.bcel.internal.classfile.ConstantNameAndType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantPool(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantPool(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantString(com.sun.org.apache.bcel.internal.classfile.ConstantString) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantString(com.sun.org.apache.bcel.internal.classfile.ConstantString)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantUtf8(com.sun.org.apache.bcel.internal.classfile.ConstantUtf8) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantUtf8(com.sun.org.apache.bcel.internal.classfile.ConstantUtf8)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantValue) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitConstantValue(com.sun.org.apache.bcel.internal.classfile.ConstantValue)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitDeprecated(com.sun.org.apache.bcel.internal.classfile.Deprecated) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitDeprecated(com.sun.org.apache.bcel.internal.classfile.Deprecated)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitExceptionTable(com.sun.org.apache.bcel.internal.classfile.ExceptionTable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitExceptionTable(com.sun.org.apache.bcel.internal.classfile.ExceptionTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitField(com.sun.org.apache.bcel.internal.classfile.Field) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitField(com.sun.org.apache.bcel.internal.classfile.Field)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitInnerClass(com.sun.org.apache.bcel.internal.classfile.InnerClass) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitInnerClass(com.sun.org.apache.bcel.internal.classfile.InnerClass)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitInnerClasses(com.sun.org.apache.bcel.internal.classfile.InnerClasses) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitInnerClasses(com.sun.org.apache.bcel.internal.classfile.InnerClasses)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitJavaClass(com.sun.org.apache.bcel.internal.classfile.JavaClass) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitJavaClass(com.sun.org.apache.bcel.internal.classfile.JavaClass)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLineNumber(com.sun.org.apache.bcel.internal.classfile.LineNumber) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLineNumber(com.sun.org.apache.bcel.internal.classfile.LineNumber)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLineNumberTable(com.sun.org.apache.bcel.internal.classfile.LineNumberTable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLineNumberTable(com.sun.org.apache.bcel.internal.classfile.LineNumberTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLocalVariable(com.sun.org.apache.bcel.internal.classfile.LocalVariable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLocalVariable(com.sun.org.apache.bcel.internal.classfile.LocalVariable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLocalVariableTable(com.sun.org.apache.bcel.internal.classfile.LocalVariableTable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLocalVariableTable(com.sun.org.apache.bcel.internal.classfile.LocalVariableTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLocalVariableTypeTable(com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitLocalVariableTypeTable(com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitMethod(com.sun.org.apache.bcel.internal.classfile.Method) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitMethod(com.sun.org.apache.bcel.internal.classfile.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitSignature(com.sun.org.apache.bcel.internal.classfile.Signature) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitSignature(com.sun.org.apache.bcel.internal.classfile.Signature)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitSourceFile(com.sun.org.apache.bcel.internal.classfile.SourceFile) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitSourceFile(com.sun.org.apache.bcel.internal.classfile.SourceFile)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitStackMap(com.sun.org.apache.bcel.internal.classfile.StackMap) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitStackMap(com.sun.org.apache.bcel.internal.classfile.StackMap)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitStackMapEntry(com.sun.org.apache.bcel.internal.classfile.StackMapEntry) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitStackMapEntry(com.sun.org.apache.bcel.internal.classfile.StackMapEntry)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitSynthetic(com.sun.org.apache.bcel.internal.classfile.Synthetic) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitSynthetic(com.sun.org.apache.bcel.internal.classfile.Synthetic)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitUnknown(com.sun.org.apache.bcel.internal.classfile.Unknown) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.EmptyVisitor void visitUnknown(com.sun.org.apache.bcel.internal.classfile.Unknown)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable ExceptionTable(com.sun.org.apache.bcel.internal.classfile.ExceptionTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable ExceptionTable(int, int, java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable int getNumberOfExceptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable int[] getExceptionIndexTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable java.lang.String[] getExceptionNames()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.ExceptionTable void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Field Field(com.sun.org.apache.bcel.internal.classfile.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Field Field(java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Field com.sun.org.apache.bcel.internal.classfile.ConstantValue getConstantValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Field java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Field void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod FieldOrMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod FieldOrMethod(com.sun.org.apache.bcel.internal.classfile.FieldOrMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod FieldOrMethod(java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod com.sun.org.apache.bcel.internal.classfile.Attribute[] getAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod com.sun.org.apache.bcel.internal.classfile.FieldOrMethod copy_(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod int getNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod int getSignatureIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.FieldOrMethod void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass InnerClass(com.sun.org.apache.bcel.internal.classfile.InnerClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass InnerClass(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass com.sun.org.apache.bcel.internal.classfile.InnerClass copy()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass int getInnerAccessFlags()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass int getInnerClassIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass int getInnerNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass int getOuterClassIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass java.lang.String toString(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClass void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClasses InnerClasses(com.sun.org.apache.bcel.internal.classfile.InnerClasses) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClasses InnerClasses(int, int, java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClasses com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClasses com.sun.org.apache.bcel.internal.classfile.InnerClass[] getInnerClasses()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClasses java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClasses void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.InnerClasses void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass JavaClass(int, int, java.lang.String, int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool, int[], com.sun.org.apache.bcel.internal.classfile.Field[], com.sun.org.apache.bcel.internal.classfile.Method[], com.sun.org.apache.bcel.internal.classfile.Attribute[]) 10">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass JavaClass(int, int, java.lang.String, int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool, int[], com.sun.org.apache.bcel.internal.classfile.Field[], com.sun.org.apache.bcel.internal.classfile.Method[], com.sun.org.apache.bcel.internal.classfile.Attribute[]) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass JavaClass(int, int, java.lang.String, int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool, int[], com.sun.org.apache.bcel.internal.classfile.Field[], com.sun.org.apache.bcel.internal.classfile.Method[], com.sun.org.apache.bcel.internal.classfile.Attribute[]) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass JavaClass(int, int, java.lang.String, int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool, int[], com.sun.org.apache.bcel.internal.classfile.Field[], com.sun.org.apache.bcel.internal.classfile.Method[], com.sun.org.apache.bcel.internal.classfile.Attribute[]) 8">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass JavaClass(int, int, java.lang.String, int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool, int[], com.sun.org.apache.bcel.internal.classfile.Field[], com.sun.org.apache.bcel.internal.classfile.Method[], com.sun.org.apache.bcel.internal.classfile.Attribute[]) 9">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass JavaClass(int, int, java.lang.String, int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool, int[], com.sun.org.apache.bcel.internal.classfile.Field[], com.sun.org.apache.bcel.internal.classfile.Method[], com.sun.org.apache.bcel.internal.classfile.Attribute[], byte) 10">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass JavaClass(int, int, java.lang.String, int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool, int[], com.sun.org.apache.bcel.internal.classfile.Field[], com.sun.org.apache.bcel.internal.classfile.Method[], com.sun.org.apache.bcel.internal.classfile.Attribute[], byte) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass JavaClass(int, int, java.lang.String, int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool, int[], com.sun.org.apache.bcel.internal.classfile.Field[], com.sun.org.apache.bcel.internal.classfile.Method[], com.sun.org.apache.bcel.internal.classfile.Attribute[], byte) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass JavaClass(int, int, java.lang.String, int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool, int[], com.sun.org.apache.bcel.internal.classfile.Field[], com.sun.org.apache.bcel.internal.classfile.Method[], com.sun.org.apache.bcel.internal.classfile.Attribute[], byte) 8">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass JavaClass(int, int, java.lang.String, int, int, int, com.sun.org.apache.bcel.internal.classfile.ConstantPool, int[], com.sun.org.apache.bcel.internal.classfile.Field[], com.sun.org.apache.bcel.internal.classfile.Method[], com.sun.org.apache.bcel.internal.classfile.Attribute[], byte) 9">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass boolean implementationOf(com.sun.org.apache.bcel.internal.classfile.JavaClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass boolean isClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass boolean isSuper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass byte getSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.classfile.Attribute[] getAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.classfile.Field[] getFields()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.classfile.JavaClass copy()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.classfile.JavaClass getSuperClass()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.classfile.JavaClass[] getInterfaces()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.classfile.Method getMethod(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.classfile.Method[] getMethods()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass com.sun.org.apache.bcel.internal.util.Repository getRepository()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass int getClassNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass int getMajor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass int getMinor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass int getSuperclassNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass int[] getInterfaceIndices()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String getFileName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String getPackageName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String getSourceFileName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String getSuperclassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String indent(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String indent(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass java.lang.String[] getInterfaceNames()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void dump(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.JavaClass void dump(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber LineNumber(com.sun.org.apache.bcel.internal.classfile.LineNumber) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber LineNumber(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber com.sun.org.apache.bcel.internal.classfile.LineNumber copy()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber int getLineNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber int getStartPC()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumber void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable LineNumberTable(com.sun.org.apache.bcel.internal.classfile.LineNumberTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable LineNumberTable(int, int, java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable com.sun.org.apache.bcel.internal.classfile.LineNumber[] getLineNumberTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable int getSourceLine(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable int getTableLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LineNumberTable void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable LocalVariable(com.sun.org.apache.bcel.internal.classfile.LocalVariable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable LocalVariable(java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable com.sun.org.apache.bcel.internal.classfile.LocalVariable copy()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable int getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable int getNameIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable int getSignatureIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable int getStartPC()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariable void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable LocalVariableTable(com.sun.org.apache.bcel.internal.classfile.LocalVariableTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable LocalVariableTable(int, int, java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable com.sun.org.apache.bcel.internal.classfile.LocalVariable getLocalVariable(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable com.sun.org.apache.bcel.internal.classfile.LocalVariable[] getLocalVariableTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable int getTableLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTable void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable LocalVariableTypeTable(com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable LocalVariableTypeTable(int, int, java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable com.sun.org.apache.bcel.internal.classfile.LocalVariable getLocalVariable(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable com.sun.org.apache.bcel.internal.classfile.LocalVariable[] getLocalVariableTypeTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable int getTableLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.LocalVariableTypeTable void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method Method()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method Method(com.sun.org.apache.bcel.internal.classfile.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method Method(java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method com.sun.org.apache.bcel.internal.classfile.Code getCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method com.sun.org.apache.bcel.internal.classfile.ExceptionTable getExceptionTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method com.sun.org.apache.bcel.internal.classfile.LineNumberTable getLineNumberTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method com.sun.org.apache.bcel.internal.classfile.LocalVariableTable getLocalVariableTable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method com.sun.org.apache.bcel.internal.generic.Type[] getArgumentTypes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Method void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass PMGClass(com.sun.org.apache.bcel.internal.classfile.PMGClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass PMGClass(int, int, java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass int getPMGClassIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass int getPMGIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.PMGClass void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature Signature(com.sun.org.apache.bcel.internal.classfile.Signature) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature Signature(int, int, java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature boolean identPart(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature boolean identStart(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature boolean isActualParameterList(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature boolean isActualParameterList(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature boolean isFormalParameterList(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature boolean isFormalParameterList(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature int getSignatureIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature java.lang.String translate(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature java.lang.String translate(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature void matchGJIdent(com.sun.org.apache.bcel.internal.classfile.Signature.MyByteArrayInputStream, java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature void matchIdent(com.sun.org.apache.bcel.internal.classfile.Signature.MyByteArrayInputStream, java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature.MyByteArrayInputStream MyByteArrayInputStream(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature.MyByteArrayInputStream int mark()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Signature.MyByteArrayInputStream java.lang.String getData()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.SourceFile SourceFile(com.sun.org.apache.bcel.internal.classfile.SourceFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.SourceFile SourceFile(int, int, java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.SourceFile com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.SourceFile int getSourceFileIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.SourceFile java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.SourceFile void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.SourceFile void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMap StackMap(int, int, java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMap com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMap com.sun.org.apache.bcel.internal.classfile.StackMapEntry[] getStackMap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMap int getMapLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMap java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMap void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMap void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry StackMapEntry(java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry com.sun.org.apache.bcel.internal.classfile.StackMapEntry copy()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry com.sun.org.apache.bcel.internal.classfile.StackMapType[] getTypesOfLocals()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry com.sun.org.apache.bcel.internal.classfile.StackMapType[] getTypesOfStackItems()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry int getByteCodeOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry int getNumberOfLocals()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry int getNumberOfStackItems()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapEntry void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType StackMapType(java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType boolean hasIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType byte getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType com.sun.org.apache.bcel.internal.classfile.ConstantPool getConstantPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType com.sun.org.apache.bcel.internal.classfile.StackMapType copy()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType java.lang.String printIndex()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.StackMapType void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Synthetic Synthetic(com.sun.org.apache.bcel.internal.classfile.Synthetic) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Synthetic byte[] getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Synthetic com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Synthetic java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Synthetic void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Synthetic void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown Unknown(com.sun.org.apache.bcel.internal.classfile.Unknown) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown Unknown(int, int, byte[], com.sun.org.apache.bcel.internal.classfile.ConstantPool) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown Unknown(int, int, java.io.DataInputStream, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown byte[] getBytes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown com.sun.org.apache.bcel.internal.classfile.Attribute copy(com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown com.sun.org.apache.bcel.internal.classfile.Unknown[] getUnknownAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown void accept(com.sun.org.apache.bcel.internal.classfile.Visitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Unknown void dump(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility Utility()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility boolean equals(byte[], byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility boolean equals(byte[], byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility boolean equals(byte[], byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility boolean isJavaIdentifierPart(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility boolean isSet(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility boolean is_digit(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility boolean is_space(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility byte typeOfMethodSignature(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility byte typeOfSignature(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility byte[] decode(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility int clearBit(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility int countBrackets(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility int pow2(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility int setBit(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility int[] access$000()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility int[] access$100()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String accessToString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String accessToString(int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String classOrInterface(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String codeToString(byte[], com.sun.org.apache.bcel.internal.classfile.ConstantPool, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String codeToString(byte[], com.sun.org.apache.bcel.internal.classfile.ConstantPool, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String codeToString(byte[], com.sun.org.apache.bcel.internal.classfile.ConstantPool, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String codeToString(byte[], com.sun.org.apache.bcel.internal.classfile.ConstantPool, int, int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String codeToString(com.sun.org.apache.bcel.internal.util.ByteSequence, com.sun.org.apache.bcel.internal.classfile.ConstantPool) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String codeToString(com.sun.org.apache.bcel.internal.util.ByteSequence, com.sun.org.apache.bcel.internal.classfile.ConstantPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String codeToString(com.sun.org.apache.bcel.internal.util.ByteSequence, com.sun.org.apache.bcel.internal.classfile.ConstantPool, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String codeToString(com.sun.org.apache.bcel.internal.util.ByteSequence, com.sun.org.apache.bcel.internal.classfile.ConstantPool, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String compactClassName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String compactClassName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String compactClassName(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String compactClassName(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String compactClassName(java.lang.String, java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String compactClassName(java.lang.String, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String compactClassName(java.lang.String, java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String convertString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String convertString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String encode(byte[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String fillup(java.lang.String, int, boolean, char) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String fillup(java.lang.String, int, boolean, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String format(int, int, boolean, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String getSignature(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String getSignature(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureReturnType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureReturnType(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String, boolean, com.sun.org.apache.bcel.internal.classfile.LocalVariableTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String, boolean, com.sun.org.apache.bcel.internal.classfile.LocalVariableTable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String, boolean, com.sun.org.apache.bcel.internal.classfile.LocalVariableTable) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodSignatureToString(java.lang.String, java.lang.String, java.lang.String, boolean, com.sun.org.apache.bcel.internal.classfile.LocalVariableTable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodTypeToSignature(java.lang.String, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodTypeToSignature(java.lang.String, java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String methodTypeToSignature(java.lang.String, java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String printArray(java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String printArray(java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String printArray(java.lang.Object[], boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String printArray(java.lang.Object[], boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String printArray(java.lang.Object[], boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String printArray(java.lang.Object[], boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String replace(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String replace(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String signatureToString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String signatureToString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String signatureToString(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String signatureToString(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String toHexString(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String toHexString(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String[] methodSignatureArgumentTypes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String[] methodSignatureArgumentTypes(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String[] methodSignatureArgumentTypes(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility java.lang.String[] methodSignatureArgumentTypes(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility short byteToShort(byte)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility short searchOpcode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility void printArray(java.io.PrintStream, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility void printArray(java.io.PrintStream, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility void printArray(java.io.PrintWriter, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility void printArray(java.io.PrintWriter, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility.JavaReader JavaReader(java.io.Reader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility.JavaWriter JavaWriter(java.io.Writer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.org.apache.bcel.internal.classfile.Utility.JavaWriter void write(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
