<root>
  <item name="com.sun.corba.se.impl.io.FVDCodeBaseImpl com.sun.org.omg.CORBA.Repository get_ir()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.FVDCodeBaseImpl com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[] metas(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.FVDCodeBaseImpl com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription[] metas(java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.FVDCodeBaseImpl java.lang.String implementation(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.FVDCodeBaseImpl java.lang.String implementation(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.FVDCodeBaseImpl java.lang.String[] bases(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.FVDCodeBaseImpl java.lang.String[] bases(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.FVDCodeBaseImpl java.lang.String[] implementations(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.FVDCodeBaseImpl java.lang.String[] implementations(java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream boolean enableResolveObjectDelegate(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream boolean invokeObjectReader(com.sun.corba.se.impl.io.ObjectStreamClass, java.lang.Object, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream boolean invokeObjectReader(com.sun.corba.se.impl.io.ObjectStreamClass, java.lang.Object, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream boolean mustUseRemoteValueMembers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream byte getStreamFormatVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream com.sun.org.omg.SendingContext.CodeBase getSender()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Class resolveClass(com.sun.corba.se.impl.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object inputObject(java.lang.Class, java.lang.String, com.sun.org.omg.SendingContext.CodeBase, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object inputObject(java.lang.Class, java.lang.String, com.sun.org.omg.SendingContext.CodeBase, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object inputObject(java.lang.Class, java.lang.String, com.sun.org.omg.SendingContext.CodeBase, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object inputObjectField(com.sun.corba.se.impl.io.ObjectStreamField) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object inputObjectField(com.sun.corba.se.impl.io.ObjectStreamField)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object inputObjectField(org.omg.CORBA.ValueMember, com.sun.org.omg.SendingContext.CodeBase) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object inputObjectField(org.omg.CORBA.ValueMember, com.sun.org.omg.SendingContext.CodeBase) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object inputObjectField(org.omg.CORBA.ValueMember, com.sun.org.omg.SendingContext.CodeBase)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object inputObjectUsingFVD(java.lang.Class, java.lang.String, com.sun.org.omg.SendingContext.CodeBase, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object resolveObject(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object simpleReadObject(java.lang.Class, java.lang.String, com.sun.org.omg.SendingContext.CodeBase, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object skipObjectUsingFVD(java.lang.String, com.sun.org.omg.SendingContext.CodeBase) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.Object skipObjectUsingFVD(java.lang.String, com.sun.org.omg.SendingContext.CodeBase)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;null;_,!null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.lang.String internalReadUTF(org.omg.CORBA.portable.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.util.Vector getOrderedDescriptions(java.lang.String, com.sun.org.omg.SendingContext.CodeBase) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream java.util.Vector getOrderedDescriptions(java.lang.String, com.sun.org.omg.SendingContext.CodeBase)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream javax.rmi.CORBA.ValueHandler getValueHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream org.omg.CORBA_2_3.portable.InputStream getOrbStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void handleOptionalDataMarshalException(org.omg.CORBA.MARSHAL, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void inputClassFields(java.lang.Object, java.lang.Class, com.sun.corba.se.impl.io.ObjectStreamClass, org.omg.CORBA.ValueMember[], com.sun.org.omg.SendingContext.CodeBase) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void inputClassFields(java.lang.Object, java.lang.Class, com.sun.corba.se.impl.io.ObjectStreamClass, org.omg.CORBA.ValueMember[], com.sun.org.omg.SendingContext.CodeBase) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void inputClassFields(java.lang.Object, java.lang.Class, com.sun.corba.se.impl.io.ObjectStreamField[], com.sun.org.omg.SendingContext.CodeBase) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void inputClassFields(java.lang.Object, java.lang.Class, com.sun.corba.se.impl.io.ObjectStreamField[], com.sun.org.omg.SendingContext.CodeBase) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void inputClassFields(java.lang.Object, java.lang.Class, com.sun.corba.se.impl.io.ObjectStreamField[], com.sun.org.omg.SendingContext.CodeBase) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void inputPrimitiveField(java.lang.Object, java.lang.Class, com.sun.corba.se.impl.io.ObjectStreamField) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void readFully(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void readStreamHeader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void registerValidation(java.io.ObjectInputValidation, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setBooleanField(java.lang.Object, java.lang.Class, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setBooleanField(java.lang.Object, java.lang.Class, java.lang.String, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setByteField(java.lang.Object, java.lang.Class, java.lang.String, byte) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setByteField(java.lang.Object, java.lang.Class, java.lang.String, byte) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setCharField(java.lang.Object, java.lang.Class, java.lang.String, char) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setCharField(java.lang.Object, java.lang.Class, java.lang.String, char) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setDoubleField(java.lang.Object, java.lang.Class, java.lang.String, double) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setDoubleField(java.lang.Object, java.lang.Class, java.lang.String, double) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setFloatField(java.lang.Object, java.lang.Class, java.lang.String, float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setFloatField(java.lang.Object, java.lang.Class, java.lang.String, float) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setIntField(java.lang.Object, java.lang.Class, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setIntField(java.lang.Object, java.lang.Class, java.lang.String, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setLongField(java.lang.Object, java.lang.Class, java.lang.String, long) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setLongField(java.lang.Object, java.lang.Class, java.lang.String, long) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setObjectField(java.lang.Object, java.lang.Class, java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setObjectField(java.lang.Object, java.lang.Class, java.lang.String, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setShortField(java.lang.Object, java.lang.Class, java.lang.String, short) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setShortField(java.lang.Object, java.lang.Class, java.lang.String, short) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void setTestFVDFlag(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void simpleSkipObject(java.lang.String, com.sun.org.omg.SendingContext.CodeBase) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream void throwAwayData(org.omg.CORBA.ValueMember[], com.sun.org.omg.SendingContext.CodeBase) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream.2 2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPInputStream.2 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream boolean checkSpecialClasses(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream boolean checkSpecialClasses(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream boolean checkSubstitutableSpecialClasses(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream boolean checkSubstitutableSpecialClasses(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream boolean enableReplaceObjectDelegate(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream com.sun.corba.se.impl.io.ObjectStreamField[] getFieldsNoCopy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream java.lang.Object replaceObject(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream org.omg.CORBA_2_3.portable.OutputStream getOrbStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void annotateClass(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void drain()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void internalWriteUTF(org.omg.CORBA.portable.OutputStream, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void invokeObjectWriter(com.sun.corba.se.impl.io.ObjectStreamClass, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void outputClassFields(java.lang.Object, java.lang.Class, com.sun.corba.se.impl.io.ObjectStreamField[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void outputObject(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void write(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void writeBytes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void writeChars(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void writeField(com.sun.corba.se.impl.io.ObjectStreamField, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void writeObjectField(com.sun.corba.se.impl.io.ObjectStreamField, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream void writeStreamHeader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.IIOPOutputStream.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook java.io.ObjectInputStream.GetField readFields()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.DefaultState DefaultState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.DefaultState void beginUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.HookGetFields java.io.ObjectStreamClass getObjectStreamClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectDefaultsSentState InReadObjectDefaultsSentState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectDefaultsSentState void beginUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectDefaultsSentState void endDefaultReadObject(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectDefaultsSentState void endUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectDefaultsSentState void readData(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectNoMoreOptionalDataState InReadObjectNoMoreOptionalDataState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectNoMoreOptionalDataState void readData(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectOptionalDataState InReadObjectOptionalDataState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectOptionalDataState void beginDefaultReadObject(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectOptionalDataState void beginUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectOptionalDataState void endUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectPastDefaultsRemoteDidNotUseWOState InReadObjectPastDefaultsRemoteDidNotUseWOState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectPastDefaultsRemoteDidNotUseWOState void beginDefaultReadObject(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectPastDefaultsRemoteDidNotUseWOState void beginUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectPastDefaultsRemoteDidNotUseWOState void readData(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectRemoteDidNotUseWriteObjectState InReadObjectRemoteDidNotUseWriteObjectState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectRemoteDidNotUseWriteObjectState void beginUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectRemoteDidNotUseWriteObjectState void endDefaultReadObject(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.InReadObjectRemoteDidNotUseWriteObjectState void readData(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.NoReadObjectDefaultsSentState NoReadObjectDefaultsSentState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.NoReadObjectDefaultsSentState void endUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState ReadObjectState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void beginDefaultReadObject(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void beginDefaultReadObject(com.sun.corba.se.impl.io.InputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void beginUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void beginUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void endDefaultReadObject(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void endDefaultReadObject(com.sun.corba.se.impl.io.InputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void endUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void endUnmarshalCustomValue(com.sun.corba.se.impl.io.InputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void readData(com.sun.corba.se.impl.io.InputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.InputStreamHook.ReadObjectState void readData(com.sun.corba.se.impl.io.InputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass ObjectStreamClass(java.lang.Class, com.sun.corba.se.impl.io.ObjectStreamClass, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean access$1200(com.sun.corba.se.impl.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean access$1200(com.sun.corba.se.impl.io.ObjectStreamClass)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean access$800(com.sun.corba.se.impl.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean access$800(com.sun.corba.se.impl.io.ObjectStreamClass)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean compareClassNames(java.lang.String, java.lang.String, char) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean compareClassNames(java.lang.String, java.lang.String, char) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean hasExternalizableBlockDataMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean hasReadObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean hasWriteObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean isExternalizable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean isNonSerializable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean isSerializable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean packageEquals(java.lang.Class, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean packageEquals(java.lang.Class, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass boolean typeEquals(com.sun.corba.se.impl.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamClass findDescriptorFor(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamClass findDescriptorFor(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamClass getSuperclass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamClass localClassDescriptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamClass lookup(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamClass lookup(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamClass lookupInternal(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamClass lookupInternal(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamClass.PersistentFieldsValue access$100()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamField getField(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamField[] access$000(com.sun.corba.se.impl.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamField[] access$000(com.sun.corba.se.impl.io.ObjectStreamClass)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamField[] access$002(com.sun.corba.se.impl.io.ObjectStreamClass, com.sun.corba.se.impl.io.ObjectStreamField[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamField[] access$002(com.sun.corba.se.impl.io.ObjectStreamClass, com.sun.corba.se.impl.io.ObjectStreamField[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass com.sun.corba.se.impl.io.ObjectStreamField[] getFieldsNoCopy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.Class forClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.Class[] access$500()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.String computeRMIIIOPOptionalDataRepId()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.String getRMIIIOPOptionalDataRepId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.String getSignature(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.String getSignature(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.String getSignature(java.lang.reflect.Constructor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.String getSignature(java.lang.reflect.Constructor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.String getSignature(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.String getSignature(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Constructor access$1000(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Constructor access$1100(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Constructor access$902(com.sun.corba.se.impl.io.ObjectStreamClass, java.lang.reflect.Constructor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Constructor access$902(com.sun.corba.se.impl.io.ObjectStreamClass, java.lang.reflect.Constructor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Constructor getExternalizableConstructor(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Constructor getSerializableConstructor(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method access$1300(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method access$1300(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method access$1300(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method access$402(com.sun.corba.se.impl.io.ObjectStreamClass, java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method access$402(com.sun.corba.se.impl.io.ObjectStreamClass, java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method access$600(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method access$600(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method access$600(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method access$702(com.sun.corba.se.impl.io.ObjectStreamClass, java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method access$702(com.sun.corba.se.impl.io.ObjectStreamClass, java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method getInheritableMethod(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method getInheritableMethod(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method getInheritableMethod(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method getPrivateMethod(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method getPrivateMethod(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass java.lang.reflect.Method getPrivateMethod(java.lang.Class, java.lang.String, java.lang.Class[], java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass long access$202(com.sun.corba.se.impl.io.ObjectStreamClass, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass long getActualSerialVersionUID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass long getActualSerialVersionUID(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass long getSerialVersionUID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass long getSerialVersionUID(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass void insertDescriptorFor(com.sun.corba.se.impl.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass void setClass(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.2 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.3 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.4 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareClassByName CompareClassByName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareClassByName CompareClassByName(com.sun.corba.se.impl.io.ObjectStreamClass.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareClassByName CompareClassByName(com.sun.corba.se.impl.io.ObjectStreamClass.1)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareClassByName int compare(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareClassByName int compare(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareMemberByName CompareMemberByName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareMemberByName CompareMemberByName(com.sun.corba.se.impl.io.ObjectStreamClass.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareMemberByName CompareMemberByName(com.sun.corba.se.impl.io.ObjectStreamClass.1)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareMemberByName int compare(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareMemberByName int compare(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareObjStrFieldsByName CompareObjStrFieldsByName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareObjStrFieldsByName CompareObjStrFieldsByName(com.sun.corba.se.impl.io.ObjectStreamClass.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareObjStrFieldsByName CompareObjStrFieldsByName(com.sun.corba.se.impl.io.ObjectStreamClass.1)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareObjStrFieldsByName int compare(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.CompareObjStrFieldsByName int compare(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.MethodSignature MethodSignature(java.lang.reflect.Member) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.MethodSignature boolean isConstructor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.MethodSignature com.sun.corba.se.impl.io.ObjectStreamClass.MethodSignature[] removePrivateAndSort(java.lang.reflect.Member[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.MethodSignature com.sun.corba.se.impl.io.ObjectStreamClass.MethodSignature[] removePrivateAndSort(java.lang.reflect.Member[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.ObjectStreamClassEntry java.lang.Object get()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.PersistentFieldsValue com.sun.corba.se.impl.io.ObjectStreamField[] get(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.PersistentFieldsValue com.sun.corba.se.impl.io.ObjectStreamField[] translateFields(java.io.ObjectStreamField[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClass.PersistentFieldsValue com.sun.corba.se.impl.io.ObjectStreamField[] translateFields(java.io.ObjectStreamField[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClassCorbaExt ObjectStreamClassCorbaExt()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClassCorbaExt boolean isAbstractInterface(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClassCorbaExt boolean isAny(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClassCorbaExt boolean isAny(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamClassCorbaExt.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField ObjectStreamField(java.lang.String, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField ObjectStreamField(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField boolean isPrimitive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField boolean typeEquals(com.sun.corba.se.impl.io.ObjectStreamField) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField boolean typeEquals(com.sun.corba.se.impl.io.ObjectStreamField)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField char getTypeCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField int compareTo(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField java.lang.Class getClazz()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField java.lang.String getSignature()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField java.lang.String getTypeString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField java.lang.reflect.Field getField()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField long getFieldID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ObjectStreamField.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook byte getStreamFormatVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.DefaultState DefaultState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.DefaultState void enterWriteObject(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.HookPutFields HookPutFields(com.sun.corba.se.impl.io.OutputStreamHook, com.sun.corba.se.impl.io.OutputStreamHook.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.HookPutFields void write(java.io.ObjectOutput) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.InWriteObjectState InWriteObjectState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.InWriteObjectState void defaultWriteObject(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.InWriteObjectState void enterWriteObject(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.InWriteObjectState void exitWriteObject(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.InWriteObjectState void writeData(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState WriteObjectState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState void defaultWriteObject(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState void defaultWriteObject(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState void enterWriteObject(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState void enterWriteObject(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState void exitWriteObject(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState void exitWriteObject(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState void writeData(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WriteObjectState void writeData(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteCustomDataState WroteCustomDataState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteCustomDataState void defaultWriteObject(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteCustomDataState void exitWriteObject(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteCustomDataState void writeData(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteCustomDataState void writeData(com.sun.corba.se.impl.io.OutputStreamHook)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteDefaultDataState WroteDefaultDataState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteDefaultDataState void defaultWriteObject(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteDefaultDataState void exitWriteObject(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.OutputStreamHook.WroteDefaultDataState void writeData(com.sun.corba.se.impl.io.OutputStreamHook) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl T createCustom(java.lang.Class&lt;T&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl T createCustom(java.lang.Class&lt;T&gt;, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl boolean isAbstractBase(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl boolean isArray(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl boolean isCustomMarshaled(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl boolean isSequence(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl byte getMaximumStreamFormatVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl com.sun.corba.se.impl.io.IIOPInputStream access$100(com.sun.corba.se.impl.io.ValueHandlerImpl, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl com.sun.corba.se.impl.io.IIOPInputStream access$100(com.sun.corba.se.impl.io.ValueHandlerImpl, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl com.sun.corba.se.impl.io.IIOPInputStream access$100(com.sun.corba.se.impl.io.ValueHandlerImpl, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl com.sun.corba.se.impl.io.IIOPInputStream createInputStreamBuiltInNoPriv(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl com.sun.corba.se.impl.io.IIOPInputStream createInputStreamBuiltInNoPriv(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl com.sun.corba.se.impl.io.IIOPOutputStream access$000(com.sun.corba.se.impl.io.ValueHandlerImpl, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl com.sun.corba.se.impl.io.IIOPOutputStream access$000(com.sun.corba.se.impl.io.ValueHandlerImpl, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl com.sun.corba.se.impl.io.IIOPOutputStream access$000(com.sun.corba.se.impl.io.ValueHandlerImpl, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl com.sun.corba.se.impl.io.IIOPOutputStream createOutputStreamBuiltInNoPriv(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl com.sun.corba.se.impl.io.IIOPOutputStream createOutputStreamBuiltInNoPriv(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl com.sun.corba.se.impl.io.ValueHandlerImpl getInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl com.sun.corba.se.impl.io.ValueHandlerImpl getInstance(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.io.Serializable readValue(org.omg.CORBA.portable.InputStream, int, java.lang.Class, java.lang.String, org.omg.SendingContext.RunTime) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.io.Serializable readValue(org.omg.CORBA.portable.InputStream, int, java.lang.Class, java.lang.String, org.omg.SendingContext.RunTime) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.io.Serializable readValue(org.omg.CORBA.portable.InputStream, int, java.lang.Class, java.lang.String, org.omg.SendingContext.RunTime)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.io.Serializable readValueInternal(com.sun.corba.se.impl.io.IIOPInputStream, org.omg.CORBA_2_3.portable.InputStream, int, java.lang.Class, java.lang.String, com.sun.org.omg.SendingContext.CodeBase) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.io.Serializable readValueInternal(com.sun.corba.se.impl.io.IIOPInputStream, org.omg.CORBA_2_3.portable.InputStream, int, java.lang.Class, java.lang.String, com.sun.org.omg.SendingContext.CodeBase) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.io.Serializable readValueInternal(com.sun.corba.se.impl.io.IIOPInputStream, org.omg.CORBA_2_3.portable.InputStream, int, java.lang.Class, java.lang.String, com.sun.org.omg.SendingContext.CodeBase)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.io.Serializable writeReplace(java.io.Serializable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.Class getAnyClassFromType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.Class getAnyClassFromType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.Class getClassFromType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.Class getClassFromType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.Object read_Array(com.sun.corba.se.impl.io.IIOPInputStream, org.omg.CORBA_2_3.portable.InputStream, java.lang.Class, com.sun.org.omg.SendingContext.CodeBase, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.Object read_Array(com.sun.corba.se.impl.io.IIOPInputStream, org.omg.CORBA_2_3.portable.InputStream, java.lang.Class, com.sun.org.omg.SendingContext.CodeBase, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.Object read_Array(com.sun.corba.se.impl.io.IIOPInputStream, org.omg.CORBA_2_3.portable.InputStream, java.lang.Class, com.sun.org.omg.SendingContext.CodeBase, int) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.Object read_Array(com.sun.corba.se.impl.io.IIOPInputStream, org.omg.CORBA_2_3.portable.InputStream, java.lang.Class, com.sun.org.omg.SendingContext.CodeBase, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.String createForAnyType(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.String getClassName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.String getClassName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.String getDefinedInId(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.String getInputStreamClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.String getOutputStreamClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.String getRMIRepositoryID(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.String getSerialVersionUID(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl java.lang.String getUnqualifiedName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl org.omg.CORBA.TCKind getJavaCharTCKind()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl void readCharArray(org.omg.CORBA_2_3.portable.InputStream, char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl void writeCharArray(org.omg.CORBA_2_3.portable.OutputStream, char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl void writeValue(org.omg.CORBA.portable.OutputStream, java.io.Serializable) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl void writeValue(org.omg.CORBA.portable.OutputStream, java.io.Serializable, byte) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl void writeValueInternal(com.sun.corba.se.impl.io.IIOPOutputStream, org.omg.CORBA_2_3.portable.OutputStream, java.io.Serializable, byte) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl void writeValueWithVersion(org.omg.CORBA.portable.OutputStream, java.io.Serializable, byte) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl void write_Array(org.omg.CORBA_2_3.portable.OutputStream, java.io.Serializable, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl void write_Array(org.omg.CORBA_2_3.portable.OutputStream, java.io.Serializable, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl void write_Array(org.omg.CORBA_2_3.portable.OutputStream, java.io.Serializable, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl.2 com.sun.corba.se.impl.io.IIOPOutputStream run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl.2 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl.3 com.sun.corba.se.impl.io.IIOPInputStream run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueHandlerImpl.3 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility ValueUtility()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility boolean exists(java.lang.String, java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility boolean exists(java.lang.String, java.lang.String[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility boolean isAssignableFrom(java.lang.String, com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription, com.sun.org.omg.SendingContext.CodeBase) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility boolean isAssignableFrom(java.lang.String, com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription, com.sun.org.omg.SendingContext.CodeBase)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription translate(org.omg.CORBA.ORB, com.sun.corba.se.impl.io.ObjectStreamClass, javax.rmi.CORBA.ValueHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription translate(org.omg.CORBA.ORB, com.sun.corba.se.impl.io.ObjectStreamClass, javax.rmi.CORBA.ValueHandler) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription translate(org.omg.CORBA.ORB, com.sun.corba.se.impl.io.ObjectStreamClass, javax.rmi.CORBA.ValueHandler) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility com.sun.org.omg.CORBA.ValueDefPackage.FullValueDescription translate(org.omg.CORBA.ORB, com.sun.corba.se.impl.io.ObjectStreamClass, javax.rmi.CORBA.ValueHandler)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility java.lang.String getSignature(org.omg.CORBA.ValueMember) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility java.lang.String getSignature(org.omg.CORBA.ValueMember)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility org.omg.CORBA.TypeCode createTypeCodeForClass(org.omg.CORBA.ORB, java.lang.Class, javax.rmi.CORBA.ValueHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility org.omg.CORBA.TypeCode createTypeCodeForClassInternal(org.omg.CORBA.ORB, java.lang.Class, javax.rmi.CORBA.ValueHandler, com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility org.omg.CORBA.TypeCode createTypeCodeForClassInternal(org.omg.CORBA.ORB, java.lang.Class, javax.rmi.CORBA.ValueHandler, com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility org.omg.CORBA.TypeCode createTypeCodeInternal(org.omg.CORBA.ORB, java.lang.Class, javax.rmi.CORBA.ValueHandler, java.lang.String, com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility org.omg.CORBA.TypeCode createTypeCodeInternal(org.omg.CORBA.ORB, java.lang.Class, javax.rmi.CORBA.ValueHandler, java.lang.String, com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility org.omg.CORBA.TypeCode getPrimitiveTypeCodeForClass(org.omg.CORBA.ORB, java.lang.Class, javax.rmi.CORBA.ValueHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility org.omg.CORBA.TypeCode getPrimitiveTypeCodeForClass(org.omg.CORBA.ORB, java.lang.Class, javax.rmi.CORBA.ValueHandler) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility org.omg.CORBA.ValueMember[] translateMembers(org.omg.CORBA.ORB, com.sun.corba.se.impl.io.ObjectStreamClass, javax.rmi.CORBA.ValueHandler, com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility org.omg.CORBA.ValueMember[] translateMembers(org.omg.CORBA.ORB, com.sun.corba.se.impl.io.ObjectStreamClass, javax.rmi.CORBA.ValueHandler, com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility.1 com.sun.corba.se.impl.io.ValueHandlerImpl newValueHandlerImpl()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack IdentityKeyValueStack(com.sun.corba.se.impl.io.ValueUtility.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack java.lang.Object get(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack.KeyValuePair boolean equals(com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack.KeyValuePair) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack.KeyValuePair boolean equals(com.sun.corba.se.impl.io.ValueUtility.IdentityKeyValueStack.KeyValuePair)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
</root>
