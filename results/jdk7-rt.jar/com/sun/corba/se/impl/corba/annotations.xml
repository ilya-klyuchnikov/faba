<root>
  <item name="com.sun.corba.se.impl.corba.AnyImpl AnyImpl(com.sun.corba.se.spi.orb.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl AnyImpl(com.sun.corba.se.spi.orb.ORB, org.omg.CORBA.Any) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl AnyImpl(com.sun.corba.se.spi.orb.ORB, org.omg.CORBA.Any) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl boolean equal(org.omg.CORBA.Any)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl boolean equalMember(org.omg.CORBA.TypeCode, org.omg.CORBA.portable.InputStream, org.omg.CORBA.portable.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl boolean isInitialized()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl com.sun.corba.se.impl.corba.AnyImpl convertToNative(com.sun.corba.se.spi.orb.ORB, org.omg.CORBA.Any) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl com.sun.corba.se.impl.corba.AnyImpl convertToNative(com.sun.corba.se.spi.orb.ORB, org.omg.CORBA.Any)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl org.omg.CORBA.Any extractAny(org.omg.CORBA.TypeCode, com.sun.corba.se.spi.orb.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl org.omg.CORBA.Any extractAny(org.omg.CORBA.TypeCode, com.sun.corba.se.spi.orb.ORB) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl org.omg.CORBA.Any extractAnyFromStream(org.omg.CORBA.TypeCode, org.omg.CORBA.portable.InputStream, com.sun.corba.se.spi.orb.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl org.omg.CORBA.Any extractAnyFromStream(org.omg.CORBA.TypeCode, org.omg.CORBA.portable.InputStream, com.sun.corba.se.spi.orb.ORB) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl org.omg.CORBA.TypeCode createTypeCodeForClass(java.lang.Class, com.sun.corba.se.spi.orb.ORB) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl org.omg.CORBA.TypeCode getPrimitiveTypeCodeForClass(java.lang.Class, com.sun.corba.se.spi.orb.ORB) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl org.omg.CORBA.TypeCode getPrimitiveTypeCodeForClass(java.lang.Class, com.sun.corba.se.spi.orb.ORB) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl org.omg.CORBA.TypeCode realType(org.omg.CORBA.TypeCode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl org.omg.CORBA.TypeCode type()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl org.omg.CORBA.portable.Streamable extract_Streamable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl void checkExtractBadOperationList(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl void insert_Object(org.omg.CORBA.Object, org.omg.CORBA.TypeCode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl void insert_Streamable(org.omg.CORBA.portable.Streamable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl void insert_Value(java.io.Serializable, org.omg.CORBA.TypeCode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl void insert_fixed(java.math.BigDecimal, org.omg.CORBA.TypeCode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl void read_value(org.omg.CORBA.portable.InputStream, org.omg.CORBA.TypeCode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl void type(org.omg.CORBA.TypeCode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl.1 1(com.sun.corba.se.impl.corba.AnyImpl, com.sun.corba.se.spi.orb.ORB)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl.1 com.sun.corba.se.impl.corba.AnyImpl.AnyOutputStream run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl.AnyInputStream AnyInputStream(com.sun.corba.se.impl.encoding.EncapsInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl.AnyOutputStream AnyOutputStream(com.sun.corba.se.spi.orb.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImpl.AnyOutputStream org.omg.CORBA.portable.InputStream create_input_stream()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImplHelper AnyImplHelper()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImplHelper java.lang.String id()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImplHelper org.omg.CORBA.Any extract(org.omg.CORBA.Any) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImplHelper org.omg.CORBA.Any read(org.omg.CORBA.portable.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImplHelper void insert(org.omg.CORBA.Any, org.omg.CORBA.Any) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AnyImplHelper void write(org.omg.CORBA.portable.OutputStream, org.omg.CORBA.Any) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.AsynchInvoke AsynchInvoke(com.sun.corba.se.spi.orb.ORB, com.sun.corba.se.impl.corba.RequestImpl, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.CORBAObjectImpl CORBAObjectImpl()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.CORBAObjectImpl java.lang.String[] _ids()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ContextImpl ContextImpl(org.omg.CORBA.Context) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ContextImpl ContextImpl(org.omg.CORBA.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ContextImpl org.omg.CORBA.Context create_child(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ContextImpl org.omg.CORBA.NVList get_values(java.lang.String, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ContextImpl org.omg.CORBA.NVList get_values(java.lang.String, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ContextImpl void delete_values(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ContextImpl void set_one_value(java.lang.String, org.omg.CORBA.Any) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ContextImpl void set_one_value(java.lang.String, org.omg.CORBA.Any) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ContextImpl void set_values(org.omg.CORBA.NVList) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.EnvironmentImpl EnvironmentImpl()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.EnvironmentImpl java.lang.Exception exception()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.EnvironmentImpl void clear()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.EnvironmentImpl void exception(java.lang.Exception)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.NVListImpl org.omg.CORBA.NamedValue add(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.NVListImpl org.omg.CORBA.NamedValue add_item(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.NVListImpl org.omg.CORBA.NamedValue add_value(java.lang.String, org.omg.CORBA.Any, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.NamedValueImpl NamedValueImpl(com.sun.corba.se.spi.orb.ORB, java.lang.String, org.omg.CORBA.Any, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.NamedValueImpl int flags()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.NamedValueImpl java.lang.String name()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.NamedValueImpl org.omg.CORBA.Any value()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.PrincipalImpl PrincipalImpl()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.PrincipalImpl byte[] name()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.PrincipalImpl void name(byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl RequestImpl(com.sun.corba.se.spi.orb.ORB, org.omg.CORBA.Object, org.omg.CORBA.Context, java.lang.String, org.omg.CORBA.NVList, org.omg.CORBA.NamedValue, org.omg.CORBA.ExceptionList, org.omg.CORBA.ContextList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl RequestImpl(com.sun.corba.se.spi.orb.ORB, org.omg.CORBA.Object, org.omg.CORBA.Context, java.lang.String, org.omg.CORBA.NVList, org.omg.CORBA.NamedValue, org.omg.CORBA.ExceptionList, org.omg.CORBA.ContextList) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl RequestImpl(com.sun.corba.se.spi.orb.ORB, org.omg.CORBA.Object, org.omg.CORBA.Context, java.lang.String, org.omg.CORBA.NVList, org.omg.CORBA.NamedValue, org.omg.CORBA.ExceptionList, org.omg.CORBA.ContextList) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl RequestImpl(com.sun.corba.se.spi.orb.ORB, org.omg.CORBA.Object, org.omg.CORBA.Context, java.lang.String, org.omg.CORBA.NVList, org.omg.CORBA.NamedValue, org.omg.CORBA.ExceptionList, org.omg.CORBA.ContextList) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl boolean poll_response()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl java.lang.String operation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl org.omg.CORBA.ContextList contexts()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl org.omg.CORBA.Environment env()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl org.omg.CORBA.ExceptionList exceptions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl org.omg.CORBA.NVList arguments()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl org.omg.CORBA.NamedValue result()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl org.omg.CORBA.Object target()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.RequestImpl void ctx(org.omg.CORBA.Context)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ServerRequestImpl ServerRequestImpl(com.sun.corba.se.spi.protocol.CorbaMessageMediator, com.sun.corba.se.spi.orb.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ServerRequestImpl ServerRequestImpl(com.sun.corba.se.spi.protocol.CorbaMessageMediator, com.sun.corba.se.spi.orb.ORB) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ServerRequestImpl java.lang.String operation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ServerRequestImpl void arguments(org.omg.CORBA.NVList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ServerRequestImpl void set_exception(org.omg.CORBA.Any) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.ServerRequestImpl void set_result(org.omg.CORBA.Any) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TCUtility TCUtility()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TCUtility void marshalIn(org.omg.CORBA.portable.OutputStream, org.omg.CORBA.TypeCode, long, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TCUtility void unmarshalIn(org.omg.CORBA.portable.InputStream, org.omg.CORBA.TypeCode, long[], java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TCUtility void unmarshalIn(org.omg.CORBA.portable.InputStream, org.omg.CORBA.TypeCode, long[], java.lang.Object[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TCUtility void unmarshalIn(org.omg.CORBA.portable.InputStream, org.omg.CORBA.TypeCode, long[], java.lang.Object[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, int, int, org.omg.CORBA.TypeCode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, int, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, int, java.lang.String, java.lang.String, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, int, java.lang.String, java.lang.String, org.omg.CORBA.StructMember[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, int, java.lang.String, java.lang.String, org.omg.CORBA.TypeCode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, int, java.lang.String, java.lang.String, org.omg.CORBA.TypeCode, org.omg.CORBA.UnionMember[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, int, java.lang.String, java.lang.String, short, org.omg.CORBA.TypeCode, org.omg.CORBA.ValueMember[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, int, java.lang.String, java.lang.String, short, org.omg.CORBA.TypeCode, org.omg.CORBA.ValueMember[]) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, int, short, short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, org.omg.CORBA.TypeCode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl TypeCodeImpl(com.sun.corba.se.spi.orb.ORB, org.omg.CORBA.TypeCode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl boolean is_recursive()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl boolean read_value_kind(com.sun.corba.se.impl.encoding.TypeCodeReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl com.sun.corba.se.impl.corba.TypeCodeImpl convertToNative(com.sun.corba.se.spi.orb.ORB, org.omg.CORBA.TypeCode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl com.sun.corba.se.impl.corba.TypeCodeImpl convertToNative(com.sun.corba.se.spi.orb.ORB, org.omg.CORBA.TypeCode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl java.lang.String description()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl org.omg.CORBA.TypeCode get_compact_typecode()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl org.omg.CORBA.TypeCode realType(org.omg.CORBA.TypeCode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl short digits(java.math.BigDecimal) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl short scale(java.math.BigDecimal) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl void printStream(java.io.PrintStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl void printStream(java.io.PrintStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl void read_value(org.omg.CORBA_2_3.portable.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl void read_value_kind(org.omg.CORBA_2_3.portable.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl void read_value_recursive(com.sun.corba.se.impl.encoding.TypeCodeInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl void setCaching(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl void setParent(com.sun.corba.se.impl.corba.TypeCodeImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl void write_value(com.sun.corba.se.impl.encoding.TypeCodeOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImpl void write_value(org.omg.CORBA_2_3.portable.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImplHelper TypeCodeImplHelper()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImplHelper java.lang.String id()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImplHelper org.omg.CORBA.TypeCode extract(org.omg.CORBA.Any) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImplHelper org.omg.CORBA.TypeCode read(org.omg.CORBA.portable.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImplHelper void insert(org.omg.CORBA.Any, org.omg.CORBA.TypeCode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImplHelper void write(org.omg.CORBA.portable.OutputStream, com.sun.corba.se.impl.corba.TypeCodeImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.corba.TypeCodeImplHelper void write(org.omg.CORBA.portable.OutputStream, org.omg.CORBA.TypeCode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
