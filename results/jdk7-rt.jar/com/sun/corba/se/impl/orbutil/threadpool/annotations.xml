<root>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl com.sun.corba.se.impl.logging.ORBUtilSystemException access$200()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl com.sun.corba.se.spi.monitoring.MonitoredObject getMonitoredObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl com.sun.corba.se.spi.orbutil.threadpool.WorkQueue access$600(com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl com.sun.corba.se.spi.orbutil.threadpool.WorkQueue access$600(com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl com.sun.corba.se.spi.orbutil.threadpool.WorkQueue getAnyWorkQueue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl int currentNumberOfThreads()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl int maximumNumberOfThreads()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl int minimumNumberOfThreads()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl int numberOfAvailableThreads()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl int numberOfBusyThreads()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl int numberOfWorkQueues()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl java.lang.Thread access$000(com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl java.lang.Thread access$000(com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;null;_,!null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl java.lang.Thread createWorkerThreadHelper(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl java.util.concurrent.atomic.AtomicLong access$300(com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl java.util.concurrent.atomic.AtomicLong access$300(com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl java.util.concurrent.atomic.AtomicLong access$400(com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl java.util.concurrent.atomic.AtomicLong access$400(com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl long access$500(com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl long access$500(com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl long averageWorkCompletionTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl long currentProcessedCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl long idleTimeoutForThreads()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl void notifyForAvailableWork(com.sun.corba.se.spi.orbutil.threadpool.WorkQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl.1 java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl.2 java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl.3 java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl.4 java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl.5 java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl.6 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl.WorkerThread WorkerThread(com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl, java.lang.ThreadGroup, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl.WorkerThread java.lang.String composeWorkerThreadName(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl.WorkerThread java.lang.String composeWorkerThreadName(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl.WorkerThread java.lang.String composeWorkerThreadName(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolImpl.WorkerThread void resetClassLoader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl com.sun.corba.se.spi.orbutil.threadpool.ThreadPool getDefaultThreadPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl com.sun.corba.se.spi.orbutil.threadpool.ThreadPool getThreadPool(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl com.sun.corba.se.spi.orbutil.threadpool.ThreadPool getThreadPool(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl com.sun.corba.se.spi.orbutil.threadpool.ThreadPool getThreadPool(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl com.sun.corba.se.spi.orbutil.threadpool.ThreadPoolChooser getThreadPoolChooser(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl com.sun.corba.se.spi.orbutil.threadpool.ThreadPoolChooser getThreadPoolChooser(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl com.sun.corba.se.spi.orbutil.threadpool.ThreadPoolChooser getThreadPoolChooser(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;null;null-&gt;null&quot;,pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl int getThreadPoolChooserNumericId(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl int getThreadPoolChooserNumericId(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl int getThreadPoolNumericId(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl int getThreadPoolNumericId(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl java.lang.String getThreadPoolStringId(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl java.util.concurrent.atomic.AtomicInteger access$000()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl void setThreadPoolChooser(java.lang.String, com.sun.corba.se.spi.orbutil.threadpool.ThreadPoolChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl void setThreadPoolChooser(java.lang.String, com.sun.corba.se.spi.orbutil.threadpool.ThreadPoolChooser) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl void setThreadPoolChooser(java.lang.String, com.sun.corba.se.spi.orbutil.threadpool.ThreadPoolChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.ThreadPoolManagerImpl.1 java.lang.ThreadGroup run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.WorkQueueImpl com.sun.corba.se.spi.monitoring.MonitoredObject getMonitoredObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.WorkQueueImpl com.sun.corba.se.spi.orbutil.threadpool.ThreadPool getThreadPool()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.WorkQueueImpl com.sun.corba.se.spi.orbutil.threadpool.Work requestWork(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.WorkQueueImpl java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.WorkQueueImpl long averageTimeInQueue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.WorkQueueImpl long totalWorkItemsAdded()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.WorkQueueImpl void addWork(com.sun.corba.se.spi.orbutil.threadpool.Work) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.WorkQueueImpl.1 java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.WorkQueueImpl.2 java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.corba.se.impl.orbutil.threadpool.WorkQueueImpl.3 java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
