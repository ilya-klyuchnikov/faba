<root>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.Chunk com.sun.xml.internal.org.jvnet.mimepull.Chunk createNext(com.sun.xml.internal.org.jvnet.mimepull.DataHead, java.nio.ByteBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.DataFile DataFile(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.DataHead com.sun.xml.internal.org.jvnet.mimepull.MIMEPart access$000(com.sun.xml.internal.org.jvnet.mimepull.DataHead) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.DataHead java.io.InputStream read()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.DataHead java.io.InputStream readOnce()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.DataHead void addBody(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.DataHead.ReadMultiStream ReadMultiStream(com.sun.xml.internal.org.jvnet.mimepull.DataHead) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.DataHead.ReadOnceStream ReadOnceStream(com.sun.xml.internal.org.jvnet.mimepull.DataHead) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.FileData FileData(com.sun.xml.internal.org.jvnet.mimepull.DataFile, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.FileData FileData(com.sun.xml.internal.org.jvnet.mimepull.DataFile, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.FileData byte[] read()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.FileData com.sun.xml.internal.org.jvnet.mimepull.Data createNext(com.sun.xml.internal.org.jvnet.mimepull.DataHead, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.FileData com.sun.xml.internal.org.jvnet.mimepull.Data createNext(com.sun.xml.internal.org.jvnet.mimepull.DataHead, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.FileData com.sun.xml.internal.org.jvnet.mimepull.Data createNext(com.sun.xml.internal.org.jvnet.mimepull.DataHead, java.nio.ByteBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.FileData long writeTo(com.sun.xml.internal.org.jvnet.mimepull.DataFile) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.FinalArrayList FinalArrayList(java.util.Collection&lt;? extends T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.InternetHeaders InternetHeaders(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser.LineInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEConfig void setDir(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEMessage MIMEMessage(java.io.InputStream, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEMessage MIMEMessage(java.io.InputStream, java.lang.String, com.sun.xml.internal.org.jvnet.mimepull.MIMEConfig) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEMessage MIMEMessage(java.io.InputStream, java.lang.String, com.sun.xml.internal.org.jvnet.mimepull.MIMEConfig) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEMessage com.sun.xml.internal.org.jvnet.mimepull.MIMEPart getDecodedCidPart(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEMessage com.sun.xml.internal.org.jvnet.mimepull.MIMEPart getPart(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEMessage com.sun.xml.internal.org.jvnet.mimepull.MIMEPart getPart(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser MIMEParser(java.io.InputStream, java.lang.String, com.sun.xml.internal.org.jvnet.mimepull.MIMEConfig) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser MIMEParser(java.io.InputStream, java.lang.String, com.sun.xml.internal.org.jvnet.mimepull.MIMEConfig) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser boolean access$000(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser boolean access$002(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser boolean access$002(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser boolean access$1100(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser boolean access$502(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser boolean access$502(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser boolean access$700(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser byte[] access$900(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser byte[] getBytes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser com.sun.xml.internal.org.jvnet.mimepull.InternetHeaders access$400(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser com.sun.xml.internal.org.jvnet.mimepull.InternetHeaders access$400(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser com.sun.xml.internal.org.jvnet.mimepull.InternetHeaders readHeaders()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser com.sun.xml.internal.org.jvnet.mimepull.MIMEParser.STATE access$100(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser com.sun.xml.internal.org.jvnet.mimepull.MIMEParser.STATE access$102(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser, com.sun.xml.internal.org.jvnet.mimepull.MIMEParser.STATE) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser com.sun.xml.internal.org.jvnet.mimepull.MIMEParser.STATE access$102(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser, com.sun.xml.internal.org.jvnet.mimepull.MIMEParser.STATE)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser int access$800(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser java.nio.ByteBuffer access$1200(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser java.nio.ByteBuffer access$1200(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser java.nio.ByteBuffer access$600(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser java.nio.ByteBuffer access$600(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser java.nio.ByteBuffer adjustBuf(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser java.nio.ByteBuffer readBody()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser java.util.Iterator&lt;com.sun.xml.internal.org.jvnet.mimepull.MIMEEvent&gt; iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser void access$1000(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEParser void access$300(com.sun.xml.internal.org.jvnet.mimepull.MIMEParser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEPart java.io.InputStream read()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEPart java.io.InputStream readOnce()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEPart java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MIMEPart void addBody(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MemoryData MemoryData(java.nio.ByteBuffer, com.sun.xml.internal.org.jvnet.mimepull.MIMEConfig) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MemoryData com.sun.xml.internal.org.jvnet.mimepull.Data createNext(com.sun.xml.internal.org.jvnet.mimepull.DataHead, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MemoryData com.sun.xml.internal.org.jvnet.mimepull.Data createNext(com.sun.xml.internal.org.jvnet.mimepull.DataHead, java.nio.ByteBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.MemoryData long writeTo(com.sun.xml.internal.org.jvnet.mimepull.DataFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.TempFiles java.lang.reflect.Method safeGetMethod(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.WeakDataFile WeakDataFile(com.sun.xml.internal.org.jvnet.mimepull.DataFile, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.hdr hdr(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.org.jvnet.mimepull.hdr hdr(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
