<root>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl AccessorFactoryImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.AccessorFactoryImpl getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createFieldAccessor(java.lang.Class, java.lang.reflect.Field, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createPropertyAccessor(java.lang.Class, java.lang.reflect.Method, java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createPropertyAccessor(java.lang.Class, java.lang.reflect.Method, java.lang.reflect.Method) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.AccessorFactoryImpl com.sun.xml.internal.bind.v2.runtime.reflect.Accessor createPropertyAccessor(java.lang.Class, java.lang.reflect.Method, java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.AnyTypeAdapter AnyTypeAdapter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.AnyTypeAdapter java.lang.Object marshal(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.AnyTypeAdapter java.lang.Object unmarshal(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl DatatypeConverterImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl boolean isDigitOrPeriodOrSign(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl byte _parseByte(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl byte encodeByte(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl byte[] _parseBase64Binary(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl char encode(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl double _parseDouble(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl float _parseFloat(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl int _parseInt(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl int guessLength(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.Boolean _parseBoolean(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.Boolean _parseBoolean(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.CharSequence removeOptionalPlus(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.CharSequence removeOptionalPlus(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printBase64Binary(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printBase64Binary(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printBase64Binary(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printBoolean(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printByte(byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printDate(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printDateTime(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printDecimal(java.math.BigDecimal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printInt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printInteger(java.math.BigInteger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printLong(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printQName(javax.xml.namespace.QName, javax.xml.namespace.NamespaceContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.lang.String _printShort(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.math.BigDecimal _parseDecimal(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.math.BigDecimal _parseDecimal(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.math.BigInteger _parseInteger(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.math.BigInteger _parseInteger(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl java.util.GregorianCalendar _parseDateTime(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl javax.xml.namespace.QName _parseQName(java.lang.CharSequence, javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl javax.xml.namespace.QName _parseQName(java.lang.CharSequence, javax.xml.namespace.NamespaceContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl javax.xml.namespace.QName _parseQName(java.lang.CharSequence, javax.xml.namespace.NamespaceContext)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl long _parseLong(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl short _parseShort(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter CalendarFormatter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter java.lang.String doFormat(java.lang.String, java.util.Calendar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter java.lang.String doFormat(java.lang.String, java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatDays(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatDays(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatHours(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatHours(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatMinutes(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatMinutes(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatMonth(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatMonth(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatSeconds(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatSeconds(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatTimeZone(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatTwoDigits(int, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatYear(java.util.Calendar, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.DatatypeConverterImpl.CalendarFormatter void formatYear(java.util.Calendar, java.lang.StringBuilder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.IDResolver IDResolver()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.IDResolver void endDocument()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.IDResolver void startDocument(javax.xml.bind.ValidationEventHandler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.IDResolver void startDocument(javax.xml.bind.ValidationEventHandler)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.Util Util()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.Util java.lang.String getSystemProperty(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor WhiteSpaceProcessor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor boolean isWhiteSpace(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor boolean isWhiteSpace(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor boolean isWhiteSpaceExceptSpace(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor java.lang.CharSequence collapse(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor java.lang.CharSequence replace(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor java.lang.CharSequence replace(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor java.lang.CharSequence trim(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor java.lang.String collapse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.WhiteSpaceProcessor java.lang.String replace(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
