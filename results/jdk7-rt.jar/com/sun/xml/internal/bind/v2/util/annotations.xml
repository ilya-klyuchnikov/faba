<root>
  <item name="com.sun.xml.internal.bind.v2.util.ByteArrayOutputStreamEx byte[] getBuffer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.ByteArrayOutputStreamEx void readFrom(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.ByteArrayOutputStreamEx void set(com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.ClassLoaderRetriever ClassLoaderRetriever()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.CollisionCheckStack E get(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.CollisionCheckStack E peek()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.CollisionCheckStack boolean getLatestPushResult()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.CollisionCheckStack boolean getUseIdentity()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.CollisionCheckStack int size()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.CollisionCheckStack java.lang.String getCycleString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.DataSourceSource DataSourceSource(javax.activation.DataHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.DataSourceSource DataSourceSource(javax.activation.DataSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.DataSourceSource javax.activation.DataSource getDataSource()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.DataSourceSource void setInputStream(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.DataSourceSource void setReader(java.io.Reader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.EditDistance EditDistance(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.EditDistance int editDistance(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.EditDistance int min(int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.EditDistance java.lang.String findNearest(java.lang.String, java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.EditDistance java.lang.String findNearest(java.lang.String, java.util.Collection&lt;java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.FlattenIterator FlattenIterator(java.lang.Iterable&lt;? extends java.util.Map&lt;?,? extends T&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap V get(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap V get(javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap boolean containsKey(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap com.sun.xml.internal.bind.v2.util.QNameMap&lt;V&gt; putAll(com.sun.xml.internal.bind.v2.util.QNameMap&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap com.sun.xml.internal.bind.v2.util.QNameMap&lt;V&gt; putAll(com.sun.xml.internal.bind.v2.util.QNameMap&lt;? extends V&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap com.sun.xml.internal.bind.v2.util.QNameMap.Entry access$300(com.sun.xml.internal.bind.v2.util.QNameMap, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap com.sun.xml.internal.bind.v2.util.QNameMap.Entry access$300(com.sun.xml.internal.bind.v2.util.QNameMap, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap com.sun.xml.internal.bind.v2.util.QNameMap.Entry&lt;V&gt; getEntry(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap com.sun.xml.internal.bind.v2.util.QNameMap.Entry&lt;V&gt; getOne()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap int hash(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap int indexFor(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap int size()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap java.util.Iterator access$200(com.sun.xml.internal.bind.v2.util.QNameMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap java.util.Iterator access$200(com.sun.xml.internal.bind.v2.util.QNameMap)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap java.util.Iterator&lt;com.sun.xml.internal.bind.v2.util.QNameMap.Entry&lt;V&gt;&gt; newEntryIterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap void put(com.sun.xml.internal.bind.v2.runtime.Name, V) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap void put(java.lang.String, java.lang.String, V) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap void put(javax.xml.namespace.QName, V) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap void transfer(com.sun.xml.internal.bind.v2.util.QNameMap.Entry&lt;V&gt;[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.Entry V getValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.Entry boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.Entry boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.Entry java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.Entry javax.xml.namespace.QName createQName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.EntryIterator EntryIterator(com.sun.xml.internal.bind.v2.util.QNameMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.EntryIterator EntryIterator(com.sun.xml.internal.bind.v2.util.QNameMap, com.sun.xml.internal.bind.v2.util.QNameMap.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.EntryIterator EntryIterator(com.sun.xml.internal.bind.v2.util.QNameMap, com.sun.xml.internal.bind.v2.util.QNameMap.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.EntrySet EntrySet(com.sun.xml.internal.bind.v2.util.QNameMap, com.sun.xml.internal.bind.v2.util.QNameMap.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.EntrySet boolean contains(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.EntrySet boolean contains(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.EntrySet boolean remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.EntrySet int size()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.EntrySet java.util.Iterator&lt;com.sun.xml.internal.bind.v2.util.QNameMap.Entry&lt;V&gt;&gt; iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.HashIterator HashIterator(com.sun.xml.internal.bind.v2.util.QNameMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.QNameMap.HashIterator boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.TypeCast TypeCast()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.TypeCast java.util.Map&lt;K,V&gt; checkedCast(java.util.Map&lt;?,?&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.util.TypeCast java.util.Map&lt;K,V&gt; checkedCast(java.util.Map&lt;?,?&gt;, java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
</root>
