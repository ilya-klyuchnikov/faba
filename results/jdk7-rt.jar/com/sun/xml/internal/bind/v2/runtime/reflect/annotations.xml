<root>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor boolean access$000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor boolean access$002(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;false-&gt;false;true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor boolean isAdapted()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;A,B&gt; getErrorInstance()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,T&gt; adapt(com.sun.xml.internal.bind.v2.model.core.Adapter&lt;java.lang.reflect.Type,java.lang.Class&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,T&gt; adapt(com.sun.xml.internal.bind.v2.model.core.Adapter&lt;java.lang.reflect.Type,java.lang.Class&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,T&gt; adapt(java.lang.Class&lt;T&gt;, java.lang.Class&lt;? extends javax.xml.bind.annotation.adapters.XmlAdapter&lt;T,ValueT&gt;&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ValueT&gt; optimize(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ValueT&gt; optimize(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor java.lang.Class&lt;ValueT&gt; getValueType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor java.util.Map access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.1 java.lang.Object get(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.1 java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.1 void set(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.1 void set(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.1 void set(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.2 java.lang.Object get(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.2 java.lang.Object get(javax.xml.bind.JAXBElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.2 void set(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.2 void set(javax.xml.bind.JAXBElement, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.FieldReflection FieldReflection(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.FieldReflection FieldReflection(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.FieldReflection com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ValueT&gt; optimize(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.GetterOnlyReflection void set(BeanT, ValueT) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.GetterOnlyReflection void set(BeanT, ValueT) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.GetterSetterReflection com.sun.xml.internal.bind.api.AccessorException handleInvocationTargetException(java.lang.reflect.InvocationTargetException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.GetterSetterReflection com.sun.xml.internal.bind.api.AccessorException handleInvocationTargetException(java.lang.reflect.InvocationTargetException)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.GetterSetterReflection com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ValueT&gt; optimize(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.GetterSetterReflection void makeAccessible(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.ReadOnlyFieldReflection ReadOnlyFieldReflection(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.ReadOnlyFieldReflection ReadOnlyFieldReflection(java.lang.reflect.Field, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.ReadOnlyFieldReflection com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ValueT&gt; optimize(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.ReadOnlyFieldReflection com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ValueT&gt; optimize(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.ReadOnlyFieldReflection void set(BeanT, ValueT) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.ReadOnlyFieldReflection void set(BeanT, ValueT) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.ReadOnlyFieldReflection void set(BeanT, ValueT)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Accessor.SetterOnlyReflection ValueT get(BeanT) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.AdaptedAccessor boolean isAdapted()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.AdaptedLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;OnWireItemT&gt; iterator(PropT, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.AdaptedLister javax.xml.bind.annotation.adapters.XmlAdapter access$000(com.sun.xml.internal.bind.v2.runtime.reflect.AdaptedLister) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.DefaultTransducedAccessor DefaultTransducedAccessor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.DefaultTransducedAccessor void writeLeafElement(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, com.sun.xml.internal.bind.v2.runtime.Name, T, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.DefaultTransducedAccessor void writeLeafElement(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, com.sun.xml.internal.bind.v2.runtime.Name, T, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.DefaultTransducedAccessor void writeText(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, T, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.ListTransducedAccessorImpl void parse(BeanT, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.ListTransducedAccessorImpl void processValue(BeanT, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister Lister()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator access$300()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister com.sun.xml.internal.bind.v2.runtime.reflect.Lister getArrayLister(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister com.sun.xml.internal.bind.v2.runtime.reflect.Lister&lt;A,B,C,D&gt; getErrorInstance()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister com.sun.xml.internal.bind.v2.runtime.reflect.Lister&lt;BeanT,PropT,ItemT,PackT&gt; create(java.lang.reflect.Type, com.sun.xml.internal.bind.v2.model.core.ID, com.sun.xml.internal.bind.v2.model.core.Adapter&lt;java.lang.reflect.Type,java.lang.Class&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister com.sun.xml.internal.bind.v2.runtime.reflect.Lister&lt;BeanT,PropT,ItemT,PackT&gt; create(java.lang.reflect.Type, com.sun.xml.internal.bind.v2.model.core.ID, com.sun.xml.internal.bind.v2.model.core.Adapter&lt;java.lang.reflect.Type,java.lang.Class&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister com.sun.xml.internal.bind.v2.runtime.reflect.Lister&lt;BeanT,PropT,ItemT,PackT&gt; create(java.lang.reflect.Type, com.sun.xml.internal.bind.v2.model.core.ID, com.sun.xml.internal.bind.v2.model.core.Adapter&lt;java.lang.reflect.Type,java.lang.Class&gt;) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister java.lang.Class getImplClass(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;null;_,!null-&gt;null;_,null-&gt;null;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 void addToPack(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 void addToPack(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 void addToPack(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1 void reset(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.2 2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.2 boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;ItemT&gt; iterator(ItemT[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;ItemT&gt; iterator(ItemT[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister com.sun.xml.internal.bind.v2.runtime.reflect.Lister.Pack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ItemT[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister com.sun.xml.internal.bind.v2.runtime.reflect.Lister.Pack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ItemT[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister com.sun.xml.internal.bind.v2.runtime.reflect.Lister.Pack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ItemT[]&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.Pack&lt;ItemT&gt;, ItemT) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister void addToPack(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.Pack&lt;ItemT&gt;, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ItemT[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.Pack&lt;ItemT&gt;, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ItemT[]&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister void reset(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ItemT[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.ArrayLister.1 boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister T startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,T&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(T, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(T, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(T, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister void addToPack(T, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister void addToPack(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister void endPacking(T, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,T&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.CollectionLister void reset(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,T&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.String&gt; iterator(PropT, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS com.sun.xml.internal.bind.v2.runtime.reflect.Lister access$100(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS com.sun.xml.internal.bind.v2.runtime.reflect.Lister access$100(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS&lt;BeanT,PropT&gt;.Pack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,PropT&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS java.lang.Class access$200(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS java.lang.Class access$200(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS&lt;BeanT,PropT&gt;.Pack, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS void addToPack(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS&lt;BeanT,PropT&gt;.Pack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,PropT&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS&lt;BeanT,PropT&gt;.Pack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,PropT&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS&lt;BeanT,PropT&gt;.Pack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,PropT&gt;) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS&lt;BeanT,PropT&gt;.Pack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,PropT&gt;)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFS void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFSIterator IDREFSIterator(com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator, com.sun.xml.internal.bind.v2.runtime.XMLSerializer, com.sun.xml.internal.bind.v2.runtime.reflect.Lister.1) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.Lister.IDREFSIterator java.lang.Object last()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.NullSafeAccessor NullSafeAccessor(com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;B,V&gt;, com.sun.xml.internal.bind.v2.runtime.reflect.Lister&lt;B,V,?,P&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean PrimitiveArrayListerBoolean()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Boolean&gt; iterator(boolean[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Boolean&gt; iterator(boolean[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,boolean[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,boolean[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,boolean[]&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack, java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack, java.lang.Boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void addToPack(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void addToPack(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,boolean[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,boolean[]&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean void reset(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,boolean[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.1 boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack boolean[] build()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerBoolean.BooleanArrayPack void add(java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte PrimitiveArrayListerByte()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Byte&gt; iterator(byte[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Byte&gt; iterator(byte[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,byte[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,byte[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,byte[]&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack, java.lang.Byte) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack, java.lang.Byte) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void addToPack(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void addToPack(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,byte[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,byte[]&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte void reset(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,byte[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.1 boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack byte[] build()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerByte.ByteArrayPack void add(java.lang.Byte) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter PrimitiveArrayListerCharacter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Character&gt; iterator(char[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Character&gt; iterator(char[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,char[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,char[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,char[]&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack, java.lang.Character) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack, java.lang.Character) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void addToPack(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void addToPack(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,char[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,char[]&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter void reset(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,char[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.1 boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack char[] build()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerCharacter.CharacterArrayPack void add(java.lang.Character) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble PrimitiveArrayListerDouble()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Double&gt; iterator(double[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Double&gt; iterator(double[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,double[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,double[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,double[]&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack, java.lang.Double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack, java.lang.Double) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void addToPack(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void addToPack(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,double[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,double[]&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble void reset(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,double[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.1 boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.1 java.lang.Double next()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack double[] build()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerDouble.DoubleArrayPack void add(java.lang.Double) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat PrimitiveArrayListerFloat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Float&gt; iterator(float[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Float&gt; iterator(float[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,float[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,float[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,float[]&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack, java.lang.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack, java.lang.Float) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void addToPack(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void addToPack(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,float[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,float[]&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat void reset(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,float[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.1 boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.1 java.lang.Float next()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack float[] build()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerFloat.FloatArrayPack void add(java.lang.Float) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger PrimitiveArrayListerInteger()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Integer&gt; iterator(int[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Integer&gt; iterator(int[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,int[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,int[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,int[]&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack, java.lang.Integer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack, java.lang.Integer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void addToPack(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void addToPack(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,int[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,int[]&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger void reset(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,int[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.1 boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack int[] build()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerInteger.IntegerArrayPack void add(java.lang.Integer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong PrimitiveArrayListerLong()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Long&gt; iterator(long[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Long&gt; iterator(long[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,long[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,long[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,long[]&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack, java.lang.Long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack, java.lang.Long) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void addToPack(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void addToPack(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,long[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,long[]&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong void reset(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,long[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.1 boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack long[] build()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerLong.LongArrayPack void add(java.lang.Long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort PrimitiveArrayListerShort()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator iterator(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Short&gt; iterator(short[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort com.sun.xml.internal.bind.v2.runtime.reflect.ListIterator&lt;java.lang.Short&gt; iterator(short[], com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,short[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,short[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack startPacking(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,short[]&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort java.lang.Object startPacking(java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack, java.lang.Short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void addToPack(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack, java.lang.Short) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void addToPack(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void addToPack(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,short[]&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void endPacking(com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack, BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,short[]&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void endPacking(java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort void reset(BeanT, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,short[]&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.1 boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack short[] build()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.PrimitiveArrayListerShort.ShortArrayPack void add(java.lang.Short) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor TransducedAccessor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor boolean useNamespace()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor&lt;T&gt; get(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl, com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElementRef) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor&lt;T&gt; get(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl, com.sun.xml.internal.bind.v2.model.runtime.RuntimeNonElementRef)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor void declareNamespace(BeanT, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor void declareNamespace(BeanT, com.sun.xml.internal.bind.v2.runtime.XMLSerializer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor void declareNamespace(BeanT, com.sun.xml.internal.bind.v2.runtime.XMLSerializer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.CompositeContextDependentTransducedAccessorImpl CompositeContextDependentTransducedAccessorImpl(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl, com.sun.xml.internal.bind.v2.runtime.Transducer&lt;ValueT&gt;, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ValueT&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.CompositeContextDependentTransducedAccessorImpl boolean useNamespace()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.CompositeContextDependentTransducedAccessorImpl void writeLeafElement(com.sun.xml.internal.bind.v2.runtime.XMLSerializer, com.sun.xml.internal.bind.v2.runtime.Name, BeanT, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.CompositeTransducedAccessorImpl CompositeTransducedAccessorImpl(com.sun.xml.internal.bind.v2.runtime.JAXBContextImpl, com.sun.xml.internal.bind.v2.runtime.Transducer&lt;ValueT&gt;, com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,ValueT&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.IDREFTransducedAccessorImpl IDREFTransducedAccessorImpl(com.sun.xml.internal.bind.v2.runtime.reflect.Accessor&lt;BeanT,TargetT&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.IDREFTransducedAccessorImpl void access$000(com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.IDREFTransducedAccessorImpl, java.lang.Object, java.lang.Object, com.sun.xml.internal.bind.v2.runtime.unmarshaller.UnmarshallingContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.bind.v2.runtime.reflect.TransducedAccessor.IDREFTransducedAccessorImpl void parse(BeanT, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
