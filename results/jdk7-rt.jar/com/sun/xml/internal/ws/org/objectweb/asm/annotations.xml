<root>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.AnnotationWriter com.sun.xml.internal.ws.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.AnnotationWriter com.sun.xml.internal.ws.org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.AnnotationWriter int getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.AnnotationWriter void put(com.sun.xml.internal.ws.org.objectweb.asm.AnnotationWriter[], int, com.sun.xml.internal.ws.org.objectweb.asm.ByteVector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.AnnotationWriter void put(com.sun.xml.internal.ws.org.objectweb.asm.AnnotationWriter[], int, com.sun.xml.internal.ws.org.objectweb.asm.ByteVector) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.AnnotationWriter void put(com.sun.xml.internal.ws.org.objectweb.asm.ByteVector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Attribute boolean isCodeAttribute()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Attribute boolean isUnknown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Attribute com.sun.xml.internal.ws.org.objectweb.asm.Attribute read(com.sun.xml.internal.ws.org.objectweb.asm.ClassReader, int, int, char[], int, com.sun.xml.internal.ws.org.objectweb.asm.Label[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Attribute com.sun.xml.internal.ws.org.objectweb.asm.Attribute read(com.sun.xml.internal.ws.org.objectweb.asm.ClassReader, int, int, char[], int, com.sun.xml.internal.ws.org.objectweb.asm.Label[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Attribute com.sun.xml.internal.ws.org.objectweb.asm.Attribute read(com.sun.xml.internal.ws.org.objectweb.asm.ClassReader, int, int, char[], int, com.sun.xml.internal.ws.org.objectweb.asm.Label[]) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Attribute com.sun.xml.internal.ws.org.objectweb.asm.Attribute read(com.sun.xml.internal.ws.org.objectweb.asm.ClassReader, int, int, char[], int, com.sun.xml.internal.ws.org.objectweb.asm.Label[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Attribute com.sun.xml.internal.ws.org.objectweb.asm.ByteVector write(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, byte[], int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Attribute com.sun.xml.internal.ws.org.objectweb.asm.ByteVector write(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, byte[], int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Attribute com.sun.xml.internal.ws.org.objectweb.asm.ByteVector write(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, byte[], int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Attribute com.sun.xml.internal.ws.org.objectweb.asm.Label[] getLabels()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Attribute int getCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ByteVector com.sun.xml.internal.ws.org.objectweb.asm.ByteVector put11(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ByteVector com.sun.xml.internal.ws.org.objectweb.asm.ByteVector put12(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ByteVector com.sun.xml.internal.ws.org.objectweb.asm.ByteVector putByte(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ByteVector com.sun.xml.internal.ws.org.objectweb.asm.ByteVector putByteArray(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ByteVector com.sun.xml.internal.ws.org.objectweb.asm.ByteVector putByteArray(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ByteVector com.sun.xml.internal.ws.org.objectweb.asm.ByteVector putInt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ByteVector com.sun.xml.internal.ws.org.objectweb.asm.ByteVector putLong(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ByteVector com.sun.xml.internal.ws.org.objectweb.asm.ByteVector putShort(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ByteVector com.sun.xml.internal.ws.org.objectweb.asm.ByteVector putUTF8(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ByteVector com.sun.xml.internal.ws.org.objectweb.asm.ByteVector putUTF8(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader ClassReader(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader ClassReader(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader ClassReader(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader byte[] readClass(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader com.sun.xml.internal.ws.org.objectweb.asm.Attribute readAttribute(com.sun.xml.internal.ws.org.objectweb.asm.Attribute[], java.lang.String, int, int, char[], int, com.sun.xml.internal.ws.org.objectweb.asm.Label[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader com.sun.xml.internal.ws.org.objectweb.asm.Label readLabel(int, com.sun.xml.internal.ws.org.objectweb.asm.Label[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader int getItem(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader int readAnnotationValue(int, char[], java.lang.String, com.sun.xml.internal.ws.org.objectweb.asm.AnnotationVisitor) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader int readAnnotationValues(int, char[], boolean, com.sun.xml.internal.ws.org.objectweb.asm.AnnotationVisitor) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader int readByte(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader int readFrameType(java.lang.Object[], int, int, char[], com.sun.xml.internal.ws.org.objectweb.asm.Label[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader int readInt(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader int readUnsignedShort(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader java.lang.String getSuperName()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader java.lang.String readUTF(int, int, char[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader java.lang.String readUTF(int, int, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader java.lang.String[] getInterfaces()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader short readShort(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader void accept(com.sun.xml.internal.ws.org.objectweb.asm.ClassVisitor, com.sun.xml.internal.ws.org.objectweb.asm.Attribute[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader void copyPool(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassReader void readParameterAnnotations(int, java.lang.String, char[], boolean, com.sun.xml.internal.ws.org.objectweb.asm.MethodVisitor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter ClassWriter(com.sun.xml.internal.ws.org.objectweb.asm.ClassReader, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.FieldVisitor visitField(int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item addType(com.sun.xml.internal.ws.org.objectweb.asm.Item) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item addType(com.sun.xml.internal.ws.org.objectweb.asm.Item)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item get(com.sun.xml.internal.ws.org.objectweb.asm.Item) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item get(com.sun.xml.internal.ws.org.objectweb.asm.Item)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newClassItem(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newClassItem(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newConstItem(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newDouble(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newFieldItem(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newFieldItem(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newFloat(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newInteger(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newLong(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newMethodItem(java.lang.String, java.lang.String, java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newMethodItem(java.lang.String, java.lang.String, java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.Item newString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter com.sun.xml.internal.ws.org.objectweb.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter int addType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter int addUninitializedType(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter int newNameType(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter int newUTF8(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter java.lang.String getCommonSuperClass(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter java.lang.String getCommonSuperClass(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void put(com.sun.xml.internal.ws.org.objectweb.asm.Item) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void visit(int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[]) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void visitAttribute(com.sun.xml.internal.ws.org.objectweb.asm.Attribute) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void visitEnd()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void visitInnerClass(java.lang.String, java.lang.String, java.lang.String, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void visitOuterClass(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void visitOuterClass(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void visitSource(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter void visitSource(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Edge Edge()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.FieldWriter FieldWriter(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.FieldWriter FieldWriter(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.FieldWriter FieldWriter(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.FieldWriter com.sun.xml.internal.ws.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.FieldWriter void put(com.sun.xml.internal.ws.org.objectweb.asm.ByteVector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.FieldWriter void visitAttribute(com.sun.xml.internal.ws.org.objectweb.asm.Attribute) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.FieldWriter void visitEnd()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Frame Frame()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Frame boolean merge(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, com.sun.xml.internal.ws.org.objectweb.asm.Frame, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Frame boolean merge(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, int, int[], int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Frame int type(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Frame void initInputFrame(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, int, com.sun.xml.internal.ws.org.objectweb.asm.Type[], int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Frame void pop(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Frame void push(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Handler Handler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Item Item()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Item Item(int, com.sun.xml.internal.ws.org.objectweb.asm.Item) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Item boolean isEqualTo(com.sun.xml.internal.ws.org.objectweb.asm.Item) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Item boolean isEqualTo(com.sun.xml.internal.ws.org.objectweb.asm.Item)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Item void set(int, java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Label Label()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Label boolean inSameSubroutine(com.sun.xml.internal.ws.org.objectweb.asm.Label)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Label boolean inSubroutine(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Label boolean resolve(com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter, int, byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Label com.sun.xml.internal.ws.org.objectweb.asm.Label getFirst()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Label java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Label void put(com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter, com.sun.xml.internal.ws.org.objectweb.asm.ByteVector, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Label void put(com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter, com.sun.xml.internal.ws.org.objectweb.asm.ByteVector, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter MethodWriter(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter MethodWriter(com.sun.xml.internal.ws.org.objectweb.asm.ClassWriter, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[], boolean, boolean) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter com.sun.xml.internal.ws.org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter com.sun.xml.internal.ws.org.objectweb.asm.AnnotationVisitor visitAnnotationDefault()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter com.sun.xml.internal.ws.org.objectweb.asm.AnnotationVisitor visitParameterAnnotation(int, java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter int getArgumentsAndReturnSizes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter int getNewOffset(int[], int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter int getNewOffset(int[], int[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter int readInt(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter int readInt(byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter int readUnsignedShort(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter int readUnsignedShort(byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter short readShort(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter short readShort(byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void getNewOffset(int[], int[], com.sun.xml.internal.ws.org.objectweb.asm.Label) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void put(com.sun.xml.internal.ws.org.objectweb.asm.ByteVector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitAttribute(com.sun.xml.internal.ws.org.objectweb.asm.Attribute) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitEnd()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitFrame(com.sun.xml.internal.ws.org.objectweb.asm.Frame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitJumpInsn(int, com.sun.xml.internal.ws.org.objectweb.asm.Label) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitLabel(com.sun.xml.internal.ws.org.objectweb.asm.Label) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitLineNumber(int, com.sun.xml.internal.ws.org.objectweb.asm.Label) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, com.sun.xml.internal.ws.org.objectweb.asm.Label, com.sun.xml.internal.ws.org.objectweb.asm.Label, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, com.sun.xml.internal.ws.org.objectweb.asm.Label, com.sun.xml.internal.ws.org.objectweb.asm.Label, int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitLocalVariable(java.lang.String, java.lang.String, java.lang.String, com.sun.xml.internal.ws.org.objectweb.asm.Label, com.sun.xml.internal.ws.org.objectweb.asm.Label, int) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitLookupSwitchInsn(com.sun.xml.internal.ws.org.objectweb.asm.Label, int[], com.sun.xml.internal.ws.org.objectweb.asm.Label[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitLookupSwitchInsn(com.sun.xml.internal.ws.org.objectweb.asm.Label, int[], com.sun.xml.internal.ws.org.objectweb.asm.Label[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitTableSwitchInsn(int, int, com.sun.xml.internal.ws.org.objectweb.asm.Label, com.sun.xml.internal.ws.org.objectweb.asm.Label[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void visitTableSwitchInsn(int, int, com.sun.xml.internal.ws.org.objectweb.asm.Label, com.sun.xml.internal.ws.org.objectweb.asm.Label[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void writeFrameType(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.MethodWriter void writeShort(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type com.sun.xml.internal.ws.org.objectweb.asm.Type getObjectType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type com.sun.xml.internal.ws.org.objectweb.asm.Type getObjectType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type com.sun.xml.internal.ws.org.objectweb.asm.Type getReturnType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type com.sun.xml.internal.ws.org.objectweb.asm.Type getReturnType(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type com.sun.xml.internal.ws.org.objectweb.asm.Type getType(char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type com.sun.xml.internal.ws.org.objectweb.asm.Type getType(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type com.sun.xml.internal.ws.org.objectweb.asm.Type getType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type com.sun.xml.internal.ws.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type com.sun.xml.internal.ws.org.objectweb.asm.Type[] getArgumentTypes(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type com.sun.xml.internal.ws.org.objectweb.asm.Type[] getArgumentTypes(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type com.sun.xml.internal.ws.org.objectweb.asm.Type[] getArgumentTypes(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type int getDimensions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type int getOpcode(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type int getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type int getSort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getConstructorDescriptor(java.lang.reflect.Constructor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getConstructorDescriptor(java.lang.reflect.Constructor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getDescriptor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getDescriptor(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getDescriptor(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getInternalName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getInternalName(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getInternalName(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getMethodDescriptor(com.sun.xml.internal.ws.org.objectweb.asm.Type, com.sun.xml.internal.ws.org.objectweb.asm.Type[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getMethodDescriptor(com.sun.xml.internal.ws.org.objectweb.asm.Type, com.sun.xml.internal.ws.org.objectweb.asm.Type[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getMethodDescriptor(com.sun.xml.internal.ws.org.objectweb.asm.Type, com.sun.xml.internal.ws.org.objectweb.asm.Type[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getMethodDescriptor(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type java.lang.String getMethodDescriptor(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type void getDescriptor(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type void getDescriptor(java.lang.StringBuffer, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.org.objectweb.asm.Type void getDescriptor(java.lang.StringBuffer, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
