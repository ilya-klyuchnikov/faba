<root>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver AbstractInstanceResolver()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver boolean isInjectionPoint(javax.annotation.Resource, java.lang.Class, com.sun.xml.internal.ws.util.localization.Localizable, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver boolean isInjectionPoint(javax.annotation.Resource, java.lang.Class, com.sun.xml.internal.ws.util.localization.Localizable, java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver com.sun.xml.internal.ws.api.server.ResourceInjector getResourceInjector(com.sun.xml.internal.ws.api.server.WSEndpoint) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver com.sun.xml.internal.ws.server.AbstractInstanceResolver.InjectionPlan&lt;T,R&gt; buildInjectionPlan(java.lang.Class&lt;? extends T&gt;, java.lang.Class&lt;R&gt;, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver java.lang.reflect.Method findAnnotatedMethod(java.lang.Class, java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver java.lang.reflect.Method findAnnotatedMethod(java.lang.Class, java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver void invokeMethod(java.lang.reflect.Method, java.lang.Object, java.lang.Object...) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver.1 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver.Compositor Compositor(java.util.Collection&lt;com.sun.xml.internal.ws.server.AbstractInstanceResolver.InjectionPlan&lt;T,R&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver.FieldInjectionPlan int count()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver.FieldInjectionPlan java.lang.reflect.Field access$000(com.sun.xml.internal.ws.server.AbstractInstanceResolver.FieldInjectionPlan) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver.FieldInjectionPlan java.lang.reflect.Field access$000(com.sun.xml.internal.ws.server.AbstractInstanceResolver.FieldInjectionPlan)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver.FieldInjectionPlan.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractInstanceResolver.MethodInjectionPlan int count()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractWebServiceContext T getEndpointReference(java.lang.Class&lt;T&gt;, org.w3c.dom.Element...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractWebServiceContext T getEndpointReference(java.lang.Class&lt;T&gt;, org.w3c.dom.Element...) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.AbstractWebServiceContext javax.xml.ws.handler.MessageContext getMessageContext()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.DefaultResourceInjector DefaultResourceInjector()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.DefaultResourceInjector void inject(com.sun.xml.internal.ws.api.server.WSWebServiceContext, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.DraconianValidationErrorHandler DraconianValidationErrorHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.DraconianValidationErrorHandler void error(org.xml.sax.SAXParseException) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.DraconianValidationErrorHandler void error(org.xml.sax.SAXParseException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.DraconianValidationErrorHandler void fatalError(org.xml.sax.SAXParseException) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.DraconianValidationErrorHandler void fatalError(org.xml.sax.SAXParseException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.DraconianValidationErrorHandler void warning(org.xml.sax.SAXParseException) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.DraconianValidationErrorHandler void warning(org.xml.sax.SAXParseException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory EndpointFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory boolean verifyImplementorClass(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.api.server.WSEndpoint&lt;T&gt; createEndpoint(java.lang.Class&lt;T&gt;, boolean, com.sun.xml.internal.ws.api.server.Invoker, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.server.Container, com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.server.SDDocumentSource, java.util.Collection&lt;? extends com.sun.xml.internal.ws.api.server.SDDocumentSource&gt;, org.xml.sax.EntityResolver, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.api.server.WSEndpoint&lt;T&gt; createEndpoint(java.lang.Class&lt;T&gt;, boolean, com.sun.xml.internal.ws.api.server.Invoker, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.server.Container, com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.server.SDDocumentSource, java.util.Collection&lt;? extends com.sun.xml.internal.ws.api.server.SDDocumentSource&gt;, org.xml.sax.EntityResolver, boolean) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.api.server.WSEndpoint&lt;T&gt; createEndpoint(java.lang.Class&lt;T&gt;, boolean, com.sun.xml.internal.ws.api.server.Invoker, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.server.Container, com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.server.SDDocumentSource, java.util.Collection&lt;? extends com.sun.xml.internal.ws.api.server.SDDocumentSource&gt;, org.xml.sax.EntityResolver, boolean) 9">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.api.server.WSEndpoint&lt;T&gt; createEndpoint(java.lang.Class&lt;T&gt;, boolean, com.sun.xml.internal.ws.api.server.Invoker, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.server.Container, com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.server.SDDocumentSource, java.util.Collection&lt;? extends com.sun.xml.internal.ws.api.server.SDDocumentSource&gt;, org.xml.sax.EntityResolver, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.model.AbstractSEIModelImpl createSEIModel(com.sun.xml.internal.ws.api.model.wsdl.WSDLPort, java.lang.Class&lt;?&gt;, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.WSBinding) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.model.AbstractSEIModelImpl createSEIModel(com.sun.xml.internal.ws.api.model.wsdl.WSDLPort, java.lang.Class&lt;?&gt;, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.WSBinding) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.model.AbstractSEIModelImpl createSEIModel(com.sun.xml.internal.ws.api.model.wsdl.WSDLPort, java.lang.Class&lt;?&gt;, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.WSBinding) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.model.wsdl.WSDLPortImpl getWSDLPort(com.sun.xml.internal.ws.api.server.SDDocumentSource, java.util.List&lt;? extends com.sun.xml.internal.ws.api.server.SDDocumentSource&gt;, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.server.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.model.wsdl.WSDLPortImpl getWSDLPort(com.sun.xml.internal.ws.api.server.SDDocumentSource, java.util.List&lt;? extends com.sun.xml.internal.ws.api.server.SDDocumentSource&gt;, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.server.Container) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.model.wsdl.WSDLPortImpl getWSDLPort(com.sun.xml.internal.ws.api.server.SDDocumentSource, java.util.List&lt;? extends com.sun.xml.internal.ws.api.server.SDDocumentSource&gt;, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.server.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.server.SDDocumentImpl findPrimary(java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.server.SDDocumentImpl findPrimary(java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.server.SDDocumentImpl generateWSDL(com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.model.AbstractSEIModelImpl, java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt;, com.sun.xml.internal.ws.api.server.Container, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.server.SDDocumentImpl generateWSDL(com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.model.AbstractSEIModelImpl, java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt;, com.sun.xml.internal.ws.api.server.Container, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory com.sun.xml.internal.ws.server.SDDocumentImpl generateWSDL(com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.model.AbstractSEIModelImpl, java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt;, com.sun.xml.internal.ws.api.server.Container, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory java.lang.String getWsdlLocation(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory java.lang.String getWsdlLocation(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt; categoriseMetadata(java.util.List&lt;com.sun.xml.internal.ws.api.server.SDDocumentSource&gt;, javax.xml.namespace.QName, javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt; findMetadataClosure(com.sun.xml.internal.ws.server.SDDocumentImpl, java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt; findMetadataClosure(com.sun.xml.internal.ws.server.SDDocumentImpl, java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt; findMetadataClosure(com.sun.xml.internal.ws.server.SDDocumentImpl, java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory javax.xml.namespace.QName getDefaultPortName(javax.xml.namespace.QName, java.lang.Class&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory javax.xml.namespace.QName getDefaultPortName(javax.xml.namespace.QName, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory javax.xml.namespace.QName getDefaultServiceName(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory javax.xml.namespace.QName getDefaultServiceName(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory void processHandlerAnnotation(com.sun.xml.internal.ws.api.WSBinding, java.lang.Class&lt;T&gt;, javax.xml.namespace.QName, javax.xml.namespace.QName) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory void verifyPrimaryWSDL(com.sun.xml.internal.ws.api.server.SDDocumentSource, javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory.EntityResolverImpl EntityResolverImpl(java.util.List&lt;? extends com.sun.xml.internal.ws.api.server.SDDocumentSource&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory.EntityResolverImpl com.sun.xml.internal.ws.api.wsdl.parser.XMLEntityResolver.Parser resolveEntity(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory.EntityResolverImpl com.sun.xml.internal.ws.api.wsdl.parser.XMLEntityResolver.Parser resolveEntity(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointFactory.EntityResolverImpl com.sun.xml.internal.ws.api.wsdl.parser.XMLEntityResolver.Parser resolveEntity(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointMessageContextImpl java.lang.Object get(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointMessageContextImpl java.lang.Object put(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointMessageContextImpl java.lang.Object put(java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointMessageContextImpl java.lang.Object remove(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointMessageContextImpl java.util.Map access$100(com.sun.xml.internal.ws.server.EndpointMessageContextImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointMessageContextImpl javax.xml.ws.handler.MessageContext.Scope getScope(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointMessageContextImpl void setScope(java.lang.String, javax.xml.ws.handler.MessageContext.Scope) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointMessageContextImpl void setScope(java.lang.String, javax.xml.ws.handler.MessageContext.Scope) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointMessageContextImpl.EntrySet EntrySet(com.sun.xml.internal.ws.server.EndpointMessageContextImpl, com.sun.xml.internal.ws.server.EndpointMessageContextImpl.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.EndpointMessageContextImpl.EntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.Object&gt;&gt; iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.InvokerTube com.sun.xml.internal.ws.api.pipe.Tube copy(com.sun.xml.internal.ws.api.pipe.TubeCloner) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.InvokerTube com.sun.xml.internal.ws.api.pipe.Tube copy(com.sun.xml.internal.ws.api.pipe.TubeCloner)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.InvokerTube com.sun.xml.internal.ws.api.pipe.helper.AbstractTubeImpl copy(com.sun.xml.internal.ws.api.pipe.TubeCloner) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.InvokerTube com.sun.xml.internal.ws.api.pipe.helper.AbstractTubeImpl copy(com.sun.xml.internal.ws.api.pipe.TubeCloner)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.InvokerTube com.sun.xml.internal.ws.api.server.Invoker access$100(com.sun.xml.internal.ws.server.InvokerTube) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.InvokerTube com.sun.xml.internal.ws.api.server.Invoker access$100(com.sun.xml.internal.ws.server.InvokerTube)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.InvokerTube com.sun.xml.internal.ws.api.server.Invoker getInvoker(com.sun.xml.internal.ws.api.message.Packet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.InvokerTube com.sun.xml.internal.ws.api.server.Invoker getInvoker(com.sun.xml.internal.ws.api.message.Packet)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.InvokerTube com.sun.xml.internal.ws.api.server.WSEndpoint getEndpoint()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.InvokerTube java.lang.ThreadLocal access$000()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.MethodUtil MethodUtil()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.MethodUtil java.lang.reflect.InvocationTargetException unwrapException(java.lang.reflect.InvocationTargetException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorBase MonitorBase()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorBase com.sun.org.glassfish.gmbal.ManagedObjectManager createManagedObjectManager(com.sun.xml.internal.ws.api.server.WSEndpoint) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorBase com.sun.org.glassfish.gmbal.ManagedObjectManager createManagedObjectManager(com.sun.xml.internal.ws.client.Stub) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorBase com.sun.org.glassfish.gmbal.ManagedObjectManager disabled(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorBase com.sun.org.glassfish.gmbal.ManagedObjectManager disabled(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorBase com.sun.xml.internal.ws.api.config.management.policy.ManagementAssertion.Setting propertyToSetting(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorBase java.lang.String getContextPath(com.sun.xml.internal.ws.api.server.WSEndpoint)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorRootService boolean dumpHTTPMessages()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorRootService com.sun.xml.internal.ws.api.EndpointAddress wsdlEndpointAddress()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorRootService java.lang.String jaxwsRuntimeVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorRootService java.lang.String policy()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorRootService java.lang.String seiModelWSDLLocation()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorRootService java.net.URL serviceDefinitionURL()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorRootService java.util.Set&lt;java.lang.String&gt; serviceDefinitionImports()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.MonitorRootService javax.xml.namespace.QName wsdlPortTypeName()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.RewritingMOM com.sun.org.glassfish.gmbal.GmbalMBean createRoot(java.lang.Object, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.RewritingMOM com.sun.org.glassfish.gmbal.GmbalMBean register(java.lang.Object, java.lang.Object, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.RewritingMOM com.sun.org.glassfish.gmbal.GmbalMBean registerAtRoot(java.lang.Object, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.RewritingMOM java.lang.String rewrite(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl SDDocumentImpl(javax.xml.namespace.QName, java.net.URL, com.sun.xml.internal.ws.api.server.SDDocumentSource) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl SDDocumentImpl(javax.xml.namespace.QName, java.net.URL, com.sun.xml.internal.ws.api.server.SDDocumentSource, java.util.Set&lt;java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl boolean isSchema()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl boolean isWSDL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl com.sun.xml.internal.ws.server.SDDocumentImpl create(com.sun.xml.internal.ws.api.server.SDDocumentSource, javax.xml.namespace.QName, javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl com.sun.xml.internal.ws.server.SDDocumentImpl create(com.sun.xml.internal.ws.api.server.SDDocumentSource, javax.xml.namespace.QName, javax.xml.namespace.QName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl java.net.URL getSystemId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl java.net.URL getURL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl java.util.Set&lt;java.lang.String&gt; getImports()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl javax.xml.namespace.QName getRootName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl.DocumentLocationResolverImpl java.lang.String getLocationFor(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl.DocumentLocationResolverImpl java.lang.String getLocationFor(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl.SchemaImpl SchemaImpl(javax.xml.namespace.QName, java.net.URL, com.sun.xml.internal.ws.api.server.SDDocumentSource, java.lang.String, java.util.Set&lt;java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl.SchemaImpl boolean isSchema()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl.SchemaImpl java.lang.String getTargetNamespace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl.WSDLImpl WSDLImpl(javax.xml.namespace.QName, java.net.URL, com.sun.xml.internal.ws.api.server.SDDocumentSource, java.lang.String, boolean, boolean, java.util.Set&lt;java.lang.String&gt;, java.util.Set&lt;javax.xml.namespace.QName&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl.WSDLImpl boolean hasPortType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl.WSDLImpl boolean hasService()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl.WSDLImpl boolean isWSDL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl.WSDLImpl java.lang.String getTargetNamespace()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SDDocumentImpl.WSDLImpl java.util.Set&lt;javax.xml.namespace.QName&gt; getAllServices()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServerRtException ServerRtException(java.lang.String, java.lang.Object...) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServerRtException ServerRtException(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServerRtException java.lang.String getDefaultResourceBundleName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServerSchemaValidationTube ServerSchemaValidationTube(com.sun.xml.internal.ws.api.server.WSEndpoint, com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.model.SEIModel, com.sun.xml.internal.ws.api.model.wsdl.WSDLPort, com.sun.xml.internal.ws.api.pipe.Tube) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServerSchemaValidationTube ServerSchemaValidationTube(com.sun.xml.internal.ws.api.server.WSEndpoint, com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.model.SEIModel, com.sun.xml.internal.ws.api.model.wsdl.WSDLPort, com.sun.xml.internal.ws.api.pipe.Tube) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServerSchemaValidationTube ServerSchemaValidationTube(com.sun.xml.internal.ws.server.ServerSchemaValidationTube, com.sun.xml.internal.ws.api.pipe.TubeCloner) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServerSchemaValidationTube ServerSchemaValidationTube(com.sun.xml.internal.ws.server.ServerSchemaValidationTube, com.sun.xml.internal.ws.api.pipe.TubeCloner) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServerSchemaValidationTube boolean isNoValidation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServerSchemaValidationTube com.sun.xml.internal.ws.api.pipe.helper.AbstractTubeImpl copy(com.sun.xml.internal.ws.api.pipe.TubeCloner) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServerSchemaValidationTube com.sun.xml.internal.ws.api.pipe.helper.AbstractTubeImpl copy(com.sun.xml.internal.ws.api.pipe.TubeCloner)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServerSchemaValidationTube javax.xml.validation.Validator getValidator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServiceDefinitionImpl ServiceDefinitionImpl(java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt;, com.sun.xml.internal.ws.server.SDDocumentImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.ServiceDefinitionImpl com.sun.xml.internal.ws.api.server.SDDocument getPrimary()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.SingletonResolver T resolve(com.sun.xml.internal.ws.api.message.Packet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.SingletonResolver T resolve(com.sun.xml.internal.ws.api.message.Packet)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.UnsupportedMediaException java.lang.String getDefaultResourceBundleName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSDLGenResolver WSDLGenResolver(java.util.List&lt;com.sun.xml.internal.ws.server.SDDocumentImpl&gt;, javax.xml.namespace.QName, javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSDLGenResolver java.net.URL createURL(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSDLGenResolver java.net.URL createURL(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSDLGenResolver javax.xml.transform.Result getAbstractWSDL(javax.xml.ws.Holder&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSDLGenResolver javax.xml.transform.Result getAbstractWSDL(javax.xml.ws.Holder&lt;java.lang.String&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSDLGenResolver javax.xml.transform.Result getSchemaOutput(java.lang.String, javax.xml.ws.Holder&lt;java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSDLGenResolver javax.xml.transform.Result getSchemaOutput(java.lang.String, javax.xml.ws.Holder&lt;java.lang.String&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSDLGenResolver javax.xml.transform.Result getWSDL(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl T getEndpointReference(java.lang.Class&lt;T&gt;, java.lang.String, java.lang.String, java.util.List&lt;org.w3c.dom.Element&gt;, java.util.List&lt;org.w3c.dom.Element&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl T getEndpointReference(java.lang.Class&lt;T&gt;, java.lang.String, java.lang.String, java.util.List&lt;org.w3c.dom.Element&gt;, java.util.List&lt;org.w3c.dom.Element&gt;) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl T getEndpointReference(java.lang.Class&lt;T&gt;, java.lang.String, java.lang.String, java.util.List&lt;org.w3c.dom.Element&gt;, java.util.List&lt;org.w3c.dom.Element&gt;) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl T getEndpointReference(java.lang.Class&lt;T&gt;, java.lang.String, java.lang.String, java.util.List&lt;org.w3c.dom.Element&gt;, java.util.List&lt;org.w3c.dom.Element&gt;) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl T getEndpointReference(java.lang.Class&lt;T&gt;, java.lang.String, java.lang.String, java.util.List&lt;org.w3c.dom.Element&gt;, java.util.List&lt;org.w3c.dom.Element&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl T getEndpointReference(java.lang.Class&lt;T&gt;, java.lang.String, java.lang.String, org.w3c.dom.Element...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl T getEndpointReference(java.lang.Class&lt;T&gt;, java.lang.String, java.lang.String, org.w3c.dom.Element...) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl T getEndpointReference(java.lang.Class&lt;T&gt;, java.lang.String, java.lang.String, org.w3c.dom.Element...) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl T getEndpointReference(java.lang.Class&lt;T&gt;, java.lang.String, java.lang.String, org.w3c.dom.Element...)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl WSEndpointImpl(javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.server.Container, com.sun.xml.internal.ws.api.model.SEIModel, com.sun.xml.internal.ws.api.model.wsdl.WSDLPort, java.lang.Class&lt;T&gt;, com.sun.xml.internal.ws.server.ServiceDefinitionImpl, com.sun.xml.internal.ws.server.InvokerTube, boolean, com.sun.xml.internal.ws.policy.PolicyMap) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl WSEndpointImpl(javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.WSBinding, com.sun.xml.internal.ws.api.server.Container, com.sun.xml.internal.ws.api.model.SEIModel, com.sun.xml.internal.ws.api.model.wsdl.WSDLPort, java.lang.Class&lt;T&gt;, com.sun.xml.internal.ws.server.ServiceDefinitionImpl, com.sun.xml.internal.ws.server.InvokerTube, boolean, com.sun.xml.internal.ws.policy.PolicyMap) 8">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.org.glassfish.gmbal.ManagedObjectManager getManagedObjectManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.SOAPVersion access$100(com.sun.xml.internal.ws.server.WSEndpointImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.SOAPVersion access$100(com.sun.xml.internal.ws.server.WSEndpointImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.WSBinding getBinding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.model.SEIModel getSEIModel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.model.wsdl.WSDLPort getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.pipe.Engine access$400(com.sun.xml.internal.ws.server.WSEndpointImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.pipe.Engine access$400(com.sun.xml.internal.ws.server.WSEndpointImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.pipe.ServerTubeAssemblerContext getAssemblerContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.pipe.Tube access$200(com.sun.xml.internal.ws.server.WSEndpointImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.pipe.Tube access$200(com.sun.xml.internal.ws.server.WSEndpointImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.server.Container getContainer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.server.ServiceDefinition getServiceDefinition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.api.server.WSEndpoint.PipeHead createPipeHead()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.model.wsdl.WSDLProperties access$300(com.sun.xml.internal.ws.server.WSEndpointImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.model.wsdl.WSDLProperties access$300(com.sun.xml.internal.ws.server.WSEndpointImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.policy.PolicyMap getPolicyMap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.server.ServiceDefinitionImpl getServiceDefinition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.util.Pool access$000(com.sun.xml.internal.ws.server.WSEndpointImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.util.Pool access$000(com.sun.xml.internal.ws.server.WSEndpointImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl com.sun.xml.internal.ws.wsdl.OperationDispatcher getOperationDispatcher()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl java.lang.Class&lt;T&gt; getImplementationClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl java.util.Set&lt;com.sun.xml.internal.ws.api.server.EndpointComponent&gt; getComponentRegistry()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl javax.xml.namespace.QName getPortName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl javax.xml.namespace.QName getServiceName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl void process(com.sun.xml.internal.ws.api.message.Packet, com.sun.xml.internal.ws.api.server.WSEndpoint.CompletionCallback, com.sun.xml.internal.ws.api.pipe.FiberContextSwitchInterceptor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl void process(com.sun.xml.internal.ws.api.message.Packet, com.sun.xml.internal.ws.api.server.WSEndpoint.CompletionCallback, com.sun.xml.internal.ws.api.pipe.FiberContextSwitchInterceptor) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl void processAsync(com.sun.xml.internal.ws.api.message.Packet, com.sun.xml.internal.ws.api.server.WSEndpoint.CompletionCallback, com.sun.xml.internal.ws.api.pipe.FiberContextSwitchInterceptor, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl void processAsync(com.sun.xml.internal.ws.api.message.Packet, com.sun.xml.internal.ws.api.server.WSEndpoint.CompletionCallback, com.sun.xml.internal.ws.api.pipe.FiberContextSwitchInterceptor, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl void schedule(com.sun.xml.internal.ws.api.message.Packet, com.sun.xml.internal.ws.api.server.WSEndpoint.CompletionCallback, com.sun.xml.internal.ws.api.pipe.FiberContextSwitchInterceptor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl void schedule(com.sun.xml.internal.ws.api.message.Packet, com.sun.xml.internal.ws.api.server.WSEndpoint.CompletionCallback, com.sun.xml.internal.ws.api.pipe.FiberContextSwitchInterceptor) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl.1 void onCompletion(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.server.WSEndpointImpl.2 com.sun.xml.internal.ws.api.message.Packet process(com.sun.xml.internal.ws.api.message.Packet, com.sun.xml.internal.ws.api.server.WebServiceContextDelegate, com.sun.xml.internal.ws.api.server.TransportBackChannel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
