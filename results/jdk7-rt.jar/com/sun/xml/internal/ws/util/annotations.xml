<root>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility byte[] getBytes(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility byte[] getBytes(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility byte[] getBytes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility int parseInt(byte[], int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility java.lang.String toString(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ASCIIUtility void copyStream(java.io.InputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer ByteArrayBuffer(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer byte[] toByteArray()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer java.io.InputStream newInputStream()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer java.io.InputStream newInputStream(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayBuffer void write(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayDataSource ByteArrayDataSource(byte[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ByteArrayDataSource java.io.InputStream getInputStream()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.CompletedFuture T get(long, java.util.concurrent.TimeUnit) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.CompletedFuture boolean cancel(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;false-&gt;false;true-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil boolean isPrefixDeclared(javax.xml.stream.XMLStreamWriter, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil java.lang.String fixNull(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil java.lang.String fixNull(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil java.util.List&lt;org.w3c.dom.Element&gt; getChildElements(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil org.w3c.dom.Element getFirstChild(org.w3c.dom.Element, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil org.w3c.dom.Element getFirstChild(org.w3c.dom.Element, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil org.w3c.dom.Element getFirstChild(org.w3c.dom.Element, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil org.w3c.dom.Element getFirstElementChild(org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil void serializeNode(org.w3c.dom.Element, javax.xml.stream.XMLStreamWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil void serializeNode(org.w3c.dom.Element, javax.xml.stream.XMLStreamWriter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil void writeTagWithAttributes(org.w3c.dom.Element, javax.xml.stream.XMLStreamWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.DOMUtil void writeTagWithAttributes(org.w3c.dom.Element, javax.xml.stream.XMLStreamWriter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationProcessor com.sun.xml.internal.ws.handler.HandlerChainsModel buildHandlerChainsModel(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationProcessor com.sun.xml.internal.ws.handler.HandlerChainsModel buildHandlerChainsModel(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationProcessor com.sun.xml.internal.ws.util.HandlerAnnotationInfo buildHandlerInfo(java.lang.Class&lt;?&gt;, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.WSBinding) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationProcessor com.sun.xml.internal.ws.util.HandlerAnnotationInfo buildHandlerInfo(java.lang.Class&lt;?&gt;, javax.xml.namespace.QName, javax.xml.namespace.QName, com.sun.xml.internal.ws.api.WSBinding)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationProcessor java.io.InputStream getFileAsStream(java.lang.Class, javax.jws.HandlerChain) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationProcessor java.io.InputStream getFileAsStream(java.lang.Class, javax.jws.HandlerChain) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.HandlerAnnotationProcessor java.lang.Class getSEI(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.JAXWSUtils boolean matchQNames(javax.xml.namespace.QName, javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.JAXWSUtils boolean matchQNames(javax.xml.namespace.QName, javax.xml.namespace.QName) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.JAXWSUtils boolean matchQNames(javax.xml.namespace.QName, javax.xml.namespace.QName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.JAXWSUtils java.lang.String escapeSpace(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.JAXWSUtils java.lang.String escapeSpace(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.JAXWSUtils java.lang.String getUUID()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.JAXWSUtils java.net.URL getFileOrURL(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport NamespaceSupport(com.sun.xml.internal.ws.util.NamespaceSupport) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport boolean declarePrefix(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport java.lang.String[] processName(java.lang.String, java.lang.String[], boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport.Context Context(com.sun.xml.internal.ws.util.NamespaceSupport.Context, com.sun.xml.internal.ws.util.NamespaceSupport.Context) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport.Context java.lang.String[] processName(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport.Context void declarePrefix(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport.Context void declarePrefix(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.NamespaceSupport.Context void setParent(com.sun.xml.internal.ws.util.NamespaceSupport.Context) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.Pool java.util.concurrent.ConcurrentLinkedQueue&lt;T&gt; getQueue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap V get(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap V get(javax.xml.namespace.QName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap boolean containsKey(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap&lt;V&gt; putAll(com.sun.xml.internal.ws.util.QNameMap&lt;? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap&lt;V&gt; putAll(java.util.Map&lt;javax.xml.namespace.QName,? extends V&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap.Entry access$400(com.sun.xml.internal.ws.util.QNameMap, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap.Entry access$400(com.sun.xml.internal.ws.util.QNameMap, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap.Entry access$400(com.sun.xml.internal.ws.util.QNameMap, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null-&gt;null;_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt; getEntry(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt; getEntry(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap int hash(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap java.util.Iterator access$300(com.sun.xml.internal.ws.util.QNameMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap java.util.Iterator access$300(com.sun.xml.internal.ws.util.QNameMap)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap java.util.Iterator&lt;com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt;&gt; newEntryIterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap java.util.Set&lt;com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt;&gt; entrySet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap void put(java.lang.String, java.lang.String, V) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap void put(javax.xml.namespace.QName, V) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap void transfer(com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt;[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.1 java.util.Iterator&lt;V&gt; iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.Entry boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.Entry boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.Entry java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.Entry javax.xml.namespace.QName createQName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntryIterator EntryIterator(com.sun.xml.internal.ws.util.QNameMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntryIterator EntryIterator(com.sun.xml.internal.ws.util.QNameMap, com.sun.xml.internal.ws.util.QNameMap.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntryIterator EntryIterator(com.sun.xml.internal.ws.util.QNameMap, com.sun.xml.internal.ws.util.QNameMap.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntrySet EntrySet(com.sun.xml.internal.ws.util.QNameMap, com.sun.xml.internal.ws.util.QNameMap.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntrySet boolean contains(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntrySet boolean contains(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntrySet boolean remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.EntrySet java.util.Iterator&lt;com.sun.xml.internal.ws.util.QNameMap.Entry&lt;V&gt;&gt; iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.HashIterator HashIterator(com.sun.xml.internal.ws.util.QNameMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.ValueIterator ValueIterator(com.sun.xml.internal.ws.util.QNameMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.ValueIterator ValueIterator(com.sun.xml.internal.ws.util.QNameMap, com.sun.xml.internal.ws.util.QNameMap.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.QNameMap.ValueIterator ValueIterator(com.sun.xml.internal.ws.util.QNameMap, com.sun.xml.internal.ws.util.QNameMap.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.FileStream FileStream(com.sun.xml.internal.ws.util.ReadAllStream.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.FileStream void readAll(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.MemoryStream MemoryStream(com.sun.xml.internal.ws.util.ReadAllStream.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.MemoryStream int fill(java.io.InputStream, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ReadAllStream.MemoryStream.Chunk com.sun.xml.internal.ws.util.ReadAllStream.MemoryStream.Chunk createNext(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder com.sun.xml.internal.ws.util.ServiceFinder&lt;T&gt; find(java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder com.sun.xml.internal.ws.util.ServiceFinder&lt;T&gt; find(java.lang.Class&lt;T&gt;, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder int parseLine(java.lang.Class, java.net.URL, java.io.BufferedReader, int, java.util.List&lt;java.lang.String&gt;, java.util.Set&lt;java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder int parseLine(java.lang.Class, java.net.URL, java.io.BufferedReader, int, java.util.List&lt;java.lang.String&gt;, java.util.Set&lt;java.lang.String&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder java.util.Iterator&lt;T&gt; iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void access$100(java.lang.Class, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void access$100(java.lang.Class, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void access$300(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void access$300(java.lang.Class, java.lang.String, java.lang.Throwable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void fail(java.lang.Class, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void fail(java.lang.Class, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void fail(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void fail(java.lang.Class, java.lang.String, java.lang.Throwable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void fail(java.lang.Class, java.net.URL, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void fail(java.lang.Class, java.net.URL, int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder void fail(java.lang.Class, java.net.URL, int, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.ServiceFinder.LazyIterator LazyIterator(java.lang.Class, java.lang.ClassLoader, com.sun.xml.internal.ws.util.ServiceFinder.1) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.StreamUtils java.io.InputStream hasSomeData(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.StringUtils java.lang.String capitalize(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.StringUtils java.lang.String decapitalize(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.util.UtilException UtilException(java.lang.String, java.lang.Object...) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.UtilException UtilException(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.UtilException java.lang.String getDefaultResourceBundleName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.Version Version(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.Version Version(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.Version Version(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.Version com.sun.xml.internal.ws.util.Version create(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.Version java.lang.String fixNull(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.Version java.lang.String fixNull(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil boolean isValidVersion(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil boolean isVersion20(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil int compare(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil int compare(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil int[] getCanonicalVersion(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil int[] getCanonicalVersion(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.util.VersionUtil java.lang.String getValidVersionString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
