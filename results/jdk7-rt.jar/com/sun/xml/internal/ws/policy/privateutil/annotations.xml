<root>
  <item name="com.sun.xml.internal.ws.policy.privateutil.LocalizationMessages LocalizationMessages()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.MethodUtil MethodUtil()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.MethodUtil java.lang.reflect.InvocationTargetException unwrapException(java.lang.reflect.InvocationTargetException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyLogger PolicyLogger(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyLogger com.sun.xml.internal.ws.policy.privateutil.PolicyLogger getLogger(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyLogger com.sun.xml.internal.ws.policy.privateutil.PolicyLogger getLogger(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyLogger java.lang.String getLoggingSubsystemName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils PolicyUtils()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Collections Collections()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Collections java.util.Collection&lt;java.util.Collection&lt;E&gt;&gt; combine(U, java.util.Collection&lt;T&gt;, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Collections java.util.Collection&lt;java.util.Collection&lt;E&gt;&gt; combine(U, java.util.Collection&lt;T&gt;, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Commons Commons()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Comparison Comparison()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Comparison int compareBoolean(boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Comparison int compareNullableStrings(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Comparison int compareNullableStrings(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Comparison int compareNullableStrings(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Comparison.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.ConfigFile ConfigFile()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.ConfigFile java.lang.String generateFullName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.ConfigFile java.lang.String generateFullName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.ConfigFile java.net.URL loadFromContext(java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.IO IO()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.IO void closeResource(java.io.Closeable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.IO void closeResource(javax.xml.stream.XMLStreamReader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection Reflection()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection T invoke(java.lang.Object, java.lang.String, java.lang.Class&lt;T&gt;, java.lang.Object...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection T invoke(java.lang.Object, java.lang.String, java.lang.Class&lt;T&gt;, java.lang.Object...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection T invoke(java.lang.Object, java.lang.String, java.lang.Class&lt;T&gt;, java.lang.Object...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection T invoke(java.lang.Object, java.lang.String, java.lang.Class&lt;T&gt;, java.lang.Object[], java.lang.Class[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection T invoke(java.lang.Object, java.lang.String, java.lang.Class&lt;T&gt;, java.lang.Object[], java.lang.Class[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection T invoke(java.lang.Object, java.lang.String, java.lang.Class&lt;T&gt;, java.lang.Object[], java.lang.Class[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection java.lang.String createExceptionMessage(java.lang.Object, java.lang.Object[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Reflection java.lang.String createExceptionMessage(java.lang.Object, java.lang.Object[], java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Rfc2396 Rfc2396()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Rfc2396 java.lang.String unquote(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.ServiceProvider ServiceProvider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Text Text()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.PolicyUtils.Text java.lang.String createIndent(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder ServiceFinder(java.lang.Class&lt;T&gt;, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder com.sun.xml.internal.ws.policy.privateutil.ServiceFinder&lt;T&gt; find(java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder com.sun.xml.internal.ws.policy.privateutil.ServiceFinder&lt;T&gt; find(java.lang.Class&lt;T&gt;, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder int parseLine(java.lang.Class, java.net.URL, java.io.BufferedReader, int, java.util.List&lt;java.lang.String&gt;, java.util.Set&lt;java.lang.String&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder java.util.Iterator&lt;T&gt; iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder void access$100(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder void fail(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder void fail(java.lang.Class, java.net.URL, int, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.ws.policy.privateutil.ServiceFinder.LazyIterator LazyIterator(java.lang.Class, java.lang.ClassLoader, com.sun.xml.internal.ws.policy.privateutil.ServiceFinder.1) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
