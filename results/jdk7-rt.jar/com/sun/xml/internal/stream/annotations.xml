<root>
  <item name="com.sun.xml.internal.stream.Entity Entity(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity boolean isEntityDeclInExternalSubset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity void clear()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity void setValues(com.sun.xml.internal.stream.Entity) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity void setValues(com.sun.xml.internal.stream.Entity)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ExternalEntity ExternalEntity(java.lang.String, com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier, java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ExternalEntity boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ExternalEntity boolean isUnparsed()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ExternalEntity void clear()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ExternalEntity void setValues(com.sun.xml.internal.stream.Entity) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ExternalEntity void setValues(com.sun.xml.internal.stream.Entity)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ExternalEntity void setValues(com.sun.xml.internal.stream.Entity.ExternalEntity) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ExternalEntity void setValues(com.sun.xml.internal.stream.Entity.ExternalEntity)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.InternalEntity InternalEntity(java.lang.String, java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.InternalEntity boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.InternalEntity boolean isUnparsed()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.InternalEntity void clear()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.InternalEntity void setValues(com.sun.xml.internal.stream.Entity) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.InternalEntity void setValues(com.sun.xml.internal.stream.Entity)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.InternalEntity void setValues(com.sun.xml.internal.stream.Entity.InternalEntity) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.InternalEntity void setValues(com.sun.xml.internal.stream.Entity.InternalEntity)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ScannedEntity boolean isDeclaredEncoding()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ScannedEntity boolean isEncodingExternallySpecified()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ScannedEntity boolean isExternal()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ScannedEntity boolean isUnparsed()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ScannedEntity java.io.InputStream getEntityInputStream()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ScannedEntity java.io.Reader getEntityReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ScannedEntity java.lang.String getEncodingName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ScannedEntity java.lang.String getEntityVersion()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ScannedEntity java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ScannedEntity void setDeclaredEncoding(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ScannedEntity void setEncodingExternallySpecified(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.Entity.ScannedEntity void setEntityVersion(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxEntityResolverWrapper StaxEntityResolverWrapper(javax.xml.stream.XMLResolver)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxEntityResolverWrapper com.sun.xml.internal.stream.StaxXMLInputSource getStaxInputSource(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxEntityResolverWrapper com.sun.xml.internal.stream.StaxXMLInputSource getStaxInputSource(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxEntityResolverWrapper com.sun.xml.internal.stream.StaxXMLInputSource resolveEntity(com.sun.org.apache.xerces.internal.xni.XMLResourceIdentifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxEntityResolverWrapper javax.xml.stream.XMLResolver getStaxEntityResolver()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxEntityResolverWrapper void setStaxEntityResolver(javax.xml.stream.XMLResolver)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxErrorReporter javax.xml.stream.Location convertToStaxLocation(com.sun.org.apache.xerces.internal.xni.XMLLocator)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxErrorReporter void reset(com.sun.org.apache.xerces.internal.impl.PropertyManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxErrorReporter.1 1(com.sun.xml.internal.stream.StaxErrorReporter, com.sun.org.apache.xerces.internal.xni.XMLLocator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxErrorReporter.1 java.lang.String getLocationURI()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxXMLInputSource StaxXMLInputSource(com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxXMLInputSource StaxXMLInputSource(com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxXMLInputSource StaxXMLInputSource(javax.xml.stream.XMLEventReader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxXMLInputSource StaxXMLInputSource(javax.xml.stream.XMLStreamReader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxXMLInputSource boolean hasResolver()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxXMLInputSource boolean hasXMLStreamOrXMLEventReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxXMLInputSource com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource getXMLInputSource()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxXMLInputSource javax.xml.stream.XMLEventReader getXMLEventReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.StaxXMLInputSource javax.xml.stream.XMLStreamReader getXMLStreamReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLEntityReader XMLEntityReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLEntityStorage boolean hasEntities()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLEntityStorage java.lang.String expandSystemId(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.stream.XMLEntityStorage java.lang.String expandSystemId(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLEntityStorage java.lang.String expandSystemId(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.stream.XMLEntityStorage java.lang.String fixURI(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLEntityStorage java.lang.String fixURI(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLEntityStorage void endExternalSubset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLEntityStorage void reset(com.sun.org.apache.xerces.internal.impl.PropertyManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLEntityStorage void reset(com.sun.org.apache.xerces.internal.xni.parser.XMLComponentManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLEntityStorage void startExternalSubset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLEventReaderImpl XMLEventReaderImpl(javax.xml.stream.XMLStreamReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl boolean isPropertySupported(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl boolean isPropertySupported(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource jaxpSourcetoXMLInputSource(javax.xml.transform.Source) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl com.sun.org.apache.xerces.internal.xni.parser.XMLInputSource jaxpSourcetoXMLInputSource(javax.xml.transform.Source)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl java.lang.Object getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLEventReader createFilteredReader(javax.xml.stream.XMLEventReader, javax.xml.stream.EventFilter)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLEventReader createXMLEventReader(java.io.InputStream, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLEventReader createXMLEventReader(java.io.Reader)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String, java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLEventReader createXMLEventReader(java.lang.String, java.io.Reader)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLEventReader createXMLEventReader(javax.xml.stream.XMLStreamReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLEventReader createXMLEventReader(javax.xml.stream.XMLStreamReader)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLEventReader createXMLEventReader(javax.xml.transform.Source)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader, javax.xml.stream.StreamFilter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader, javax.xml.stream.StreamFilter) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLStreamReader createFilteredReader(javax.xml.stream.XMLStreamReader, javax.xml.stream.StreamFilter)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl javax.xml.stream.XMLStreamReader createXMLStreamReader(javax.xml.transform.Source)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl void initEventReader()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl void setProperty(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLInputFactoryImpl void setProperty(java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLOutputFactoryImpl boolean isPropertySupported(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLOutputFactoryImpl boolean isPropertySupported(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.stream.XMLOutputFactoryImpl java.lang.Object getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLOutputFactoryImpl javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.OutputStream, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLOutputFactoryImpl javax.xml.stream.XMLEventWriter createXMLEventWriter(java.io.Writer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLOutputFactoryImpl javax.xml.stream.XMLEventWriter createXMLEventWriter(javax.xml.transform.Result)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.xml.internal.stream.XMLOutputFactoryImpl javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.Result) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLOutputFactoryImpl javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.stream.StreamResult, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLOutputFactoryImpl javax.xml.stream.XMLStreamWriter createXMLStreamWriter(javax.xml.transform.stream.StreamResult, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLOutputFactoryImpl javax.xml.transform.stream.StreamResult toStreamResult(java.io.OutputStream, java.io.Writer, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLOutputFactoryImpl void setProperty(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.XMLOutputFactoryImpl void setProperty(java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
