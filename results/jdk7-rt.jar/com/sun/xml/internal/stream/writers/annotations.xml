<root>
  <item name="com.sun.xml.internal.stream.writers.UTF8OutputStreamWriter UTF8OutputStreamWriter(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.UTF8OutputStreamWriter java.lang.String getEncoding()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.UTF8OutputStreamWriter void write(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.UTF8OutputStreamWriter void write(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.WriterUtility boolean getEscapeCharacters()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.WriterUtility void setEscapeCharacters(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.WriterUtility void setWriter(java.io.Writer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.WriterUtility void writeXMLAttributeValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.WriterUtility void writeXMLContent(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl XMLDOMWriterImpl(javax.xml.transform.dom.DOMResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl java.lang.Object getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl java.lang.String getQName(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl java.lang.String getQName(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl java.lang.String getQName(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl javax.xml.namespace.NamespaceContext getNamespaceContext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl org.w3c.dom.Node getNode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void close()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void flush()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void incDepth()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void setNamespaceContext(javax.xml.namespace.NamespaceContext) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void setPrefix(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeAttribute(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeAttribute(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeCData(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeCharacters(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeDTD(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeNamespace(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeNamespace(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeProcessingInstruction(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeProcessingInstruction(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLDOMWriterImpl void writeStartDocument(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLEventWriterImpl XMLEventWriterImpl(javax.xml.stream.XMLStreamWriter)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLEventWriterImpl void add(javax.xml.stream.XMLEventReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLEventWriterImpl void add(javax.xml.stream.events.XMLEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLOutputSource XMLOutputSource()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl XMLStreamWriterImpl(java.io.OutputStream, com.sun.org.apache.xerces.internal.impl.PropertyManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl XMLStreamWriterImpl(java.io.OutputStream, java.lang.String, com.sun.org.apache.xerces.internal.impl.PropertyManager) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl XMLStreamWriterImpl(javax.xml.transform.stream.StreamResult, java.lang.String, com.sun.org.apache.xerces.internal.impl.PropertyManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl XMLStreamWriterImpl(javax.xml.transform.stream.StreamResult, java.lang.String, com.sun.org.apache.xerces.internal.impl.PropertyManager) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl boolean canReuse()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl boolean checkUserNamespaceContext(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl boolean containsKey(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl boolean getEscapeCharacters()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl boolean isDeclared(com.sun.org.apache.xerces.internal.xni.QName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl boolean isDefaultNamespace(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl com.sun.org.apache.xerces.internal.util.SymbolTable access$000(com.sun.xml.internal.stream.writers.XMLStreamWriterImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl com.sun.org.apache.xerces.internal.util.SymbolTable access$000(com.sun.xml.internal.stream.writers.XMLStreamWriterImpl)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl com.sun.xml.internal.stream.util.ReadOnlyIterator access$100(com.sun.xml.internal.stream.writers.XMLStreamWriterImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl com.sun.xml.internal.stream.util.ReadOnlyIterator access$100(com.sun.xml.internal.stream.writers.XMLStreamWriterImpl)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl int size()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl java.lang.Object get(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl java.lang.Object getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl javax.xml.namespace.NamespaceContext getNamespaceContext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void checkForNull(com.sun.org.apache.xerces.internal.xni.QName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void correctPrefix(com.sun.org.apache.xerces.internal.xni.QName, com.sun.org.apache.xerces.internal.xni.QName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void correctPrefix(com.sun.org.apache.xerces.internal.xni.QName, com.sun.org.apache.xerces.internal.xni.QName) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void correctPrefix(com.sun.org.apache.xerces.internal.xni.QName, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void setEscapeCharacters(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void setOutput(javax.xml.transform.stream.StreamResult, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void setOutput(javax.xml.transform.stream.StreamResult, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void setOutputUsingStream(java.io.OutputStream, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void setPrefix(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void setPrefix(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeAttribute(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeAttributeWithPrefix(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeCData(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeCharacters(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeEmptyElement(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeEmptyElement(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeEmptyElement(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeEmptyElement(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeProcessingInstruction(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeProcessingInstruction(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeProcessingInstruction(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeStartElement(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeStartElement(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeStartElement(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeStartElement(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeStartElement(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writeXMLContent(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl void writenamespace(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl.ElementStack boolean empty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl.ElementStack com.sun.xml.internal.stream.writers.XMLStreamWriterImpl.ElementState peek()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl.ElementStack com.sun.xml.internal.stream.writers.XMLStreamWriterImpl.ElementState pop()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl.ElementStack void clear()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl.ElementState void setValues(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLStreamWriterImpl.NamespaceContextImpl NamespaceContextImpl(com.sun.xml.internal.stream.writers.XMLStreamWriterImpl)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLWriter XMLWriter(java.io.Writer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLWriter XMLWriter(java.io.Writer, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLWriter java.io.Writer getWriter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLWriter void setWriter(java.io.Writer, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLWriter void write(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLWriter void write(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.xml.internal.stream.writers.XMLWriter void write(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
