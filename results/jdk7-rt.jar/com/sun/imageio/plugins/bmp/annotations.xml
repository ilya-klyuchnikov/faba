<root>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader boolean canReadRaster()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader boolean isUncOrDevicePath(byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader java.awt.image.BufferedImage readEmbedded(int, java.awt.image.BufferedImage, javax.imageio.ImageReadParam) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader java.awt.image.BufferedImage readEmbedded(int, java.awt.image.BufferedImage, javax.imageio.ImageReadParam) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader java.awt.image.BufferedImage readEmbedded(int, java.awt.image.BufferedImage, javax.imageio.ImageReadParam)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader javax.imageio.ImageReadParam getDefaultReadParam()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader javax.imageio.metadata.IIOMetadata getStreamMetadata()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader void access$100(com.sun.imageio.plugins.bmp.BMPImageReader, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader void access$200(com.sun.imageio.plugins.bmp.BMPImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader void access$300(com.sun.imageio.plugins.bmp.BMPImageReader, java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader void access$400(com.sun.imageio.plugins.bmp.BMPImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader void access$500(com.sun.imageio.plugins.bmp.BMPImageReader, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.1 void imageProgress(javax.imageio.ImageReader, float) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void imageUpdate(javax.imageio.ImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void passComplete(javax.imageio.ImageReader, java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void passStarted(javax.imageio.ImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int, int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void thumbnailPassComplete(javax.imageio.ImageReader, java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void thumbnailPassComplete(javax.imageio.ImageReader, java.awt.image.BufferedImage) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void thumbnailPassComplete(javax.imageio.ImageReader, java.awt.image.BufferedImage)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void thumbnailPassStarted(javax.imageio.ImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int, int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void thumbnailPassStarted(javax.imageio.ImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int, int[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void thumbnailPassStarted(javax.imageio.ImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int, int[]) 9">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void thumbnailPassStarted(javax.imageio.ImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void thumbnailUpdate(javax.imageio.ImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void thumbnailUpdate(javax.imageio.ImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void thumbnailUpdate(javax.imageio.ImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int[]) 8">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.2 void thumbnailUpdate(javax.imageio.ImageReader, java.awt.image.BufferedImage, int, int, int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.3 void warningOccurred(javax.imageio.ImageReader, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.4 4()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.5 5()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter EmbeddedProgressAdapter(com.sun.imageio.plugins.bmp.BMPImageReader, com.sun.imageio.plugins.bmp.BMPImageReader.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void imageComplete(javax.imageio.ImageReader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void imageComplete(javax.imageio.ImageReader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void imageProgress(javax.imageio.ImageReader, float) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void imageProgress(javax.imageio.ImageReader, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void imageStarted(javax.imageio.ImageReader, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void imageStarted(javax.imageio.ImageReader, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void readAborted(javax.imageio.ImageReader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void readAborted(javax.imageio.ImageReader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void sequenceComplete(javax.imageio.ImageReader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void sequenceComplete(javax.imageio.ImageReader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void sequenceStarted(javax.imageio.ImageReader, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void sequenceStarted(javax.imageio.ImageReader, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void thumbnailComplete(javax.imageio.ImageReader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void thumbnailComplete(javax.imageio.ImageReader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void thumbnailProgress(javax.imageio.ImageReader, float) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void thumbnailProgress(javax.imageio.ImageReader, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void thumbnailStarted(javax.imageio.ImageReader, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReader.EmbeddedProgressAdapter void thumbnailStarted(javax.imageio.ImageReader, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReaderSpi boolean canDecodeInput(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReaderSpi boolean canDecodeInput(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReaderSpi java.lang.String getDescription(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReaderSpi java.lang.String getDescription(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReaderSpi javax.imageio.ImageReader createReaderInstance(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReaderSpi javax.imageio.ImageReader createReaderInstance(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReaderSpi void onRegistration(javax.imageio.spi.ServiceRegistry, java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageReaderSpi void onRegistration(javax.imageio.spi.ServiceRegistry, java.lang.Class&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter boolean canEncodeImage(int, java.awt.image.ColorModel, java.awt.image.SampleModel) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter boolean canEncodeImage(int, java.awt.image.ColorModel, java.awt.image.SampleModel) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter boolean canEncodeImage(int, javax.imageio.ImageTypeSpecifier)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter boolean canWriteRasters()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter boolean isEven(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter int firstLowBit(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter int getCompressionType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter int getCompressionType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter int getPreferredCompressionType(java.awt.image.ColorModel, java.awt.image.SampleModel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter int getPreferredCompressionType(java.awt.image.ColorModel, java.awt.image.SampleModel) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter int getPreferredCompressionType(javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter int roundBpp(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.ImageWriteParam getDefaultWriteParam()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata convertImageMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata convertImageMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata convertImageMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata convertImageMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;null;_,!null,_-&gt;null;_,_,!null-&gt;null;_,_,null-&gt;null;_,null,_-&gt;null;null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata convertStreamMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata convertStreamMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata convertStreamMetadata(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageWriteParam)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;null;_,!null-&gt;null;_,null-&gt;null;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata getDefaultImageMetadata(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata getDefaultStreamMetadata(javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter javax.imageio.metadata.IIOMetadata getDefaultStreamMetadata(javax.imageio.ImageWriteParam)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void access$100(com.sun.imageio.plugins.bmp.BMPImageWriter, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void access$200(com.sun.imageio.plugins.bmp.BMPImageWriter, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void encodeRLE4(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void encodeRLE8(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void write(javax.imageio.metadata.IIOMetadata, javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void write(javax.imageio.metadata.IIOMetadata, javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void writeEmbedded(javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void writeMaskToPalette(int, int, byte[], byte[], byte[], byte[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void writeMaskToPalette(int, int, byte[], byte[], byte[], byte[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void writeMaskToPalette(int, int, byte[], byte[], byte[], byte[]) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter void writeMaskToPalette(int, int, byte[], byte[], byte[], byte[]) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.1 void imageProgress(javax.imageio.ImageWriter, float) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.2 void warningOccurred(javax.imageio.ImageWriter, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter IIOWriteProgressAdapter(com.sun.imageio.plugins.bmp.BMPImageWriter, com.sun.imageio.plugins.bmp.BMPImageWriter.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void imageComplete(javax.imageio.ImageWriter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void imageComplete(javax.imageio.ImageWriter)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void imageProgress(javax.imageio.ImageWriter, float) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void imageProgress(javax.imageio.ImageWriter, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void imageStarted(javax.imageio.ImageWriter, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void imageStarted(javax.imageio.ImageWriter, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void thumbnailComplete(javax.imageio.ImageWriter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void thumbnailComplete(javax.imageio.ImageWriter)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void thumbnailProgress(javax.imageio.ImageWriter, float) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void thumbnailProgress(javax.imageio.ImageWriter, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void thumbnailStarted(javax.imageio.ImageWriter, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void thumbnailStarted(javax.imageio.ImageWriter, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void writeAborted(javax.imageio.ImageWriter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriter.IIOWriteProgressAdapter void writeAborted(javax.imageio.ImageWriter)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriterSpi boolean canEncodeImage(javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriterSpi java.lang.String getDescription(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriterSpi java.lang.String getDescription(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriterSpi javax.imageio.ImageWriter createWriterInstance(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriterSpi javax.imageio.ImageWriter createWriterInstance(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriterSpi void onRegistration(javax.imageio.spi.ServiceRegistry, java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPImageWriterSpi void onRegistration(javax.imageio.spi.ServiceRegistry, java.lang.Class&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata java.lang.String countBits(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata java.lang.String toISO8859(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata javax.imageio.metadata.IIOMetadataNode addChildNode(javax.imageio.metadata.IIOMetadataNode, java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata javax.imageio.metadata.IIOMetadataNode addChildNode(javax.imageio.metadata.IIOMetadataNode, java.lang.String, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata javax.imageio.metadata.IIOMetadataNode addChildNode(javax.imageio.metadata.IIOMetadataNode, java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata javax.imageio.metadata.IIOMetadataNode getStandardCompressionNode()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata javax.imageio.metadata.IIOMetadataNode getStandardDataNode()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata org.w3c.dom.Node getAsTree(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata void addXYZPoints(javax.imageio.metadata.IIOMetadataNode, java.lang.String, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata void mergeTree(java.lang.String, org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata void mergeTree(java.lang.String, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata void setFromTree(java.lang.String, org.w3c.dom.Node) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadata void setFromTree(java.lang.String, org.w3c.dom.Node) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadataFormat boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadataFormat boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadataFormat boolean canNodeAppear(java.lang.String, javax.imageio.ImageTypeSpecifier)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;true;_,!null-&gt;true;_,null-&gt;true;null,_-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.imageio.plugins.bmp.BMPMetadataFormatResources java.lang.Object[][] getContents()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
</root>
