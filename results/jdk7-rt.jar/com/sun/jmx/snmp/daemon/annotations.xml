<root>
  <item name="com.sun.jmx.snmp.daemon.ClientHandler java.lang.String makeDebugTag()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.ClientHandler java.lang.Thread createThread(java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.ClientHandler java.lang.Thread createThread(java.lang.Runnable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicationException CommunicationException(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer boolean isActive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer int getBindTries()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer int getMaxActiveClientCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer int getServedClientCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer int getState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer java.lang.String getStateString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer java.lang.String getStringForState(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer java.lang.String makeDebugTag()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer java.lang.Thread createMainThread()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer javax.management.MBeanServer getMBeanServer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer long getBindSleepTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer void postDeregister()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer void postRegister(java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.CommunicatorServer void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SendQ com.sun.jmx.snmp.daemon.SnmpInformRequest removeRequest(long)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SendQ java.util.Vector getAllOutstandingRequest(long)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SendQ void addRequest(com.sun.jmx.snmp.daemon.SnmpInformRequest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer boolean getAuthRespEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer boolean getAuthTrapEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer boolean removeMib(com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpOid[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer boolean removeMib(com.sun.jmx.snmp.agent.SnmpMibAgent, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer boolean removeMib(com.sun.jmx.snmp.agent.SnmpMibAgent, java.lang.String, com.sun.jmx.snmp.SnmpOid[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.InetAddressAcl getInetAddressAcl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.SnmpIpAddress handleMultipleIpVersion(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.SnmpIpAddress handleMultipleIpVersion(byte[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.SnmpPduFactory getPduFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.agent.SnmpMibAgent getAgentMib(com.sun.jmx.snmp.SnmpOid) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.agent.SnmpMibHandler addMib(com.sun.jmx.snmp.agent.SnmpMibAgent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.agent.SnmpMibHandler addMib(com.sun.jmx.snmp.agent.SnmpMibAgent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.agent.SnmpMibHandler addMib(com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpOid[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.agent.SnmpMibHandler addMib(com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpOid[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.agent.SnmpMibHandler addMib(com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpOid[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.agent.SnmpMibHandler addMib(com.sun.jmx.snmp.agent.SnmpMibAgent, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.agent.SnmpMibHandler addMib(com.sun.jmx.snmp.agent.SnmpMibAgent, java.lang.String, com.sun.jmx.snmp.SnmpOid[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.agent.SnmpUserDataFactory getUserDataFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.daemon.SnmpInformRequest snmpInformRequest(com.sun.jmx.snmp.SnmpPeer, com.sun.jmx.snmp.daemon.SnmpInformHandler, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.daemon.SnmpInformRequest snmpInformRequest(com.sun.jmx.snmp.SnmpPeer, com.sun.jmx.snmp.daemon.SnmpInformHandler, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.daemon.SnmpInformRequest snmpInformRequest(java.net.InetAddress, int, java.lang.String, com.sun.jmx.snmp.daemon.SnmpInformHandler, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer com.sun.jmx.snmp.daemon.SnmpInformRequest snmpInformRequest(java.net.InetAddress, java.lang.String, com.sun.jmx.snmp.daemon.SnmpInformHandler, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer int getBindTries()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer int getInformPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer int getMaxActiveClientCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer int getMaxTries()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer int getServedClientCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer int getTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer int mapErrorStatus(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Integer getBufferSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Integer getTrapPort()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpInASNParseErrs()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpInBadCommunityNames()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpInBadCommunityUses()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpInBadVersions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpInGetNexts()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpInGetRequests()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpInPkts()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpInSetRequests()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpInTotalReqVars()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpInTotalSetVars()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpOutBadValues()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpOutGenErrs()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpOutGetResponses()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpOutNoSuchNames()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpOutPkts()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpOutTooBigs()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpOutTraps()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpProxyDrops()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Long getSnmpSilentDrops()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.String getProtocol()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.String makeDebugTag()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.lang.Thread createMainThread()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.net.InetAddress getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer java.util.Vector snmpInformRequest(com.sun.jmx.snmp.daemon.SnmpInformHandler, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void createSnmpRequestHandler(com.sun.jmx.snmp.daemon.SnmpAdaptorServer, int, java.net.DatagramSocket, java.net.DatagramPacket, com.sun.jmx.snmp.daemon.SnmpMibTree, java.util.Vector, java.lang.Object, com.sun.jmx.snmp.SnmpPduFactory, com.sun.jmx.snmp.agent.SnmpUserDataFactory, javax.management.MBeanServer, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void createSnmpRequestHandler(com.sun.jmx.snmp.daemon.SnmpAdaptorServer, int, java.net.DatagramSocket, java.net.DatagramPacket, com.sun.jmx.snmp.daemon.SnmpMibTree, java.util.Vector, java.lang.Object, com.sun.jmx.snmp.SnmpPduFactory, com.sun.jmx.snmp.agent.SnmpUserDataFactory, javax.management.MBeanServer, javax.management.ObjectName) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void doError(java.lang.Exception) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void doError(java.lang.Exception)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void doProcess()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void postDeregister()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void postRegister(java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void sendTrapMessage(com.sun.jmx.snmp.SnmpMessage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void sendTrapPdu(java.net.InetAddress, com.sun.jmx.snmp.SnmpPduPacket) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void setBufferSize(java.lang.Integer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void setEnterpriseOid(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void setPduFactory(com.sun.jmx.snmp.SnmpPduFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void setTrapPort(java.lang.Integer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpPduTrap(com.sun.jmx.snmp.SnmpPeer, com.sun.jmx.snmp.SnmpPduPacket) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpPduTrap(com.sun.jmx.snmp.SnmpPeer, com.sun.jmx.snmp.SnmpPduPacket) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpPduTrap(java.net.InetAddress, com.sun.jmx.snmp.SnmpPduPacket) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(com.sun.jmx.snmp.SnmpPeer, com.sun.jmx.snmp.SnmpIpAddress, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(com.sun.jmx.snmp.SnmpPeer, com.sun.jmx.snmp.SnmpIpAddress, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(com.sun.jmx.snmp.SnmpPeer, com.sun.jmx.snmp.SnmpIpAddress, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(com.sun.jmx.snmp.SnmpPeer, com.sun.jmx.snmp.SnmpIpAddress, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(com.sun.jmx.snmp.SnmpPeer, com.sun.jmx.snmp.SnmpIpAddress, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(int, int, com.sun.jmx.snmp.SnmpVarBindList) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, com.sun.jmx.snmp.SnmpIpAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, com.sun.jmx.snmp.SnmpIpAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, com.sun.jmx.snmp.SnmpIpAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, com.sun.jmx.snmp.SnmpIpAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, com.sun.jmx.snmp.SnmpIpAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, com.sun.jmx.snmp.SnmpIpAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, int, com.sun.jmx.snmp.SnmpIpAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, int, com.sun.jmx.snmp.SnmpIpAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, int, com.sun.jmx.snmp.SnmpIpAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, int, com.sun.jmx.snmp.SnmpIpAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, int, com.sun.jmx.snmp.SnmpIpAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, int, com.sun.jmx.snmp.SnmpIpAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, int, int, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 8">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, java.lang.String, int, int, com.sun.jmx.snmp.SnmpVarBindList) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, java.lang.String, int, int, com.sun.jmx.snmp.SnmpVarBindList) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV1Trap(java.net.InetAddress, java.lang.String, int, int, com.sun.jmx.snmp.SnmpVarBindList) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(com.sun.jmx.snmp.SnmpPeer, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(com.sun.jmx.snmp.SnmpPeer, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(com.sun.jmx.snmp.SnmpPeer, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(java.net.InetAddress, int, java.lang.String, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(java.net.InetAddress, int, java.lang.String, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(java.net.InetAddress, int, java.lang.String, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(java.net.InetAddress, int, java.lang.String, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(java.net.InetAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(java.net.InetAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(java.net.InetAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(java.net.InetAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(java.net.InetAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(java.net.InetAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpAdaptorServer void snmpV2Trap(java.net.InetAddress, java.lang.String, com.sun.jmx.snmp.SnmpOid, com.sun.jmx.snmp.SnmpVarBindList, com.sun.jmx.snmp.SnmpTimeticks) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest boolean inProgress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest boolean isAborted()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest boolean isResultAvailable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest com.sun.jmx.snmp.SnmpPdu constructPduPacket()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest com.sun.jmx.snmp.SnmpVarBindList getResponseVarBindList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest com.sun.jmx.snmp.SnmpVarBindList getVarBindList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest int getErrorIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest int getErrorStatus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest int getMaxTries()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest int getNumTries()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest int getRequestId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest int getRequestStatus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest java.lang.String snmpErrorToString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest java.lang.String statusDescription(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest java.lang.String tostring()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest java.net.InetAddress getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest long getAbsNextPollTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest long timeRemainingForAction(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest void handleError(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest void invokeOnResponse(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest void parsePduPacket(com.sun.jmx.snmp.SnmpPduRequestType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest void sendPduPacket(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpInformRequest void updateInternalVarBindWithResult(com.sun.jmx.snmp.SnmpVarBind[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree com.sun.jmx.snmp.agent.SnmpMibAgent getAgentMib(com.sun.jmx.snmp.SnmpOid) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree com.sun.jmx.snmp.agent.SnmpMibAgent getDefaultAgent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree void register(com.sun.jmx.snmp.agent.SnmpMibAgent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree void register(com.sun.jmx.snmp.agent.SnmpMibAgent, long[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree void unregister(com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpOid[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode TreeNode(com.sun.jmx.snmp.daemon.SnmpMibTree, long, com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode, com.sun.jmx.snmp.daemon.SnmpMibTree.1) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode boolean match(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode com.sun.jmx.snmp.agent.SnmpMibAgent access$102(com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode, com.sun.jmx.snmp.agent.SnmpMibAgent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode com.sun.jmx.snmp.agent.SnmpMibAgent access$102(com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode, com.sun.jmx.snmp.agent.SnmpMibAgent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode com.sun.jmx.snmp.agent.SnmpMibAgent getAgentMib()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode retrieveChild(long[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode retrieveChild(long[], int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode retrieveMatchingBranch(long[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode retrieveMatchingBranch(long[], int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode void access$200(com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode, long[], int, com.sun.jmx.snmp.agent.SnmpMibAgent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode void access$200(com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode, long[], int, com.sun.jmx.snmp.agent.SnmpMibAgent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode void access$300(com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode, com.sun.jmx.snmp.agent.SnmpMibAgent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode void access$400(com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode, com.sun.jmx.snmp.agent.SnmpMibAgent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode void printTree(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode void registerNode(com.sun.jmx.snmp.agent.SnmpMibAgent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpMibTree.TreeNode void registerNode(long[], int, com.sun.jmx.snmp.agent.SnmpMibAgent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler SnmpRequestHandler(com.sun.jmx.snmp.daemon.SnmpAdaptorServer, int, java.net.DatagramSocket, java.net.DatagramPacket, com.sun.jmx.snmp.daemon.SnmpMibTree, java.util.Vector, java.lang.Object, com.sun.jmx.snmp.SnmpPduFactory, com.sun.jmx.snmp.agent.SnmpUserDataFactory, javax.management.MBeanServer, javax.management.ObjectName) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler boolean checkPduType(com.sun.jmx.snmp.SnmpPduPacket) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpMessage makeResponseMessage(com.sun.jmx.snmp.SnmpMessage)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpMessage newTooBigMessage(com.sun.jmx.snmp.SnmpMessage)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket checkAcl(com.sun.jmx.snmp.SnmpPduPacket) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket executeSubRequest(com.sun.jmx.snmp.SnmpPduPacket, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket executeSubRequest(com.sun.jmx.snmp.SnmpPduPacket, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket makeErrorVarbindPdu(com.sun.jmx.snmp.SnmpPduPacket, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket makeErrorVarbindPdu(com.sun.jmx.snmp.SnmpPduPacket, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket makeGetBulkResponsePdu(com.sun.jmx.snmp.SnmpPduBulk, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket makeGetSetResponsePdu(com.sun.jmx.snmp.SnmpPduRequest, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket makeGetSetResponsePdu(com.sun.jmx.snmp.SnmpPduRequest, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket makeNoMibErrorPdu(com.sun.jmx.snmp.SnmpPduRequest, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket makeNoMibErrorPdu(com.sun.jmx.snmp.SnmpPduRequest, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket makeResponsePdu(com.sun.jmx.snmp.SnmpPduPacket, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket makeResponsePdu(com.sun.jmx.snmp.SnmpPduPacket, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket mergeNextResponses(com.sun.jmx.snmp.SnmpPduRequest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket mergeNextResponses(com.sun.jmx.snmp.SnmpPduRequest)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket mergeResponses(com.sun.jmx.snmp.SnmpPduRequest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket mergeResponses(com.sun.jmx.snmp.SnmpPduRequest)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket newTooBigPdu(com.sun.jmx.snmp.SnmpPduPacket) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket newTooBigPdu(com.sun.jmx.snmp.SnmpPduPacket)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket reduceResponsePdu(com.sun.jmx.snmp.SnmpPduPacket, com.sun.jmx.snmp.SnmpPduPacket, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket reduceResponsePdu(com.sun.jmx.snmp.SnmpPduPacket, com.sun.jmx.snmp.SnmpPduPacket, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket reduceResponsePdu(com.sun.jmx.snmp.SnmpPduPacket, com.sun.jmx.snmp.SnmpPduPacket, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket turboProcessingGetSet(com.sun.jmx.snmp.SnmpPduRequest, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduPacket turboProcessingGetSet(com.sun.jmx.snmp.SnmpPduRequest, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduRequest newErrorResponsePdu(com.sun.jmx.snmp.SnmpPduPacket, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduRequest newErrorResponsePdu(com.sun.jmx.snmp.SnmpPduPacket, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduRequest newValidResponsePdu(com.sun.jmx.snmp.SnmpPduPacket, com.sun.jmx.snmp.SnmpVarBind[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler com.sun.jmx.snmp.SnmpPduRequest newValidResponsePdu(com.sun.jmx.snmp.SnmpPduPacket, com.sun.jmx.snmp.SnmpVarBind[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler java.lang.String makeDebugTag()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler java.lang.Thread createThread(java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler java.lang.Thread createThread(java.lang.Runnable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;null;null-&gt;null&quot;,pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler java.net.DatagramPacket makeResponsePacket(java.net.DatagramPacket)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpRequestHandler void splitRequest(com.sun.jmx.snmp.SnmpPduRequest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpResponseHandler void processDatagram(java.net.DatagramPacket) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSendServer SnmpSendServer(java.lang.ThreadGroup, com.sun.jmx.snmp.daemon.SnmpQManager) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSendServer java.lang.String reqListToString(java.util.Vector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSendServer java.lang.String reqListToString(java.util.Vector)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSendServer void fireRequest(com.sun.jmx.snmp.daemon.SnmpInformRequest) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSendServer void fireRequestList(java.util.Vector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSession boolean syncInProgress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSession com.sun.jmx.snmp.daemon.SnmpInformRequest makeAsyncRequest(java.net.InetAddress, java.lang.String, com.sun.jmx.snmp.daemon.SnmpInformHandler, com.sun.jmx.snmp.SnmpVarBindList, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSession com.sun.jmx.snmp.daemon.SnmpInformRequest nextResponse()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSession com.sun.jmx.snmp.daemon.SnmpQManager getSnmpQManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSession com.sun.jmx.snmp.daemon.SnmpSocket getSocket()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSession void initialize(com.sun.jmx.snmp.daemon.SnmpAdaptorServer, com.sun.jmx.snmp.daemon.SnmpResponseHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSession void processResponse(com.sun.jmx.snmp.daemon.SnmpInformRequest) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSession void waitForResponse(com.sun.jmx.snmp.daemon.SnmpInformRequest, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSocket SnmpSocket(com.sun.jmx.snmp.daemon.SnmpResponseHandler, java.net.InetAddress, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSocket void handleJavaError(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSocket void sendPacket(byte[], int, java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubBulkRequestHandler SnmpSubBulkRequestHandler(com.sun.jmx.snmp.SnmpEngine, com.sun.jmx.snmp.daemon.SnmpAdaptorServer, com.sun.jmx.snmp.internal.SnmpIncomingRequest, com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpPdu, int, int, int) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubBulkRequestHandler SnmpSubBulkRequestHandler(com.sun.jmx.snmp.daemon.SnmpAdaptorServer, com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpPdu, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubBulkRequestHandler com.sun.jmx.snmp.SnmpVarBind findVarBind(com.sun.jmx.snmp.SnmpVarBind, com.sun.jmx.snmp.SnmpVarBind) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubBulkRequestHandler com.sun.jmx.snmp.SnmpVarBind findVarBind(com.sun.jmx.snmp.SnmpVarBind, com.sun.jmx.snmp.SnmpVarBind)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,null-&gt;null;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubBulkRequestHandler void init(com.sun.jmx.snmp.daemon.SnmpAdaptorServer, com.sun.jmx.snmp.SnmpPdu, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubBulkRequestHandler void updateResult(com.sun.jmx.snmp.SnmpVarBind[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubNextRequestHandler SnmpSubNextRequestHandler(com.sun.jmx.snmp.SnmpEngine, com.sun.jmx.snmp.daemon.SnmpAdaptorServer, com.sun.jmx.snmp.internal.SnmpIncomingRequest, com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpPdu) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubNextRequestHandler SnmpSubNextRequestHandler(com.sun.jmx.snmp.daemon.SnmpAdaptorServer, com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpPdu) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubNextRequestHandler void init(com.sun.jmx.snmp.SnmpPdu, com.sun.jmx.snmp.daemon.SnmpAdaptorServer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubNextRequestHandler void updateRequest(com.sun.jmx.snmp.SnmpVarBind, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubRequestHandler SnmpSubRequestHandler(com.sun.jmx.snmp.SnmpEngine, com.sun.jmx.snmp.internal.SnmpIncomingRequest, com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpPdu) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubRequestHandler SnmpSubRequestHandler(com.sun.jmx.snmp.SnmpEngine, com.sun.jmx.snmp.internal.SnmpIncomingRequest, com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpPdu, boolean) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubRequestHandler SnmpSubRequestHandler(com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpPdu) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubRequestHandler SnmpSubRequestHandler(com.sun.jmx.snmp.agent.SnmpMibAgent, com.sun.jmx.snmp.SnmpPdu, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubRequestHandler int getErrorStatus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubRequestHandler int mapErrorStatus(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubRequestHandler int mapErrorStatusToV1(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubRequestHandler int mapErrorStatusToV2(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubRequestHandler void updateResult(com.sun.jmx.snmp.SnmpVarBind[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpSubRequestHandler.NonSyncVector E elementAtNonSync(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.snmp.daemon.SnmpTimerServer SnmpTimerServer(java.lang.ThreadGroup, com.sun.jmx.snmp.daemon.SnmpQManager) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.WaitQ com.sun.jmx.snmp.daemon.SnmpInformRequest getTimeoutRequests()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.WaitQ com.sun.jmx.snmp.daemon.SnmpInformRequest removeRequest(long)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.snmp.daemon.WaitQ void addWaiting(com.sun.jmx.snmp.daemon.SnmpInformRequest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
