<root>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor DefaultMBeanServerInterceptor(javax.management.MBeanServer, javax.management.MBeanServerDelegate, com.sun.jmx.mbeanserver.MBeanInstantiator, com.sun.jmx.mbeanserver.Repository) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor DefaultMBeanServerInterceptor(javax.management.MBeanServer, javax.management.MBeanServerDelegate, com.sun.jmx.mbeanserver.MBeanInstantiator, com.sun.jmx.mbeanserver.Repository) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor DefaultMBeanServerInterceptor(javax.management.MBeanServer, javax.management.MBeanServerDelegate, com.sun.jmx.mbeanserver.MBeanInstantiator, com.sun.jmx.mbeanserver.Repository) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor DefaultMBeanServerInterceptor(javax.management.MBeanServer, javax.management.MBeanServerDelegate, com.sun.jmx.mbeanserver.MBeanInstantiator, com.sun.jmx.mbeanserver.Repository) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor T getNotificationBroadcaster(javax.management.ObjectName, java.lang.Object, java.lang.Class&lt;T&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor boolean isInstanceOf(javax.management.ObjectName, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor boolean isRegistered(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ResourceContext createClassLoaderContext(java.lang.ClassLoader, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ResourceContext makeResourceContextFor(java.lang.Object, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ResourceContext registerWithRepository(java.lang.Object, javax.management.DynamicMBean, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ResourceContext unregisterFromRepository(java.lang.Object, javax.management.DynamicMBean, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ResourceContext unregisterFromRepository(java.lang.Object, javax.management.DynamicMBean, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor com.sun.jmx.mbeanserver.MBeanInstantiator access$200(com.sun.jmx.interceptor.DefaultMBeanServerInterceptor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor com.sun.jmx.mbeanserver.MBeanInstantiator access$200(com.sun.jmx.interceptor.DefaultMBeanServerInterceptor)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.io.ObjectInputStream deserialize(java.lang.String, byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.io.ObjectInputStream deserialize(java.lang.String, byte[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.io.ObjectInputStream deserialize(java.lang.String, javax.management.ObjectName, byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.io.ObjectInputStream deserialize(java.lang.String, javax.management.ObjectName, byte[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.io.ObjectInputStream deserialize(java.lang.String, javax.management.ObjectName, byte[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.io.ObjectInputStream deserialize(javax.management.ObjectName, byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.io.ObjectInputStream deserialize(javax.management.ObjectName, byte[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.ClassLoader getClassLoader(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.ClassLoader getClassLoaderFor(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object getAttribute(javax.management.ObjectName, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object getAttribute(javax.management.ObjectName, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object getResource(javax.management.DynamicMBean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String, java.lang.Object[], java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String, java.lang.Object[], java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String, java.lang.Object[], java.lang.String[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String, javax.management.ObjectName, java.lang.Object[], java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String, javax.management.ObjectName, java.lang.Object[], java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String, javax.management.ObjectName, java.lang.Object[], java.lang.String[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.Object instantiate(java.lang.String, javax.management.ObjectName, java.lang.Object[], java.lang.String[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.String getClassName(javax.management.DynamicMBean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.String getDefaultDomain()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.String getNewMBeanClassName(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.lang.String safeGetClassName(javax.management.DynamicMBean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.util.Set&lt;javax.management.ObjectInstance&gt; filterListOfObjectInstances(java.util.Set&lt;javax.management.ObjectInstance&gt;, javax.management.QueryExp) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.util.Set&lt;javax.management.ObjectInstance&gt; filterListOfObjectInstances(java.util.Set&lt;javax.management.ObjectInstance&gt;, javax.management.QueryExp)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.util.Set&lt;javax.management.ObjectInstance&gt; objectInstancesFromFilteredNamedObjects(java.util.Set&lt;com.sun.jmx.mbeanserver.NamedObject&gt;, javax.management.QueryExp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.util.Set&lt;javax.management.ObjectInstance&gt; objectInstancesFromFilteredNamedObjects(java.util.Set&lt;com.sun.jmx.mbeanserver.NamedObject&gt;, javax.management.QueryExp) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.util.Set&lt;javax.management.ObjectName&gt; objectNamesFromFilteredNamedObjects(java.util.Set&lt;com.sun.jmx.mbeanserver.NamedObject&gt;, javax.management.QueryExp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor java.util.Set&lt;javax.management.ObjectName&gt; objectNamesFromFilteredNamedObjects(java.util.Set&lt;com.sun.jmx.mbeanserver.NamedObject&gt;, javax.management.QueryExp) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.AttributeList getAttributes(javax.management.ObjectName, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.AttributeList getAttributes(javax.management.ObjectName, java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.AttributeList setAttributes(javax.management.ObjectName, javax.management.AttributeList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.AttributeList setAttributes(javax.management.ObjectName, javax.management.AttributeList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.DynamicMBean getMBean(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.MBeanInfo getMBeanInfo(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.NotificationListener getListener(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance createMBean(java.lang.String, javax.management.ObjectName, java.lang.Object[], java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance createMBean(java.lang.String, javax.management.ObjectName, java.lang.Object[], java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance createMBean(java.lang.String, javax.management.ObjectName, javax.management.ObjectName, boolean, java.lang.Object[], java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance createMBean(java.lang.String, javax.management.ObjectName, javax.management.ObjectName, boolean, java.lang.Object[], java.lang.String[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance createMBean(java.lang.String, javax.management.ObjectName, javax.management.ObjectName, boolean, java.lang.Object[], java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance createMBean(java.lang.String, javax.management.ObjectName, javax.management.ObjectName, java.lang.Object[], java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance createMBean(java.lang.String, javax.management.ObjectName, javax.management.ObjectName, java.lang.Object[], java.lang.String[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance createMBean(java.lang.String, javax.management.ObjectName, javax.management.ObjectName, java.lang.Object[], java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance getObjectInstance(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance registerDynamicMBean(java.lang.String, javax.management.DynamicMBean, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance registerMBean(java.lang.Object, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance registerMBean(java.lang.Object, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance registerObject(java.lang.String, java.lang.Object, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectInstance registerObject(java.lang.String, java.lang.Object, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectName nonDefaultDomain(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor javax.management.ObjectName preRegister(javax.management.DynamicMBean, javax.management.MBeanServer, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void access$000(com.sun.jmx.interceptor.DefaultMBeanServerInterceptor, java.lang.ClassLoader, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void access$100(com.sun.jmx.interceptor.DefaultMBeanServerInterceptor, java.lang.ClassLoader, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void access$100(com.sun.jmx.interceptor.DefaultMBeanServerInterceptor, java.lang.ClassLoader, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void addNotificationListener(javax.management.ObjectName, javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void addNotificationListener(javax.management.ObjectName, javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void addNotificationListener(javax.management.ObjectName, javax.management.ObjectName, javax.management.NotificationFilter, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void checkMBeanPermission(java.lang.String, java.lang.String, javax.management.ObjectName, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void checkMBeanPermission(java.lang.String, java.lang.String, javax.management.ObjectName, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void checkMBeanPermission(javax.management.DynamicMBean, java.lang.String, javax.management.ObjectName, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void exclusiveUnregisterMBean(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void postDeregisterInvoke(javax.management.ObjectName, javax.management.MBeanRegistration) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void postDeregisterInvoke(javax.management.ObjectName, javax.management.MBeanRegistration) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void postRegister(javax.management.ObjectName, javax.management.DynamicMBean, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void removeClassLoader(java.lang.ClassLoader, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void removeNotificationListener(javax.management.ObjectName, javax.management.NotificationListener) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void removeNotificationListener(javax.management.ObjectName, javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void removeNotificationListener(javax.management.ObjectName, javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void removeNotificationListener(javax.management.ObjectName, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void removeNotificationListener(javax.management.ObjectName, javax.management.ObjectName, javax.management.NotificationFilter, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void rethrow(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void rethrowMaybeMBeanException(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void setAttribute(javax.management.ObjectName, javax.management.Attribute) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void setAttribute(javax.management.ObjectName, javax.management.Attribute) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void throwMBeanRegistrationException(java.lang.Throwable, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void throwMBeanRegistrationException(java.lang.Throwable, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor void unregisterMBean(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.1 1(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.2 2(com.sun.jmx.interceptor.DefaultMBeanServerInterceptor, java.lang.ClassLoader, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.2 void done()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.3 3(com.sun.jmx.interceptor.DefaultMBeanServerInterceptor)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ListenerWrapper ListenerWrapper(javax.management.NotificationListener, javax.management.ObjectName, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ListenerWrapper boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ListenerWrapper boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ResourceContext.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ResourceContext.1 void done()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ResourceContext.1 void registering()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.ResourceContext.1 void unregistered()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
</root>
