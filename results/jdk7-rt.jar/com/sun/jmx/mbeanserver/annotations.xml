<root>
  <item name="com.sun.jmx.mbeanserver.ClassLoaderRepositorySupport boolean add(javax.management.ObjectName, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;true;_,!null-&gt;true;_,null-&gt;true;null,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.ClassLoaderRepositorySupport boolean remove(javax.management.ObjectName, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ClassLoaderRepositorySupport boolean remove(javax.management.ObjectName, java.lang.ClassLoader) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ClassLoaderRepositorySupport java.lang.Class&lt;?&gt; loadClass(com.sun.jmx.mbeanserver.ClassLoaderRepositorySupport.LoaderEntry[], java.lang.String, java.lang.ClassLoader, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ClassLoaderRepositorySupport java.lang.Class&lt;?&gt; loadClass(com.sun.jmx.mbeanserver.ClassLoaderRepositorySupport.LoaderEntry[], java.lang.String, java.lang.ClassLoader, java.lang.ClassLoader) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ClassLoaderRepositorySupport java.lang.Class&lt;?&gt; loadClass(com.sun.jmx.mbeanserver.ClassLoaderRepositorySupport.LoaderEntry[], java.lang.String, java.lang.ClassLoader, java.lang.ClassLoader) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ClassLoaderRepositorySupport java.lang.Class&lt;?&gt; loadClassBefore(java.lang.ClassLoader, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ClassLoaderRepositorySupport java.lang.Class&lt;?&gt; loadClassWithout(java.lang.ClassLoader, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ClassLoaderRepositorySupport void removeClassLoader(java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ConvertingMethod ConvertingMethod(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ConvertingMethod com.sun.jmx.mbeanserver.ConvertingMethod from(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ConvertingMethod com.sun.jmx.mbeanserver.ConvertingMethod from(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ConvertingMethod java.lang.Object fromOpenParameter(com.sun.jmx.mbeanserver.MXBeanLookup, java.lang.Object, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ConvertingMethod java.lang.Object fromOpenReturnValue(com.sun.jmx.mbeanserver.MXBeanLookup, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ConvertingMethod java.lang.Object toOpenParameter(com.sun.jmx.mbeanserver.MXBeanLookup, java.lang.Object, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ConvertingMethod java.lang.Object toOpenReturnValue(com.sun.jmx.mbeanserver.MXBeanLookup, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ConvertingMethod java.lang.Object[] fromOpenParameters(java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.ConvertingMethod java.lang.Object[] toOpenParameters(com.sun.jmx.mbeanserver.MXBeanLookup, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ConvertingMethod java.lang.Object[] toOpenParameters(com.sun.jmx.mbeanserver.MXBeanLookup, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.ConvertingMethod java.lang.String methodName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory boolean isIdentity(com.sun.jmx.mbeanserver.MXBeanMapping) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory boolean isIdentity(com.sun.jmx.mbeanserver.MXBeanMapping)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeArrayOrCollectionMapping(java.lang.reflect.Type, java.lang.reflect.Type, com.sun.jmx.mbeanserver.MXBeanMappingFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeArrayOrCollectionMapping(java.lang.reflect.Type, java.lang.reflect.Type, com.sun.jmx.mbeanserver.MXBeanMappingFactory) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeArrayOrCollectionMapping(java.lang.reflect.Type, java.lang.reflect.Type, com.sun.jmx.mbeanserver.MXBeanMappingFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeCompositeMapping(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MXBeanMappingFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeCompositeMapping(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MXBeanMappingFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeEnumMapping(java.lang.Class&lt;?&gt;, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeEnumMapping(java.lang.Class&lt;?&gt;, java.lang.Class&lt;T&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeEnumMapping(java.lang.Class&lt;?&gt;, java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeMXBeanRefMapping(java.lang.reflect.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeMXBeanRefMapping(java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeMapping(java.lang.reflect.Type, com.sun.jmx.mbeanserver.MXBeanMappingFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeMapping(java.lang.reflect.Type, com.sun.jmx.mbeanserver.MXBeanMappingFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeParameterizedTypeMapping(java.lang.reflect.ParameterizedType, com.sun.jmx.mbeanserver.MXBeanMappingFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeParameterizedTypeMapping(java.lang.reflect.ParameterizedType, com.sun.jmx.mbeanserver.MXBeanMappingFactory) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeParameterizedTypeMapping(java.lang.reflect.ParameterizedType, com.sun.jmx.mbeanserver.MXBeanMappingFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeTabularMapping(java.lang.reflect.Type, boolean, java.lang.reflect.Type, java.lang.reflect.Type, com.sun.jmx.mbeanserver.MXBeanMappingFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeTabularMapping(java.lang.reflect.Type, boolean, java.lang.reflect.Type, java.lang.reflect.Type, com.sun.jmx.mbeanserver.MXBeanMappingFactory) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping makeTabularMapping(java.lang.reflect.Type, boolean, java.lang.reflect.Type, java.lang.reflect.Type, com.sun.jmx.mbeanserver.MXBeanMappingFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory com.sun.jmx.mbeanserver.MXBeanMapping mappingForType(java.lang.reflect.Type, com.sun.jmx.mbeanserver.MXBeanMappingFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory java.io.InvalidObjectException invalidObjectException(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory java.lang.String capitalize(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory java.lang.String decapitalize(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory java.lang.String propertyName(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory javax.management.openmbean.OpenDataException openDataException(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory void mustBeComparable(java.lang.Class&lt;?&gt;, java.lang.reflect.Type) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.ArrayMapping ArrayMapping(java.lang.reflect.Type, javax.management.openmbean.ArrayType&lt;?&gt;, java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MXBeanMapping) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.ArrayMapping ArrayMapping(java.lang.reflect.Type, javax.management.openmbean.ArrayType&lt;?&gt;, java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MXBeanMapping) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.ArrayMapping ArrayMapping(java.lang.reflect.Type, javax.management.openmbean.ArrayType&lt;?&gt;, java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MXBeanMapping) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.ArrayMapping java.lang.Object fromNonNullOpenValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.ArrayMapping java.lang.Object toNonNullOpenValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CollectionMapping CollectionMapping(java.lang.reflect.Type, javax.management.openmbean.ArrayType&lt;?&gt;, java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MXBeanMapping) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CollectionMapping CollectionMapping(java.lang.reflect.Type, javax.management.openmbean.ArrayType&lt;?&gt;, java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MXBeanMapping) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CollectionMapping CollectionMapping(java.lang.reflect.Type, javax.management.openmbean.ArrayType&lt;?&gt;, java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MXBeanMapping) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CollectionMapping java.lang.Object fromNonNullOpenValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CollectionMapping java.lang.Object toNonNullOpenValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderCheckGetters java.lang.Object fromCompositeData(javax.management.openmbean.CompositeData, java.lang.String[], com.sun.jmx.mbeanserver.MXBeanMapping[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderCheckGetters java.lang.Object fromCompositeData(javax.management.openmbean.CompositeData, java.lang.String[], com.sun.jmx.mbeanserver.MXBeanMapping[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderCheckGetters java.lang.Object fromCompositeData(javax.management.openmbean.CompositeData, java.lang.String[], com.sun.jmx.mbeanserver.MXBeanMapping[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderCheckGetters java.lang.String applicable(java.lang.reflect.Method[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderCheckGetters java.lang.String applicable(java.lang.reflect.Method[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderViaConstructor boolean subset(java.util.BitSet, java.util.BitSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderViaConstructor java.lang.Object fromCompositeData(javax.management.openmbean.CompositeData, java.lang.String[], com.sun.jmx.mbeanserver.MXBeanMapping[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderViaConstructor java.lang.Object fromCompositeData(javax.management.openmbean.CompositeData, java.lang.String[], com.sun.jmx.mbeanserver.MXBeanMapping[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderViaFrom java.lang.Object fromCompositeData(javax.management.openmbean.CompositeData, java.lang.String[], com.sun.jmx.mbeanserver.MXBeanMapping[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderViaFrom java.lang.Object fromCompositeData(javax.management.openmbean.CompositeData, java.lang.String[], com.sun.jmx.mbeanserver.MXBeanMapping[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderViaFrom java.lang.String applicable(java.lang.reflect.Method[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderViaProxy java.lang.Object fromCompositeData(javax.management.openmbean.CompositeData, java.lang.String[], com.sun.jmx.mbeanserver.MXBeanMapping[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderViaProxy java.lang.Object fromCompositeData(javax.management.openmbean.CompositeData, java.lang.String[], com.sun.jmx.mbeanserver.MXBeanMapping[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderViaProxy java.lang.Object fromCompositeData(javax.management.openmbean.CompositeData, java.lang.String[], com.sun.jmx.mbeanserver.MXBeanMapping[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderViaSetters java.lang.Object fromCompositeData(javax.management.openmbean.CompositeData, java.lang.String[], com.sun.jmx.mbeanserver.MXBeanMapping[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeBuilderViaSetters java.lang.String applicable(java.lang.reflect.Method[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeMapping CompositeMapping(java.lang.Class&lt;?&gt;, javax.management.openmbean.CompositeType, java.lang.String[], java.lang.reflect.Method[], com.sun.jmx.mbeanserver.MXBeanMappingFactory) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeMapping CompositeMapping(java.lang.Class&lt;?&gt;, javax.management.openmbean.CompositeType, java.lang.String[], java.lang.reflect.Method[], com.sun.jmx.mbeanserver.MXBeanMappingFactory) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeMapping CompositeMapping(java.lang.Class&lt;?&gt;, javax.management.openmbean.CompositeType, java.lang.String[], java.lang.reflect.Method[], com.sun.jmx.mbeanserver.MXBeanMappingFactory) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeMapping java.lang.Object toNonNullOpenValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.CompositeMapping java.lang.Object toNonNullOpenValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.EnumMapping EnumMapping(java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.EnumMapping T fromNonNullOpenValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.EnumMapping java.lang.Object fromNonNullOpenValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.EnumMapping java.lang.Object toNonNullOpenValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.IdentityMapping IdentityMapping(java.lang.reflect.Type, javax.management.openmbean.OpenType&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.IdentityMapping IdentityMapping(java.lang.reflect.Type, javax.management.openmbean.OpenType&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.IdentityMapping java.lang.Object fromNonNullOpenValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.IdentityMapping java.lang.Object toNonNullOpenValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.MXBeanRefMapping MXBeanRefMapping(java.lang.reflect.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.MXBeanRefMapping com.sun.jmx.mbeanserver.MXBeanLookup lookupNotNull(java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.MXBeanRefMapping java.lang.Object fromNonNullOpenValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.MXBeanRefMapping java.lang.Object toNonNullOpenValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.Mappings Mappings(com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.NonNullMXBeanMapping NonNullMXBeanMapping(java.lang.reflect.Type, javax.management.openmbean.OpenType&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.NonNullMXBeanMapping NonNullMXBeanMapping(java.lang.reflect.Type, javax.management.openmbean.OpenType&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.NonNullMXBeanMapping java.lang.Object fromOpenValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.NonNullMXBeanMapping java.lang.Object fromOpenValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.NonNullMXBeanMapping java.lang.Object toOpenValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.NonNullMXBeanMapping java.lang.Object toOpenValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.TabularMapping TabularMapping(java.lang.reflect.Type, boolean, javax.management.openmbean.TabularType, com.sun.jmx.mbeanserver.MXBeanMapping, com.sun.jmx.mbeanserver.MXBeanMapping) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.TabularMapping TabularMapping(java.lang.reflect.Type, boolean, javax.management.openmbean.TabularType, com.sun.jmx.mbeanserver.MXBeanMapping, com.sun.jmx.mbeanserver.MXBeanMapping) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DefaultMXBeanMappingFactory.TabularMapping java.lang.Object fromNonNullOpenValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DescriptorCache com.sun.jmx.mbeanserver.DescriptorCache getInstance(javax.management.JMX) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.DescriptorCache com.sun.jmx.mbeanserver.DescriptorCache getInstance(javax.management.JMX)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.DescriptorCache javax.management.ImmutableDescriptor get(javax.management.ImmutableDescriptor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.DescriptorCache javax.management.ImmutableDescriptor union(javax.management.Descriptor...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector java.lang.Class&lt;? super T&gt; findMBeanInterface(java.lang.Class&lt;T&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector java.lang.Class&lt;? super T&gt; findMBeanInterface(java.lang.Class&lt;T&gt;, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector java.lang.Class&lt;? super T&gt; findMBeanInterface(java.lang.Class&lt;T&gt;, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector java.lang.Class&lt;? super T&gt; getMXBeanInterface(java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector java.lang.Class&lt;? super T&gt; getStandardMBeanInterface(java.lang.Class&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector java.lang.Class&lt;? super T&gt; implementsMBean(java.lang.Class&lt;T&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector java.lang.Class&lt;? super T&gt; implementsMBean(java.lang.Class&lt;T&gt;, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector java.lang.Object annotationToField(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector java.lang.Object annotationToField(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector java.lang.Object elementFromComplex(java.lang.Object, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector javax.management.Descriptor descriptorForAnnotations(java.lang.annotation.Annotation[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector javax.management.Descriptor descriptorForElement(java.lang.reflect.AnnotatedElement) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector javax.management.DynamicMBean makeDynamicMBean(T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector javax.management.DynamicMBean makeDynamicMBean(T)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector javax.management.MBeanInfo getClassMBeanInfo(com.sun.jmx.mbeanserver.MBeanIntrospector&lt;M&gt;, java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector javax.management.MBeanInfo getClassMBeanInfo(com.sun.jmx.mbeanserver.MBeanIntrospector&lt;M&gt;, java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector javax.management.MBeanInfo testCompliance(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector javax.management.MBeanInfo testCompliance(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector javax.management.NotCompliantMBeanException throwException(java.lang.Class&lt;?&gt;, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector javax.management.NotCompliantMBeanException throwException(java.lang.Class&lt;?&gt;, java.lang.Throwable) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector void testCreation(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector.BeansHelper java.lang.reflect.Method getMethod(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector.BeansHelper java.lang.reflect.Method getMethod(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector.SimpleIntrospector boolean isReadMethod(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Introspector.SimpleIntrospector java.lang.reflect.Method getReadMethod(java.lang.Class&lt;?&gt;, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, com.sun.jmx.mbeanserver.MBeanInstantiator, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, com.sun.jmx.mbeanserver.MBeanInstantiator, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, com.sun.jmx.mbeanserver.MBeanInstantiator, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, com.sun.jmx.mbeanserver.MBeanInstantiator, boolean) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, com.sun.jmx.mbeanserver.MBeanInstantiator, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, com.sun.jmx.mbeanserver.MBeanInstantiator, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, com.sun.jmx.mbeanserver.MBeanInstantiator, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer JmxMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, com.sun.jmx.mbeanserver.MBeanInstantiator, boolean, boolean) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer com.sun.jmx.mbeanserver.MBeanInstantiator access$200(com.sun.jmx.mbeanserver.JmxMBeanServer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer java.io.ObjectInputStream deserialize(java.lang.String, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer javax.management.Attribute cloneAttribute(javax.management.Attribute)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer javax.management.AttributeList cloneAttributeList(javax.management.AttributeList)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer javax.management.MBeanServer access$100(com.sun.jmx.mbeanserver.JmxMBeanServer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer javax.management.MBeanServer newMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer javax.management.MBeanServer newMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer javax.management.MBeanServer newMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer javax.management.MBeanServer newMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer javax.management.MBeanServerDelegate access$000(com.sun.jmx.mbeanserver.JmxMBeanServer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer javax.management.MBeanServerDelegate newMBeanServerDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer javax.management.ObjectName cloneObjectName(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer void checkMBeanPermission(java.lang.String, java.lang.String, javax.management.ObjectName, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer void checkMBeanPermission(java.lang.String, java.lang.String, javax.management.ObjectName, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServer void setMBeanServerInterceptor(javax.management.MBeanServer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServerBuilder javax.management.MBeanServer newMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServerBuilder javax.management.MBeanServer newMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServerBuilder javax.management.MBeanServer newMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServerBuilder javax.management.MBeanServer newMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.JmxMBeanServerBuilder javax.management.MBeanServerDelegate newMBeanServerDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanAnalyzer MBeanAnalyzer(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MBeanIntrospector&lt;M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanAnalyzer MBeanAnalyzer(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MBeanIntrospector&lt;M&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanAnalyzer com.sun.jmx.mbeanserver.MBeanAnalyzer&lt;M&gt; analyzer(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MBeanIntrospector&lt;M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanAnalyzer com.sun.jmx.mbeanserver.MBeanAnalyzer&lt;M&gt; analyzer(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MBeanIntrospector&lt;M&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanAnalyzer com.sun.jmx.mbeanserver.MBeanAnalyzer&lt;M&gt; analyzer(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MBeanIntrospector&lt;M&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanAnalyzer java.util.List&lt;java.lang.reflect.Method&gt; eliminateCovariantMethods(java.util.List&lt;java.lang.reflect.Method&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanAnalyzer java.util.List&lt;java.lang.reflect.Method&gt; eliminateCovariantMethods(java.util.List&lt;java.lang.reflect.Method&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanAnalyzer void initMaps(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MBeanIntrospector&lt;M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanAnalyzer void initMaps(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MBeanIntrospector&lt;M&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanAnalyzer.AttrMethods AttrMethods(com.sun.jmx.mbeanserver.MBeanAnalyzer.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanAnalyzer.MethodOrder int compare(java.lang.reflect.Method, java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanAnalyzer.MethodOrder int compare(java.lang.reflect.Method, java.lang.reflect.Method) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator com.sun.jmx.mbeanserver.ModifiableClassLoaderRepository access$000(com.sun.jmx.mbeanserver.MBeanInstantiator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.io.ObjectInputStream deserialize(java.lang.ClassLoader, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.io.ObjectInputStream deserialize(java.lang.ClassLoader, byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.io.ObjectInputStream deserialize(java.lang.String, javax.management.ObjectName, byte[], java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.io.ObjectInputStream deserialize(java.lang.String, javax.management.ObjectName, byte[], java.lang.ClassLoader) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.io.ObjectInputStream deserialize(java.lang.String, javax.management.ObjectName, byte[], java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.Class&lt;?&gt; findClass(java.lang.String, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.Class&lt;?&gt; findClass(java.lang.String, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.Class&lt;?&gt; findClassWithDefaultLoaderRepository(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.Class&lt;?&gt; loadClass(java.lang.String, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.Class&lt;?&gt;[] findSignatureClasses(java.lang.String[], java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.Class&lt;?&gt;[] findSignatureClasses(java.lang.String[], java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.Class&lt;?&gt;[] loadSignatureClasses(java.lang.String[], java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.Class&lt;?&gt;[] loadSignatureClasses(java.lang.String[], java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.Object instantiate(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.Object instantiate(java.lang.Class&lt;?&gt;, java.lang.Object[], java.lang.String[], java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.Object instantiate(java.lang.Class&lt;?&gt;, java.lang.Object[], java.lang.String[], java.lang.ClassLoader) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.Object instantiate(java.lang.String, javax.management.ObjectName, java.lang.Object[], java.lang.String[], java.lang.ClassLoader) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.reflect.Constructor&lt;?&gt; findConstructor(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator java.lang.reflect.Constructor&lt;?&gt; findConstructor(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator void checkMBeanPermission(java.lang.Class&lt;?&gt;, java.lang.String, javax.management.ObjectName, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator void checkMBeanPermission(java.lang.Class&lt;?&gt;, java.lang.String, javax.management.ObjectName, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator void checkMBeanPermission(java.lang.String, java.lang.String, javax.management.ObjectName, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator void checkMBeanPermission(java.lang.String, java.lang.String, javax.management.ObjectName, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator void ensureClassAccess(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanInstantiator void testCreation(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector boolean consistent(M, M) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector boolean consistent(M, M) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector boolean consistent(M, M)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;true;null,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector boolean isValidParameter(java.lang.reflect.Method, java.lang.Object, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector com.sun.jmx.mbeanserver.PerInterface&lt;M&gt; getPerInterface(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector java.util.List&lt;java.lang.reflect.Method&gt; getMethods(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector java.util.List&lt;java.lang.reflect.Method&gt; getMethods(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector javax.management.MBeanConstructorInfo[] findConstructors(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector javax.management.MBeanInfo getClassMBeanInfo(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.PerInterface&lt;M&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector javax.management.MBeanInfo getClassMBeanInfo(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.PerInterface&lt;M&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector javax.management.MBeanInfo getMBeanInfo(java.lang.Object, com.sun.jmx.mbeanserver.PerInterface&lt;M&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector javax.management.MBeanInfo getMBeanInfo(java.lang.Object, com.sun.jmx.mbeanserver.PerInterface&lt;M&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector javax.management.MBeanInfo getMBeanInfo(java.lang.Object, com.sun.jmx.mbeanserver.PerInterface&lt;M&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector javax.management.MBeanInfo makeInterfaceMBeanInfo(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MBeanAnalyzer&lt;M&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector javax.management.MBeanNotificationInfo[] findNotifications(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector javax.management.MBeanNotificationInfo[] findNotifications(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector void invokeSetter(java.lang.String, M, java.lang.Object, java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector void maybeInvalidParameter(java.lang.String, M, java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector void unwrapInvocationTargetException(java.lang.reflect.InvocationTargetException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector.MBeanInfoMaker MBeanInfoMaker(com.sun.jmx.mbeanserver.MBeanIntrospector, com.sun.jmx.mbeanserver.MBeanIntrospector.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector.MBeanInfoMaker javax.management.MBeanInfo makeMBeanInfo(java.lang.Class&lt;?&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanIntrospector.MBeanInfoMaker javax.management.MBeanInfo makeMBeanInfo(java.lang.Class&lt;?&gt;, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanServerDelegateImpl java.lang.Object getAttribute(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanServerDelegateImpl java.lang.Object invoke(java.lang.String, java.lang.Object[], java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanServerDelegateImpl java.lang.Object invoke(java.lang.String, java.lang.Object[], java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanServerDelegateImpl java.lang.Object invoke(java.lang.String, java.lang.Object[], java.lang.String[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanServerDelegateImpl javax.management.AttributeList getAttributes(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanServerDelegateImpl javax.management.AttributeList setAttributes(javax.management.AttributeList) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanServerDelegateImpl javax.management.AttributeList setAttributes(javax.management.AttributeList)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanServerDelegateImpl javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanServerDelegateImpl javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanServerDelegateImpl javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanServerDelegateImpl void postRegister(java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanServerDelegateImpl void setAttribute(javax.management.Attribute) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanSupport MBeanSupport(T, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanSupport MBeanSupport(T, java.lang.Class&lt;T&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanSupport javax.management.AttributeList getAttributes(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanSupport javax.management.AttributeList setAttributes(javax.management.AttributeList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MBeanSupport void setAttribute(javax.management.Attribute) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector boolean canUseOpenInfo(java.lang.reflect.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector boolean canUseOpenInfo(java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector boolean validParameter(com.sun.jmx.mbeanserver.ConvertingMethod, java.lang.Object, int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector boolean validParameter(com.sun.jmx.mbeanserver.ConvertingMethod, java.lang.Object, int, java.lang.Object) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector boolean validParameter(com.sun.jmx.mbeanserver.ConvertingMethod, java.lang.Object, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector com.sun.jmx.mbeanserver.ConvertingMethod mFrom(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector com.sun.jmx.mbeanserver.ConvertingMethod mFrom(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector com.sun.jmx.mbeanserver.MBeanAnalyzer&lt;com.sun.jmx.mbeanserver.ConvertingMethod&gt; getAnalyzer(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector com.sun.jmx.mbeanserver.MBeanAnalyzer&lt;com.sun.jmx.mbeanserver.ConvertingMethod&gt; getAnalyzer(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector java.lang.Object invokeM2(com.sun.jmx.mbeanserver.ConvertingMethod, java.lang.Object, java.lang.Object[], java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector java.lang.String getName(com.sun.jmx.mbeanserver.ConvertingMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector java.lang.String originalTypeString(java.lang.reflect.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector java.lang.String originalTypeString(java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector java.lang.String typeName(java.lang.reflect.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector java.lang.String typeName(java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector java.lang.String[] getSignature(com.sun.jmx.mbeanserver.ConvertingMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector java.lang.reflect.Type getGenericReturnType(com.sun.jmx.mbeanserver.ConvertingMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector java.lang.reflect.Type[] getGenericParameterTypes(com.sun.jmx.mbeanserver.ConvertingMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector javax.management.Descriptor getBasicMBeanDescriptor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector javax.management.Descriptor getMBeanDescriptor(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector javax.management.Descriptor typeDescriptor(javax.management.openmbean.OpenType&lt;?&gt;, java.lang.reflect.Type) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector javax.management.Descriptor typeDescriptor(javax.management.openmbean.OpenType&lt;?&gt;, java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector javax.management.MBeanAttributeInfo getMBeanAttributeInfo(java.lang.String, com.sun.jmx.mbeanserver.ConvertingMethod, com.sun.jmx.mbeanserver.ConvertingMethod)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector javax.management.MBeanOperationInfo getMBeanOperationInfo(java.lang.String, com.sun.jmx.mbeanserver.ConvertingMethod) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector javax.management.MBeanOperationInfo getMBeanOperationInfo(java.lang.String, com.sun.jmx.mbeanserver.ConvertingMethod)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanIntrospector void checkMethod(com.sun.jmx.mbeanserver.ConvertingMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanLookup T objectNameToMXBean(javax.management.ObjectName, java.lang.Class&lt;T&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanLookup boolean removeReference(javax.management.ObjectName, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanLookup com.sun.jmx.mbeanserver.MXBeanLookup lookupFor(javax.management.MBeanServerConnection)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanLookup javax.management.ObjectName mxbeanToObjectName(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanMapping MXBeanMapping(java.lang.reflect.Type, javax.management.openmbean.OpenType&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanMapping MXBeanMapping(java.lang.reflect.Type, javax.management.openmbean.OpenType&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanProxy MXBeanProxy(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanProxy java.util.Map access$100(com.sun.jmx.mbeanserver.MXBeanProxy) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanProxy.GetHandler java.lang.Object invoke(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanProxy.GetHandler java.lang.Object invoke(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Object[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanProxy.InvokeHandler java.lang.Object invoke(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanProxy.SetHandler java.lang.Object invoke(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanProxy.SetHandler java.lang.Object invoke(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Object[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanProxy.SetHandler java.lang.Object invoke(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;null;_,!null,_-&gt;null;_,_,!null-&gt;null;_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanProxy.Visitor Visitor(com.sun.jmx.mbeanserver.MXBeanProxy, com.sun.jmx.mbeanserver.MXBeanProxy.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanProxy.Visitor void visitAttribute(java.lang.String, com.sun.jmx.mbeanserver.ConvertingMethod, com.sun.jmx.mbeanserver.ConvertingMethod) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanProxy.Visitor void visitAttribute(java.lang.String, com.sun.jmx.mbeanserver.ConvertingMethod, com.sun.jmx.mbeanserver.ConvertingMethod) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanProxy.Visitor void visitOperation(java.lang.String, com.sun.jmx.mbeanserver.ConvertingMethod) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanSupport MXBeanSupport(T, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanSupport MXBeanSupport(T, java.lang.Class&lt;T&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanSupport java.lang.Class&lt;? super T&gt; findMXBeanInterface(java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanSupport java.util.Set&lt;java.lang.Class&lt;?&gt;&gt; transitiveInterfaces(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanSupport java.util.Set&lt;java.lang.Class&lt;?&gt;&gt; transitiveInterfaces(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanSupport void register(javax.management.MBeanServer, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.MXBeanSupport void transitiveInterfaces(java.lang.Class&lt;?&gt;, java.util.Set&lt;java.lang.Class&lt;?&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.NamedObject NamedObject(java.lang.String, javax.management.DynamicMBean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.NamedObject NamedObject(javax.management.ObjectName, javax.management.DynamicMBean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.NamedObject boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.ObjectInputStreamWithLoader java.lang.Class&lt;?&gt; resolveClass(java.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.PerInterface PerInterface(java.lang.Class&lt;?&gt;, com.sun.jmx.mbeanserver.MBeanIntrospector&lt;M&gt;, com.sun.jmx.mbeanserver.MBeanAnalyzer&lt;M&gt;, javax.management.MBeanInfo) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.PerInterface com.sun.jmx.mbeanserver.MBeanIntrospector access$100(com.sun.jmx.mbeanserver.PerInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.PerInterface java.lang.Object noSuchMethod(java.lang.String, java.lang.Object, java.lang.String, java.lang.Object[], java.lang.String[], java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.PerInterface java.lang.String sigString(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.PerInterface java.lang.String sigString(java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.PerInterface java.util.Map access$200(com.sun.jmx.mbeanserver.PerInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.PerInterface java.util.Map access$300(com.sun.jmx.mbeanserver.PerInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.PerInterface java.util.Map access$500(com.sun.jmx.mbeanserver.PerInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.PerInterface.InitMaps InitMaps(com.sun.jmx.mbeanserver.PerInterface, com.sun.jmx.mbeanserver.PerInterface.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.PerInterface.InitMaps void visitAttribute(java.lang.String, M, M) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.PerInterface.MethodAndSig MethodAndSig(com.sun.jmx.mbeanserver.PerInterface, com.sun.jmx.mbeanserver.PerInterface.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository Repository(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository Repository(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository boolean contains(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository com.sun.jmx.mbeanserver.NamedObject retrieveNamedObject(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository java.util.Set&lt;com.sun.jmx.mbeanserver.NamedObject&gt; query(javax.management.ObjectName, javax.management.QueryExp) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository javax.management.DynamicMBean retrieve(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void addAllMatching(java.util.Map&lt;java.lang.String,com.sun.jmx.mbeanserver.NamedObject&gt;, java.util.Set&lt;com.sun.jmx.mbeanserver.NamedObject&gt;, com.sun.jmx.mbeanserver.Repository.ObjectNamePattern) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void addMBean(javax.management.DynamicMBean, javax.management.ObjectName, com.sun.jmx.mbeanserver.Repository.RegistrationContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void addMBean(javax.management.DynamicMBean, javax.management.ObjectName, com.sun.jmx.mbeanserver.Repository.RegistrationContext) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void addMoiToTb(javax.management.DynamicMBean, javax.management.ObjectName, java.lang.String, java.util.Map&lt;java.lang.String,com.sun.jmx.mbeanserver.NamedObject&gt;, com.sun.jmx.mbeanserver.Repository.RegistrationContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void addMoiToTb(javax.management.DynamicMBean, javax.management.ObjectName, java.lang.String, java.util.Map&lt;java.lang.String,com.sun.jmx.mbeanserver.NamedObject&gt;, com.sun.jmx.mbeanserver.Repository.RegistrationContext) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void addMoiToTb(javax.management.DynamicMBean, javax.management.ObjectName, java.lang.String, java.util.Map&lt;java.lang.String,com.sun.jmx.mbeanserver.NamedObject&gt;, com.sun.jmx.mbeanserver.Repository.RegistrationContext) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void addNewDomMoi(javax.management.DynamicMBean, java.lang.String, javax.management.ObjectName, com.sun.jmx.mbeanserver.Repository.RegistrationContext) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void addNewDomMoi(javax.management.DynamicMBean, java.lang.String, javax.management.ObjectName, com.sun.jmx.mbeanserver.Repository.RegistrationContext) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void registering(com.sun.jmx.mbeanserver.Repository.RegistrationContext) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void remove(javax.management.ObjectName, com.sun.jmx.mbeanserver.Repository.RegistrationContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void remove(javax.management.ObjectName, com.sun.jmx.mbeanserver.Repository.RegistrationContext) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void unregistering(com.sun.jmx.mbeanserver.Repository.RegistrationContext, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository void unregistering(com.sun.jmx.mbeanserver.Repository.RegistrationContext, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository.ObjectNamePattern ObjectNamePattern(boolean, boolean, java.lang.String, java.util.Map&lt;java.lang.String,java.lang.String&gt;, javax.management.ObjectName) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository.ObjectNamePattern ObjectNamePattern(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Repository.ObjectNamePattern boolean matchKeys(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector boolean validParameter(java.lang.reflect.Method, java.lang.Object, int, java.lang.Object) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector com.sun.jmx.mbeanserver.MBeanAnalyzer&lt;java.lang.reflect.Method&gt; getAnalyzer(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector com.sun.jmx.mbeanserver.MBeanAnalyzer&lt;java.lang.reflect.Method&gt; getAnalyzer(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector java.lang.Object invokeM2(java.lang.reflect.Method, java.lang.Object, java.lang.Object[], java.lang.Object) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector java.lang.String getName(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector java.lang.String[] getSignature(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector java.lang.reflect.Method mFrom(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector java.lang.reflect.Type getGenericReturnType(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector java.lang.reflect.Type[] getGenericParameterTypes(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector javax.management.Descriptor getMBeanDescriptor(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector javax.management.MBeanAttributeInfo getMBeanAttributeInfo(java.lang.String, java.lang.reflect.Method, java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector javax.management.MBeanOperationInfo getMBeanOperationInfo(java.lang.String, java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector javax.management.MBeanOperationInfo getMBeanOperationInfo(java.lang.String, java.lang.reflect.Method) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector javax.management.MBeanOperationInfo getMBeanOperationInfo(java.lang.String, java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanIntrospector void checkMethod(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanSupport StandardMBeanSupport(T, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanSupport StandardMBeanSupport(T, java.lang.Class&lt;T&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanSupport void register(javax.management.MBeanServer, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.StandardMBeanSupport void register(javax.management.MBeanServer, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util T cast(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util boolean wildmatch(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util boolean wildmatch(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util int hashCode(java.lang.String[], java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.IdentityHashMap&lt;K,V&gt; newIdentityHashMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.List&lt;E&gt; newList()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.List&lt;E&gt; newList(java.util.Collection&lt;E&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.List&lt;E&gt; newList(java.util.Collection&lt;E&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.Map&lt;K,V&gt; newInsertionOrderMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.Map&lt;K,V&gt; newMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.Map&lt;K,V&gt; newSynchronizedIdentityHashMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.Map&lt;K,V&gt; newSynchronizedMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.Set&lt;E&gt; newSet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.Set&lt;E&gt; newSet(java.util.Collection&lt;E&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.Set&lt;E&gt; newSet(java.util.Collection&lt;E&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.SortedMap&lt;K,V&gt; newSortedMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util java.util.SortedMap&lt;K,V&gt; newSortedMap(java.util.Comparator&lt;? super K&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util javax.management.ObjectName newObjectName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.Util javax.management.ObjectName newObjectName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.WeakIdentityHashMap V put(K, V) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.WeakIdentityHashMap com.sun.jmx.mbeanserver.WeakIdentityHashMap&lt;K,V&gt; make()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.WeakIdentityHashMap java.lang.ref.WeakReference&lt;K&gt; makeReference(K)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.WeakIdentityHashMap java.lang.ref.WeakReference&lt;K&gt; makeReference(K, java.lang.ref.ReferenceQueue&lt;K&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.WeakIdentityHashMap java.lang.ref.WeakReference&lt;K&gt; makeReference(K, java.lang.ref.ReferenceQueue&lt;K&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.WeakIdentityHashMap.IdentityWeakReference IdentityWeakReference(T, java.lang.ref.ReferenceQueue&lt;T&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.jmx.mbeanserver.WeakIdentityHashMap.IdentityWeakReference boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
