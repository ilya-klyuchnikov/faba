<root>
  <item name="com.sun.net.ssl.HttpsURLConnection com.sun.net.ssl.HostnameVerifier getDefaultHostnameVerifier()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection com.sun.net.ssl.HostnameVerifier getHostnameVerifier()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection javax.net.ssl.SSLSocketFactory getSSLSocketFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection void setDefaultHostnameVerifier(com.sun.net.ssl.HostnameVerifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection void setHostnameVerifier(com.sun.net.ssl.HostnameVerifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection.1 boolean verify(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection.1 boolean verify(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.HttpsURLConnection.1 boolean verify(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null,_-&gt;false;_,!null-&gt;false;_,null-&gt;false;null,_-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory com.sun.net.ssl.KeyManagerFactory getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory com.sun.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory com.sun.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory com.sun.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory com.sun.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactory.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactorySpi KeyManagerFactorySpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.KeyManagerFactorySpiWrapper KeyManagerFactorySpiWrapper(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContext com.sun.net.ssl.SSLContext getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContext com.sun.net.ssl.SSLContext getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContext com.sun.net.ssl.SSLContext getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContext com.sun.net.ssl.SSLContext getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContext com.sun.net.ssl.SSLContext getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContext java.lang.String getProtocol()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.SSLContext java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.SSLContextSpi SSLContextSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.SSLContextSpiWrapper SSLContextSpiWrapper(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLContextSpiWrapper void engineInit(com.sun.net.ssl.KeyManager[], com.sun.net.ssl.TrustManager[], java.security.SecureRandom) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.SSLContextSpiWrapper void engineInit(com.sun.net.ssl.KeyManager[], com.sun.net.ssl.TrustManager[], java.security.SecureRandom) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.SSLPermission SSLPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLPermission SSLPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLPermission SSLPermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity SSLSecurity()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity boolean checkSuperclass(java.lang.Class, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity boolean checkSuperclass(java.lang.Class, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity boolean checkSuperclass(java.lang.Class, java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.security.Provider) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] getImpl1(java.lang.String, java.lang.String, java.security.Provider.Service) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] getImpl1(java.lang.String, java.lang.String, java.security.Provider.Service)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] truncateArray(java.lang.Object[], java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.lang.Object[] truncateArray(java.lang.Object[], java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.SSLSecurity java.security.Provider.Service getService(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory com.sun.net.ssl.TrustManagerFactory getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory com.sun.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory com.sun.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory com.sun.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory com.sun.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactory.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactorySpi TrustManagerFactorySpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.net.ssl.TrustManagerFactorySpiWrapper TrustManagerFactorySpiWrapper(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509KeyManagerJavaxWrapper java.lang.String chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509TrustManagerJavaxWrapper void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.net.ssl.X509TrustManagerJavaxWrapper void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
