<root>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders MotifBorders()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders void drawBezel(java.awt.Graphics, int, int, int, int, boolean, boolean, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.BevelBorder boolean isOpaque(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.BevelBorder boolean isOpaque(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;true;null-&gt;true&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.BevelBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.BevelBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.BevelBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.BevelBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.BevelBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.ButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.ButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.ButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.ButtonBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.ButtonBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FocusBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FocusBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FocusBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FocusBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FocusBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder boolean drawBottomBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder boolean drawLeftBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder boolean drawRightBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder boolean drawTopBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder boolean drawTopBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder java.awt.Color getFrameColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder java.awt.Color getFrameHighlight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder java.awt.Color getFrameShadow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.FrameBorder javax.swing.JComponent component()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder boolean drawBottomBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder boolean drawBottomBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder boolean drawLeftBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder boolean drawLeftBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder boolean drawRightBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder boolean drawRightBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder boolean drawTopBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder boolean drawTopBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder boolean drawTopBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.InternalFrameBorder javax.swing.JInternalFrame frame()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.MenuBarBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.MenuBarBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.MenuBarBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.MenuBarBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.MotifPopupMenuBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.MotifPopupMenuBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.MotifPopupMenuBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.ToggleButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.ToggleButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.ToggleButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.ToggleButtonBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifBorders.ToggleButtonBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonListener MotifButtonListener(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonListener void checkOpacity(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI java.awt.Color getSelectColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI javax.swing.plaf.basic.BasicButtonListener createButtonListener(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI javax.swing.plaf.basic.BasicButtonListener createButtonListener(javax.swing.AbstractButton)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void fillContentArea(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void installDefaults(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void paintIcon(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void paintIcon(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifButtonUI void uninstallDefaults(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.ChangeHandler void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxMenuItemUI.MouseInputHandler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifCheckBoxUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI java.awt.Component access$000(com.sun.java.swing.plaf.motif.MotifComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI java.awt.Component access$000(com.sun.java.swing.plaf.motif.MotifComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI java.awt.Component motifGetEditor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI java.awt.LayoutManager createLayoutManager()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI java.awt.Rectangle rectangleForArrowIcon()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI java.awt.Rectangle rectangleForCurrentValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI java.beans.PropertyChangeListener createPropertyChangeListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI javax.swing.JComboBox access$200(com.sun.java.swing.plaf.motif.MotifComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI javax.swing.JComboBox access$200(com.sun.java.swing.plaf.motif.MotifComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI javax.swing.plaf.basic.ComboPopup createPopup()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI void paintCurrentValue(java.awt.Graphics, java.awt.Rectangle, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.ComboBoxLayoutManager ComboBoxLayoutManager(com.sun.java.swing.plaf.motif.MotifComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.ComboBoxLayoutManager void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboBoxArrowIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboBoxArrowIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboBoxArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboBoxArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboPopup java.awt.event.KeyListener createKeyListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboPopup java.awt.event.MouseMotionListener createListMouseMotionListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboPopup.InvocationKeyHandler InvocationKeyHandler(com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifComboPopup) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifPropertyChangeListener MotifPropertyChangeListener(com.sun.java.swing.plaf.motif.MotifComboBoxUI, com.sun.java.swing.plaf.motif.MotifComboBoxUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifComboBoxUI.MotifPropertyChangeListener void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI MotifDesktopIconUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI com.sun.java.swing.plaf.motif.MotifDesktopIconUI.DesktopIconActionListener createDesktopIconActionListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI com.sun.java.swing.plaf.motif.MotifDesktopIconUI.DesktopIconMouseListener createDesktopIconMouseListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI com.sun.java.swing.plaf.motif.MotifDesktopIconUI.IconButton createIconButton(javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI com.sun.java.swing.plaf.motif.MotifDesktopIconUI.IconLabel createIconLabel(javax.swing.JInternalFrame)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI javax.swing.Icon getDefaultIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI javax.swing.JInternalFrame getFrame()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI javax.swing.JInternalFrame.JDesktopIcon getDesktopIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI void installComponents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI void uninstallComponents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.DesktopIconActionListener void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.DesktopIconMouseListener void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.IconButton boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.IconButton void forwardEventToParent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.IconLabel boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.IconLabel java.awt.Dimension getMinimumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.IconLabel java.awt.Dimension getPreferredSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.IconLabel void forwardEventToParent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopIconUI.IconLabel void paint(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI MotifDesktopPaneUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI java.awt.Insets getInsets(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI java.awt.Insets getInsets(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.DragPane DragPane(com.sun.java.swing.plaf.motif.MotifDesktopPaneUI, com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.DragPane void paint(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.MotifDesktopManager MotifDesktopManager(com.sun.java.swing.plaf.motif.MotifDesktopPaneUI, com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.MotifDesktopManager javax.swing.JInternalFrame.JDesktopIcon getIconAt(javax.swing.JDesktopPane, javax.swing.JInternalFrame.JDesktopIcon, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.MotifDesktopManager javax.swing.JInternalFrame.JDesktopIcon getIconAt(javax.swing.JDesktopPane, javax.swing.JInternalFrame.JDesktopIcon, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.MotifDesktopManager javax.swing.JInternalFrame.JDesktopIcon getIconAt(javax.swing.JDesktopPane, javax.swing.JInternalFrame.JDesktopIcon, int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.MotifDesktopManager void adjustBoundsForIcon(javax.swing.JInternalFrame.JDesktopIcon, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.MotifDesktopManager void adjustIcons(javax.swing.JDesktopPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.MotifDesktopManager void beginDraggingFrame(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.MotifDesktopManager void beginResizingFrame(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.MotifDesktopManager void dragFrame(javax.swing.JComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.MotifDesktopManager void endDraggingFrame(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifDesktopPaneUI.MotifDesktopManager void iconifyFrame(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifEditorPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifEditorPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifEditorPaneUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI MotifFileChooserUI(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI com.sun.java.swing.plaf.motif.MotifFileChooserUI.FilterComboBoxModel createFilterComboBoxModel()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI com.sun.java.swing.plaf.motif.MotifFileChooserUI.FilterComboBoxRenderer createFilterComboBoxRenderer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.awt.Dimension access$300()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.awt.Dimension access$400()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.awt.Dimension access$500()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.awt.Insets access$700()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.lang.String access$000(com.sun.java.swing.plaf.motif.MotifFileChooserUI, java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.lang.String access$000(com.sun.java.swing.plaf.motif.MotifFileChooserUI, java.io.File[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.lang.String access$000(com.sun.java.swing.plaf.motif.MotifFileChooserUI, java.io.File[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.lang.String fileNameString(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.lang.String fileNameString(java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.lang.String fileNameString(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.lang.String fileNameString(java.io.File[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI java.lang.String getFileName()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI javax.swing.JButton getApproveButton(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI javax.swing.JButton getApproveButton(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI javax.swing.JLabel access$100(com.sun.java.swing.plaf.motif.MotifFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI javax.swing.JLabel access$100(com.sun.java.swing.plaf.motif.MotifFileChooserUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI javax.swing.JScrollPane createDirectoryList()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI javax.swing.JScrollPane createFilesList()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void access$200(com.sun.java.swing.plaf.motif.MotifFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void access$600(com.sun.java.swing.plaf.motif.MotifFileChooserUI, java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void access$600(com.sun.java.swing.plaf.motif.MotifFileChooserUI, java.beans.PropertyChangeEvent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void align(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void doControlButtonsChanged(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void ensureFileIsVisible(javax.swing.JFileChooser, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void ensureFileIsVisible(javax.swing.JFileChooser, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void ensureFileIsVisible(javax.swing.JFileChooser, java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void installComponents(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void installIcons(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void installIcons(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void installStrings(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void rescanCurrentDirectory(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void uninstallComponents(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void uninstallIcons(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void uninstallIcons(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.1 void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.10 void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.2 java.awt.Insets getInsets()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.3 3(com.sun.java.swing.plaf.motif.MotifFileChooserUI, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.3 java.awt.Dimension getMaximumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.4 java.awt.Dimension getMaximumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.5 java.awt.Dimension getMaximumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.6 java.awt.Dimension getMaximumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.7 java.awt.Dimension getMaximumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.8 java.awt.Dimension getMaximumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.9 java.awt.Dimension getMaximumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.DirectoryCellRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.DirectoryCellRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.FileCellRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.FileCellRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.FilterComboBoxModel FilterComboBoxModel(com.sun.java.swing.plaf.motif.MotifFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.FilterComboBoxModel int getSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.FilterComboBoxModel java.lang.Object getElementAt(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.FilterComboBoxModel void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.FilterComboBoxModel void setSelectedItem(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.FilterComboBoxRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.FilterComboBoxRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.FilterComboBoxRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.MotifDirectoryListModel MotifDirectoryListModel(com.sun.java.swing.plaf.motif.MotifFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.MotifDirectoryListModel void contentsChanged(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.MotifDirectoryListModel void intervalAdded(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.MotifDirectoryListModel void intervalRemoved(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.MotifFileListModel MotifFileListModel(com.sun.java.swing.plaf.motif.MotifFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.MotifFileListModel void contentsChanged(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.MotifFileListModel void intervalAdded(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifFileChooserUI.MotifFileListModel void intervalRemoved(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils MotifGraphicsUtils()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils boolean isLeftToRight(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils java.lang.String layoutMenuItem(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils java.lang.String layoutMenuItem(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int) 12">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils java.lang.String layoutMenuItem(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int) 13">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils java.lang.String layoutMenuItem(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int) 14">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils java.lang.String layoutMenuItem(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int) 15">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils java.lang.String layoutMenuItem(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int) 16">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils java.lang.String layoutMenuItem(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int) 17">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils java.lang.String layoutMenuItem(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils java.lang.String layoutMenuItem(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils java.lang.String layoutMenuItem(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils java.lang.String layoutMenuItem(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils java.lang.String layoutMenuItem(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_-&gt;!null;_,_,null,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils void drawGroove(java.awt.Graphics, int, int, int, int, java.awt.Color, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils void drawMenuBezel(java.awt.Graphics, java.awt.Color, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils void drawMenuBezel(java.awt.Graphics, java.awt.Color, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils void drawPoint(java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils void drawStringInRect(java.awt.Graphics, java.lang.String, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils void drawStringInRect(java.awt.Graphics, java.lang.String, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils void drawStringInRect(javax.swing.JComponent, java.awt.Graphics, java.lang.String, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils void drawStringInRect(javax.swing.JComponent, java.awt.Graphics, java.lang.String, int, int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils void paintMenuItem(java.awt.Graphics, javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, java.awt.Color, java.awt.Color, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils void paintMenuItem(java.awt.Graphics, javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, java.awt.Color, java.awt.Color, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils void paintMenuItem(java.awt.Graphics, javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, java.awt.Color, java.awt.Color, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifGraphicsUtils void paintMenuItem(java.awt.Graphics, javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, java.awt.Color, java.awt.Color, int) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory MotifIconFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory javax.swing.Icon getMenuItemCheckIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.CheckBoxIcon CheckBoxIcon(com.sun.java.swing.plaf.motif.MotifIconFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.CheckBoxIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.CheckBoxIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.CheckBoxIcon void drawCheckBezel(java.awt.Graphics, int, int, int, boolean, boolean, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.CheckBoxIcon void drawCheckBezelOut(java.awt.Graphics, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.CheckBoxIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuArrowIcon MenuArrowIcon(com.sun.java.swing.plaf.motif.MotifIconFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuArrowIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuArrowIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemArrowIcon MenuItemArrowIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemArrowIcon MenuItemArrowIcon(com.sun.java.swing.plaf.motif.MotifIconFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemArrowIcon MenuItemArrowIcon(com.sun.java.swing.plaf.motif.MotifIconFactory.1)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemArrowIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemArrowIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemCheckIcon MenuItemCheckIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemCheckIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemCheckIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemCheckIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemCheckIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.MenuItemCheckIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.RadioButtonIcon RadioButtonIcon(com.sun.java.swing.plaf.motif.MotifIconFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.RadioButtonIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.RadioButtonIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.RadioButtonIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifIconFactory.RadioButtonIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane java.awt.Dimension minimumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane java.awt.LayoutManager createLayout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane java.beans.PropertyChangeListener createPropertyChangeListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.Action access$200(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.Action access$200(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.JInternalFrame access$100(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.JInternalFrame access$100(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.JInternalFrame access$500(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.JInternalFrame access$500(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.JInternalFrame access$600(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.JInternalFrame access$600(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.JInternalFrame access$700(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.JInternalFrame access$700(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.JInternalFrame access$800(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.JInternalFrame access$800(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane javax.swing.JPopupMenu getSystemMenu()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void actionPerformed(java.awt.event.ActionEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void paintComponent(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void paintComponent(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.1 void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.2 void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.FrameButton boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.FrameButton java.awt.Dimension getMinimumSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.FrameButton java.awt.Dimension getPreferredSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.FrameButton void paintComponent(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.FrameButton void requestFocus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.MaximizeButton MaximizeButton(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane, com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.MaximizeButton void paintComponent(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.MinimizeButton MinimizeButton(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane, com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.MinimizeButton void paintComponent(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.SystemButton SystemButton(com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane, com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.SystemButton boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.SystemButton void paintComponent(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.SystemButton void requestFocus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.Title void forwardEventToParent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameTitlePane.Title void paintComponent(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameUI MotifInternalFrameUI(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameUI javax.swing.JInternalFrame access$000(com.sun.java.swing.plaf.motif.MotifInternalFrameUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameUI javax.swing.JInternalFrame access$000(com.sun.java.swing.plaf.motif.MotifInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameUI javax.swing.JInternalFrame getFrame()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameUI void setColors(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameUI.1 void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameUI.2 void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifInternalFrameUI.3 void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLabelUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel boolean isSupportedLookAndFeel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel java.lang.String getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel void initClassDefaults(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel void initComponentDefaults(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel void initResourceBundle(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.1 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.1 java.lang.Object createValue(javax.swing.UIDefaults)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;null;null-&gt;null&quot;,pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.10 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.10 java.lang.Object createValue(javax.swing.UIDefaults)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.11 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.11 java.lang.Object createValue(javax.swing.UIDefaults)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.12 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.12 java.lang.Object createValue(javax.swing.UIDefaults)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.2 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.3 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.4 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.5 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.6 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.6 java.lang.Object createValue(javax.swing.UIDefaults)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.7 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.7 java.lang.Object createValue(javax.swing.UIDefaults)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.8 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.8 java.lang.Object createValue(javax.swing.UIDefaults)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.9 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifLookAndFeel.9 java.lang.Object createValue(javax.swing.UIDefaults)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.ChangeHandler void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuItemUI.MouseInputHandler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuMouseListener MotifMenuMouseListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuMouseMotionListener MotifMenuMouseMotionListener()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI boolean popupIsOpen(javax.swing.JMenu, javax.swing.MenuElement[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI boolean popupIsOpen(javax.swing.JMenu, javax.swing.MenuElement[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MotifChangeHandler void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifMenuUI.MouseInputHandler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifOptionPaneUI MotifOptionPaneUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifOptionPaneUI java.awt.Container createButtonArea()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifOptionPaneUI java.awt.Container createSeparator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifOptionPaneUI java.awt.Dimension getMinimumOptionPaneSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifOptionPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifOptionPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifOptionPaneUI.1 java.awt.Dimension getPreferredSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifOptionPaneUI.1 void paint(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPasswordFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPasswordFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPasswordFieldUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuSeparatorUI MotifPopupMenuSeparatorUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuSeparatorUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuSeparatorUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuSeparatorUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuSeparatorUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuUI boolean isPopupTrigger(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JPopupMenu) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JPopupMenu)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuUI.1 void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifPopupMenuUI.1 void stateChanged(javax.swing.event.ChangeEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifProgressBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifProgressBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.ChangeHandler void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonMenuItemUI.MouseInputHandler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonUI java.awt.Color getFocusColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonUI void paintFocus(java.awt.Graphics, java.awt.Rectangle, java.awt.Dimension) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonUI void paintFocus(java.awt.Graphics, java.awt.Rectangle, java.awt.Dimension) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifRadioButtonUI void paintFocus(java.awt.Graphics, java.awt.Rectangle, java.awt.Dimension) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarButton boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarButton java.awt.Dimension getPreferredSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI javax.swing.JButton createDecreaseButton(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI javax.swing.JButton createIncreaseButton(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI void paintThumb(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI void paintThumb(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI void paintTrack(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI void paintTrack(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollBarUI void paintTrack(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI java.beans.PropertyChangeListener createPropertyChangeHandler()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI javax.swing.border.Border access$100()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI javax.swing.border.Border access$200()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI javax.swing.border.CompoundBorder access$000(com.sun.java.swing.plaf.motif.MotifScrollPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI javax.swing.border.CompoundBorder access$000(com.sun.java.swing.plaf.motif.MotifScrollPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI javax.swing.border.CompoundBorder access$002(com.sun.java.swing.plaf.motif.MotifScrollPaneUI, javax.swing.border.CompoundBorder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI javax.swing.border.CompoundBorder access$002(com.sun.java.swing.plaf.motif.MotifScrollPaneUI, javax.swing.border.CompoundBorder)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI void installDefaults(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI void installListeners(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI void uninstallDefaults(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI void uninstallListeners(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifScrollPaneUI.1 void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSeparatorUI MotifSeparatorUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI MotifSliderUI(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI java.awt.Dimension getMinimumHorizontalSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI java.awt.Dimension getMinimumVerticalSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI java.awt.Dimension getPreferredHorizontalSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI java.awt.Dimension getPreferredVerticalSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI java.awt.Dimension getThumbSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI void paintFocus(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI void paintFocus(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI void paintThumb(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI void paintTrack(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSliderUI void paintTrack(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider MotifSplitPaneDivider(javax.swing.plaf.basic.BasicSplitPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider boolean access$300(com.sun.java.swing.plaf.motif.MotifSplitPaneDivider, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider java.awt.Cursor access$400()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider javax.swing.JSplitPane access$200(com.sun.java.swing.plaf.motif.MotifSplitPaneDivider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider javax.swing.JSplitPane access$200(com.sun.java.swing.plaf.motif.MotifSplitPaneDivider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider javax.swing.JSplitPane getSplitPane()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider javax.swing.plaf.basic.BasicSplitPaneDivider.DragController access$100(com.sun.java.swing.plaf.motif.MotifSplitPaneDivider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider javax.swing.plaf.basic.BasicSplitPaneDivider.DragController access$100(com.sun.java.swing.plaf.motif.MotifSplitPaneDivider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider javax.swing.plaf.basic.BasicSplitPaneDivider.DragController getDragger()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider void paint(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider.MotifMouseHandler MotifMouseHandler(com.sun.java.swing.plaf.motif.MotifSplitPaneDivider, com.sun.java.swing.plaf.motif.MotifSplitPaneDivider.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneDivider.MotifMouseHandler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifSplitPaneUI javax.swing.plaf.basic.BasicSplitPaneDivider createDefaultDivider()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI int getTabRunIndent(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI void paintContentBorderBottomEdge(java.awt.Graphics, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI void paintContentBorderRightEdge(java.awt.Graphics, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI void paintContentBorderTopEdge(java.awt.Graphics, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI void paintFocusIndicator(java.awt.Graphics, int, java.awt.Rectangle[], int, java.awt.Rectangle, java.awt.Rectangle, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI void paintFocusIndicator(java.awt.Graphics, int, java.awt.Rectangle[], int, java.awt.Rectangle, java.awt.Rectangle, boolean) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI void paintFocusIndicator(java.awt.Graphics, int, java.awt.Rectangle[], int, java.awt.Rectangle, java.awt.Rectangle, boolean) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI void paintTabBackground(java.awt.Graphics, int, int, int, int, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTabbedPaneUI void paintTabBorder(java.awt.Graphics, int, int, int, int, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextAreaUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextAreaUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextAreaUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextFieldUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextPaneUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextUI MotifTextUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextUI.MotifCaret void damage(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTextUI.MotifCaret void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifToggleButtonUI java.awt.Color getSelectColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifToggleButtonUI java.awt.Insets getInsets(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifToggleButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifToggleButtonUI void installDefaults(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifToggleButtonUI void paintButtonPressed(java.awt.Graphics, javax.swing.AbstractButton) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeCellRenderer javax.swing.Icon loadLeafIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeCellRenderer.TreeLeafIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeCellRenderer.TreeLeafIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeCellRenderer.TreeLeafIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeCellRenderer.TreeLeafIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI javax.swing.tree.TreeCellRenderer createDefaultCellRenderer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI void paintHorizontalLine(java.awt.Graphics, javax.swing.JComponent, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI void paintHorizontalLine(java.awt.Graphics, javax.swing.JComponent, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI void paintVerticalLine(java.awt.Graphics, javax.swing.JComponent, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI void paintVerticalLine(java.awt.Graphics, javax.swing.JComponent, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI.MotifCollapsedIcon javax.swing.Icon createCollapsedIcon()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI.MotifCollapsedIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI.MotifCollapsedIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI.MotifExpandedIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI.MotifExpandedIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI.MotifExpandedIcon javax.swing.Icon createExpandedIcon()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI.MotifExpandedIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.java.swing.plaf.motif.MotifTreeUI.MotifExpandedIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
