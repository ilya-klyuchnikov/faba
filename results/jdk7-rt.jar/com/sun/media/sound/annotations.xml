<root>
  <item name="com.sun.media.sound.AbstractDataLine AbstractDataLine(javax.sound.sampled.DataLine.Info, com.sun.media.sound.AbstractMixer, javax.sound.sampled.Control[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine AbstractDataLine(javax.sound.sampled.DataLine.Info, com.sun.media.sound.AbstractMixer, javax.sound.sampled.Control[], javax.sound.sampled.AudioFormat, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine AbstractDataLine(javax.sound.sampled.DataLine.Info, com.sun.media.sound.AbstractMixer, javax.sound.sampled.Control[], javax.sound.sampled.AudioFormat, int) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine boolean isActive()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine boolean isRunning()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine boolean isStartedRunning()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine float getLevel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine int getBufferSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine int setBufferSize(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine void drain()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine void flush()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine void open(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractDataLine void open(javax.sound.sampled.AudioFormat, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractLine AbstractLine(javax.sound.sampled.Line.Info, com.sun.media.sound.AbstractMixer, javax.sound.sampled.Control[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractLine boolean isControlSupported(javax.sound.sampled.Control.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractLine boolean isControlSupported(javax.sound.sampled.Control.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractLine boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractLine com.sun.media.sound.AbstractMixer getMixer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractLine javax.sound.sampled.Control getControl(javax.sound.sampled.Control.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractLine javax.sound.sampled.Control[] getControls()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractLine javax.sound.sampled.Line.Info getLineInfo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractLine long getLongFramePosition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice boolean hasReceivers()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice boolean hasTransmitters()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice java.lang.Object access$200(com.sun.media.sound.AbstractMidiDevice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice java.lang.Object access$200(com.sun.media.sound.AbstractMidiDevice)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice java.util.List access$300(com.sun.media.sound.AbstractMidiDevice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice java.util.List&lt;javax.sound.midi.Receiver&gt; getReceivers()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice java.util.List&lt;javax.sound.midi.Transmitter&gt; getTransmitters()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice javax.sound.midi.MidiDevice.Info getDeviceInfo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice long getId()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice long getMicrosecondPosition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.AbstractReceiver boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.AbstractReceiver javax.sound.midi.MidiDevice getMidiDevice()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.BasicTransmitter javax.sound.midi.MidiDevice getMidiDevice()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.BasicTransmitter javax.sound.midi.Receiver getReceiver()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.BasicTransmitter void access$600(com.sun.media.sound.AbstractMidiDevice.BasicTransmitter, com.sun.media.sound.AbstractMidiDevice.TransmitterList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.TransmitterList java.util.ArrayList access$100(com.sun.media.sound.AbstractMidiDevice.TransmitterList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.TransmitterList java.util.ArrayList access$100(com.sun.media.sound.AbstractMidiDevice.TransmitterList)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.TransmitterList void access$000(com.sun.media.sound.AbstractMidiDevice.TransmitterList, javax.sound.midi.Transmitter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.TransmitterList void access$400(com.sun.media.sound.AbstractMidiDevice.TransmitterList, com.sun.media.sound.AbstractMidiDevice.BasicTransmitter, javax.sound.midi.Receiver, javax.sound.midi.Receiver) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.TransmitterList void access$400(com.sun.media.sound.AbstractMidiDevice.TransmitterList, com.sun.media.sound.AbstractMidiDevice.BasicTransmitter, javax.sound.midi.Receiver, javax.sound.midi.Receiver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.TransmitterList void access$400(com.sun.media.sound.AbstractMidiDevice.TransmitterList, com.sun.media.sound.AbstractMidiDevice.BasicTransmitter, javax.sound.midi.Receiver, javax.sound.midi.Receiver) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.TransmitterList void access$500(com.sun.media.sound.AbstractMidiDevice.TransmitterList, javax.sound.midi.Transmitter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.TransmitterList void receiverChanged(com.sun.media.sound.AbstractMidiDevice.BasicTransmitter, javax.sound.midi.Receiver, javax.sound.midi.Receiver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDevice.TransmitterList void receiverChanged(com.sun.media.sound.AbstractMidiDevice.BasicTransmitter, javax.sound.midi.Receiver, javax.sound.midi.Receiver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDeviceProvider AbstractMidiDeviceProvider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDeviceProvider javax.sound.midi.MidiDevice getDevice(javax.sound.midi.MidiDevice.Info) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDeviceProvider javax.sound.midi.MidiDevice.Info[] getDeviceInfo()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDeviceProvider.Info boolean equalStrings(com.sun.media.sound.AbstractMidiDeviceProvider.Info) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDeviceProvider.Info boolean equalStrings(com.sun.media.sound.AbstractMidiDeviceProvider.Info)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMidiDeviceProvider.Info int getIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMixer AbstractMixer(javax.sound.sampled.Mixer.Info, javax.sound.sampled.Control[], javax.sound.sampled.Line.Info[], javax.sound.sampled.Line.Info[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractMixer boolean isLineSupported(javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMixer boolean isSourceLine(javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMixer boolean isSynchronizationSupported(javax.sound.sampled.Line[], boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractMixer boolean isSynchronizationSupported(javax.sound.sampled.Line[], boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;false;_,false-&gt;false;_,true-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMixer boolean isTargetLine(javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMixer javax.sound.sampled.Line.Info getLineInfo(javax.sound.sampled.Line.Info) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractMixer javax.sound.sampled.Line.Info getLineInfo(javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AbstractMixer javax.sound.sampled.Line.Info[] getSourceLineInfo()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMixer javax.sound.sampled.Line.Info[] getTargetLineInfo()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMixer javax.sound.sampled.Mixer.Info getMixerInfo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AbstractMixer void synchronize(javax.sound.sampled.Line[], boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AbstractMixer void unsynchronize(javax.sound.sampled.Line[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AiffFileFormat AiffFileFormat(javax.sound.sampled.AudioFileFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileFormat int getCommChunkSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AiffFileFormat int getFverChunkSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AiffFileFormat int getHeaderSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AiffFileFormat int getSsndChunkOffset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader AiffFileReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader double read_ieee_extended(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader javax.sound.sampled.AudioFileFormat getCOMM(java.io.InputStream, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileReader void write_ieee_extended(java.io.DataOutputStream, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.File) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter int writeAiffFile(java.io.InputStream, com.sun.media.sound.AiffFileFormat, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter java.io.InputStream getFileStream(com.sun.media.sound.AiffFileFormat, java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter java.io.InputStream getFileStream(com.sun.media.sound.AiffFileFormat, java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter javax.sound.sampled.AudioFileFormat getAudioFileFormat(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter javax.sound.sampled.AudioFileFormat getAudioFileFormat(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter javax.sound.sampled.AudioFileFormat getAudioFileFormat(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter javax.sound.sampled.AudioFileFormat.Type[] getAudioFileTypes(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter javax.sound.sampled.AudioFileFormat.Type[] getAudioFileTypes(javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AiffFileWriter void write_ieee_extended(java.io.DataOutputStream, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec byte[] access$000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec byte[] access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings(javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec javax.sound.sampled.AudioFormat[] getOutputFormats(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec javax.sound.sampled.AudioFormat[] getTargetFormats(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec javax.sound.sampled.AudioFormat[] getTargetFormats(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AlawCodec javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AlawCodec javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AlawCodec javax.sound.sampled.AudioInputStream getConvertedStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec javax.sound.sampled.AudioInputStream getConvertedStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AlawCodec short[] access$200()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec.AlawCodecStream AlawCodecStream(com.sun.media.sound.AlawCodec, javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec.AlawCodecStream AlawCodecStream(com.sun.media.sound.AlawCodec, javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec.AlawCodecStream AlawCodecStream(com.sun.media.sound.AlawCodec, javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFormat) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec.AlawCodecStream int read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AlawCodec.AlawCodecStream short search(short, short[], short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AuFileFormat AuFileFormat(javax.sound.sampled.AudioFileFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileFormat AuFileFormat(javax.sound.sampled.AudioFileFormat.Type, int, javax.sound.sampled.AudioFormat, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileFormat int getAuType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AuFileReader AuFileReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AuFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.File) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter int writeAuFile(java.io.InputStream, com.sun.media.sound.AuFileFormat, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter java.io.InputStream getFileStream(com.sun.media.sound.AuFileFormat, java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter java.io.InputStream getFileStream(com.sun.media.sound.AuFileFormat, java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter javax.sound.sampled.AudioFileFormat getAudioFileFormat(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter javax.sound.sampled.AudioFileFormat getAudioFileFormat(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter javax.sound.sampled.AudioFileFormat getAudioFileFormat(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter javax.sound.sampled.AudioFileFormat.Type[] getAudioFileTypes(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AuFileWriter javax.sound.sampled.AudioFileFormat.Type[] getAudioFileTypes(javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFileSoundbankReader AudioFileSoundbankReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFileSoundbankReader javax.sound.midi.Soundbank getSoundbank(java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFileSoundbankReader javax.sound.midi.Soundbank getSoundbank(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFileSoundbankReader javax.sound.midi.Soundbank getSoundbank(javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter AudioFloatConverter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter byte[] toByteArray(float[], byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter com.sun.media.sound.AudioFloatConverter getConverter(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter float[] toFloatArray(byte[], float[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SB AudioFloatConversion16SB()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SB AudioFloatConversion16SB(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SB AudioFloatConversion16SB(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SL AudioFloatConversion16SL()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SL AudioFloatConversion16SL(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SL AudioFloatConversion16SL(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16SL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UB AudioFloatConversion16UB()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UB AudioFloatConversion16UB(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UB AudioFloatConversion16UB(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UL AudioFloatConversion16UL()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UL AudioFloatConversion16UL(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UL AudioFloatConversion16UL(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion16UL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SB AudioFloatConversion24SB()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SB AudioFloatConversion24SB(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SB AudioFloatConversion24SB(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SL AudioFloatConversion24SL()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SL AudioFloatConversion24SL(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SL AudioFloatConversion24SL(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24SL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UB AudioFloatConversion24UB()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UB AudioFloatConversion24UB(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UB AudioFloatConversion24UB(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UL AudioFloatConversion24UL()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UL AudioFloatConversion24UL(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UL AudioFloatConversion24UL(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion24UL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32B AudioFloatConversion32B(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32B byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32B float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32L AudioFloatConversion32L(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32L byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32L float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SB AudioFloatConversion32SB()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SB AudioFloatConversion32SB(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SB AudioFloatConversion32SB(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SL AudioFloatConversion32SL()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SL AudioFloatConversion32SL(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SL AudioFloatConversion32SL(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32SL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UB AudioFloatConversion32UB()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UB AudioFloatConversion32UB(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UB AudioFloatConversion32UB(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UL AudioFloatConversion32UL()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UL AudioFloatConversion32UL(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UL AudioFloatConversion32UL(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32UL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xSB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xSB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xSL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xSL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xUB byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xUB float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xUL byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion32xUL float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion64B AudioFloatConversion64B(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion64B byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion64B float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion64L AudioFloatConversion64L(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion64L byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion64L float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8S AudioFloatConversion8S()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8S AudioFloatConversion8S(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8S AudioFloatConversion8S(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8S byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8S float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8U AudioFloatConversion8U()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8U AudioFloatConversion8U(com.sun.media.sound.AudioFloatConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8U AudioFloatConversion8U(com.sun.media.sound.AudioFloatConverter.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8U byte[] toByteArray(float[], int, int, byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null,_-&gt;!null;_,_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatConversion8U float[] toFloatArray(byte[], int, float[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_-&gt;!null;_,_,null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatLSBFilter AudioFloatLSBFilter(com.sun.media.sound.AudioFloatConverter, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatConverter.AudioFloatLSBFilter float[] toFloatArray(byte[], int, float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter boolean isConversionSupported(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter boolean isConversionSupported(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter boolean isConversionSupported(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter boolean isConversionSupported(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioFormat.Encoding[] getSourceEncodings()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings(javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioFormat[] getTargetFormats(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioFormat[] getTargetFormats(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, com.sun.media.sound.AudioFloatInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, com.sun.media.sound.AudioFloatInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, com.sun.media.sound.AudioFloatInputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter.AudioFloatFormatConverterInputStream AudioFloatFormatConverterInputStream(javax.sound.sampled.AudioFormat, com.sun.media.sound.AudioFloatInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter.AudioFloatInputStreamChannelMixer AudioFloatInputStreamChannelMixer(com.sun.media.sound.AudioFloatInputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter.AudioFloatInputStreamChannelMixer javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter.AudioFloatInputStreamResampler AudioFloatInputStreamResampler(com.sun.media.sound.AudioFloatInputStream, javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter.AudioFloatInputStreamResampler AudioFloatInputStreamResampler(com.sun.media.sound.AudioFloatInputStream, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter.AudioFloatInputStreamResampler int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter.AudioFloatInputStreamResampler javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatFormatConverter.AudioFloatInputStreamResampler long getFrameLength()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream AudioFloatInputStream()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream com.sun.media.sound.AudioFloatInputStream getInputStream(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream com.sun.media.sound.AudioFloatInputStream getInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream com.sun.media.sound.AudioFloatInputStream getInputStream(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream com.sun.media.sound.AudioFloatInputStream getInputStream(javax.sound.sampled.AudioFormat, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream com.sun.media.sound.AudioFloatInputStream getInputStream(javax.sound.sampled.AudioFormat, byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream com.sun.media.sound.AudioFloatInputStream getInputStream(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream com.sun.media.sound.AudioFloatInputStream getInputStream(javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream int read(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream BytaArrayAudioFloatInputStream(com.sun.media.sound.AudioFloatConverter, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream int read(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream long getFrameLength()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.BytaArrayAudioFloatInputStream void close()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.AudioFloatInputStream.DirectAudioFloatInputStream DirectAudioFloatInputStream(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument byte[] getGuid()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument com.sun.media.sound.DLSInfo getInfo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument com.sun.media.sound.ModelConnectionBlock convertToModel(com.sun.media.sound.DLSModulator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument com.sun.media.sound.ModelIdentifier convertToModelDest(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument com.sun.media.sound.ModelPatch getPatch()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument java.lang.Object getData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument java.util.List&lt;com.sun.media.sound.DLSModulator&gt; getModulators()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument java.util.List&lt;com.sun.media.sound.DLSRegion&gt; getRegions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument javax.sound.midi.Patch getPatch()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument void setGuid(byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DLSInstrument void setPatch(javax.sound.midi.Patch) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getControl()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getDestination()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getDestinationFormat(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getScale()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getSource()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getTransform()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator int getVersion()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator java.lang.String getDestinationName(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSModulator java.lang.String getSourceName(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion com.sun.media.sound.DLSSample getSample()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion com.sun.media.sound.DLSSampleOptions getSampleoptions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getExclusiveClass()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getFusoptions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getKeyfrom()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getKeyto()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getOptions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getPhasegroup()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getVelfrom()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion int getVelto()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion java.util.List&lt;com.sun.media.sound.DLSModulator&gt; getModulators()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSRegion long getChannel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSample byte[] getGuid()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSample com.sun.media.sound.DLSInfo getInfo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSample com.sun.media.sound.DLSSampleOptions getSampleoptions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSample com.sun.media.sound.ModelByteBuffer getDataBuffer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSample java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSample java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSample javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSample void setData(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSample void setGuid(byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleLoop DLSSampleLoop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleLoop long getLength()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleLoop long getStart()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleLoop long getType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions int getAttenuation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions int getUnitynote()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions java.util.List&lt;com.sun.media.sound.DLSSampleLoop&gt; getLoops()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions long getOptions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSampleOptions short getFinetune()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank DLSSoundbank(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank DLSSoundbank(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank boolean cdlIsQuerySupported(com.sun.media.sound.DLSSoundbank.DLSID) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank boolean readCdlChunk(com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank boolean readRgnChunk(com.sun.media.sound.DLSRegion, com.sun.media.sound.RIFFReader) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank com.sun.media.sound.DLSInfo getInfo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank java.lang.String getVendor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank java.lang.String getVersion()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank javax.sound.midi.Instrument getInstrument(javax.sound.midi.Patch) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank long cdlQuery(com.sun.media.sound.DLSSoundbank.DLSID) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank long getMajor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank long getMinor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void addResource(javax.sound.midi.SoundbankResource) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readArt1Chunk(java.util.List&lt;com.sun.media.sound.DLSModulator&gt;, com.sun.media.sound.RIFFReader) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readArt2Chunk(java.util.List&lt;com.sun.media.sound.DLSModulator&gt;, com.sun.media.sound.RIFFReader) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readInfoChunk(com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readInsChunk(com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readInsInfoChunk(com.sun.media.sound.DLSInstrument, com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readInsInfoChunk(com.sun.media.sound.DLSInstrument, com.sun.media.sound.RIFFReader) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readLinsChunk(com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readWaveChunk(com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readWaveInfoChunk(com.sun.media.sound.DLSSample, com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readWaveInfoChunk(com.sun.media.sound.DLSSample, com.sun.media.sound.RIFFReader) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readWsmpChunk(com.sun.media.sound.DLSSampleOptions, com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readWsmpChunk(com.sun.media.sound.DLSSampleOptions, com.sun.media.sound.RIFFReader) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void readWvplChunk(com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void removeResource(javax.sound.midi.SoundbankResource) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void save(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void save(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void writeArticulators(com.sun.media.sound.RIFFWriter, java.util.List&lt;com.sun.media.sound.DLSModulator&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void writeInfo(com.sun.media.sound.RIFFWriter, com.sun.media.sound.DLSInfo) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void writeInfoStringChunk(com.sun.media.sound.RIFFWriter, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void writeInfoStringChunk(com.sun.media.sound.RIFFWriter, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void writeInstrument(com.sun.media.sound.RIFFWriter, com.sun.media.sound.DLSInstrument) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void writeInstrument(com.sun.media.sound.RIFFWriter, com.sun.media.sound.DLSInstrument) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void writeSample(com.sun.media.sound.RIFFWriter, com.sun.media.sound.DLSSample) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void writeSample(com.sun.media.sound.RIFFWriter, com.sun.media.sound.DLSSample) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void writeSampleOptions(com.sun.media.sound.RIFFWriter, com.sun.media.sound.DLSSampleOptions) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void writeSampleOptions(com.sun.media.sound.RIFFWriter, com.sun.media.sound.DLSSampleOptions) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank void writeSoundbank(com.sun.media.sound.RIFFWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank.DLSID DLSID()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank.DLSID boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank.DLSID boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank.DLSID com.sun.media.sound.DLSSoundbank.DLSID read(com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank.DLSID com.sun.media.sound.DLSSoundbank.DLSID read(com.sun.media.sound.RIFFReader)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbank.DLSID int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbankReader DLSSoundbankReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DLSSoundbankReader javax.sound.midi.Soundbank getSoundbank(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DataPusher DataPusher(javax.sound.sampled.SourceDataLine, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice javax.sound.sampled.AudioFormat getSignOrEndianChangedFormat(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice javax.sound.sampled.Line getLine(javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice void implClose()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice void implOpen()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice void implStart()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice void implStop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectBAOS byte[] getInternalBuffer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip DirectClip(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip DirectClip(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip DirectClip(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice, com.sun.media.sound.DirectAudioDevice.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip DirectClip(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice, com.sun.media.sound.DirectAudioDevice.1) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip DirectClip(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice, com.sun.media.sound.DirectAudioDevice.1) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip boolean isAutoClosing()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip boolean requiresServicing()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip int getFrameLength()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip void implOpen(javax.sound.sampled.AudioFormat, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip void open(javax.sound.sampled.AudioFormat, byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip void open(javax.sound.sampled.AudioFormat, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectClip void open(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL DirectDL(javax.sound.sampled.DataLine.Info, com.sun.media.sound.DirectAudioDevice, javax.sound.sampled.AudioFormat, int, int, int, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL com.sun.media.sound.DirectAudioDevice.DirectDL.Balance access$2300(com.sun.media.sound.DirectAudioDevice.DirectDL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL com.sun.media.sound.DirectAudioDevice.DirectDL.Balance access$2300(com.sun.media.sound.DirectAudioDevice.DirectDL)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL com.sun.media.sound.DirectAudioDevice.DirectDL.Pan access$2200(com.sun.media.sound.DirectAudioDevice.DirectDL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL com.sun.media.sound.DirectAudioDevice.DirectDL.Pan access$2200(com.sun.media.sound.DirectAudioDevice.DirectDL)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL void access$2100(com.sun.media.sound.DirectAudioDevice.DirectDL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL void implOpen(javax.sound.sampled.AudioFormat, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL.Balance Balance(com.sun.media.sound.DirectAudioDevice.DirectDL, com.sun.media.sound.DirectAudioDevice.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL.Gain Gain(com.sun.media.sound.DirectAudioDevice.DirectDL, com.sun.media.sound.DirectAudioDevice.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL.Gain float getLinearGain()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL.Mute Mute(com.sun.media.sound.DirectAudioDevice.DirectDL, com.sun.media.sound.DirectAudioDevice.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDL.Pan Pan(com.sun.media.sound.DirectAudioDevice.DirectDL, com.sun.media.sound.DirectAudioDevice.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDLI DirectDLI(java.lang.Class, javax.sound.sampled.AudioFormat[], javax.sound.sampled.AudioFormat[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDLI DirectDLI(java.lang.Class, javax.sound.sampled.AudioFormat[], javax.sound.sampled.AudioFormat[], int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDLI DirectDLI(java.lang.Class, javax.sound.sampled.AudioFormat[], javax.sound.sampled.AudioFormat[], int, int, com.sun.media.sound.DirectAudioDevice.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDLI DirectDLI(java.lang.Class, javax.sound.sampled.AudioFormat[], javax.sound.sampled.AudioFormat[], int, int, com.sun.media.sound.DirectAudioDevice.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDLI DirectDLI(java.lang.Class, javax.sound.sampled.AudioFormat[], javax.sound.sampled.AudioFormat[], int, int, com.sun.media.sound.DirectAudioDevice.1) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDLI boolean isFormatSupportedInHardware(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDLI boolean isFormatSupportedInHardware(javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDLI javax.sound.sampled.AudioFormat[] access$000(com.sun.media.sound.DirectAudioDevice.DirectDLI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDLI javax.sound.sampled.AudioFormat[] access$000(com.sun.media.sound.DirectAudioDevice.DirectDLI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectDLI javax.sound.sampled.AudioFormat[] getHardwareFormats()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectSDL DirectSDL(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectSDL DirectSDL(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectSDL DirectSDL(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice, com.sun.media.sound.DirectAudioDevice.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectSDL DirectSDL(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice, com.sun.media.sound.DirectAudioDevice.1) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectSDL DirectSDL(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice, com.sun.media.sound.DirectAudioDevice.1) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectTDL DirectTDL(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectTDL DirectTDL(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectTDL DirectTDL(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice, com.sun.media.sound.DirectAudioDevice.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectTDL DirectTDL(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice, com.sun.media.sound.DirectAudioDevice.1) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDevice.DirectTDL DirectTDL(javax.sound.sampled.DataLine.Info, javax.sound.sampled.AudioFormat, int, com.sun.media.sound.DirectAudioDevice, com.sun.media.sound.DirectAudioDevice.1) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDeviceProvider javax.sound.sampled.Mixer getDevice(com.sun.media.sound.DirectAudioDeviceProvider.DirectAudioDeviceInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDeviceProvider javax.sound.sampled.Mixer.Info[] getMixerInfo()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDeviceProvider void &lt;clinit&gt;()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDeviceProvider.DirectAudioDeviceInfo DirectAudioDeviceInfo(int, int, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDeviceProvider.DirectAudioDeviceInfo int getDeviceID()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDeviceProvider.DirectAudioDeviceInfo int getIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.DirectAudioDeviceProvider.DirectAudioDeviceInfo int getMaxSimulLines()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank EmergencySoundbank()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank byte[] toBytes(float[], javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank byte[] toBytes(float[], javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Instrument newInstrument(com.sun.media.sound.SF2Soundbank, java.lang.String, javax.sound.midi.Patch, com.sun.media.sound.SF2Layer...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Instrument newInstrument(com.sun.media.sound.SF2Soundbank, java.lang.String, javax.sound.midi.Patch, com.sun.media.sound.SF2Layer...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Instrument newInstrument(com.sun.media.sound.SF2Soundbank, java.lang.String, javax.sound.midi.Patch, com.sun.media.sound.SF2Layer...) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer newLayer(com.sun.media.sound.SF2Soundbank, java.lang.String, com.sun.media.sound.SF2Sample) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer newLayer(com.sun.media.sound.SF2Soundbank, java.lang.String, com.sun.media.sound.SF2Sample)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_bass1(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_bass1(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_bass2(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_bass2(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_bass_drum(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_bass_drum(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_bassoon(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_bassoon(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_bell(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_bell(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_brass_section(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_brass_section(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_ch_organ(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_ch_organ(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_choir(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_choir(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_clarinet(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_clarinet(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_closed_hihat(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_closed_hihat(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_crash_cymbal(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_crash_cymbal(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_epiano1(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_epiano1(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_epiano2(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_epiano2(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_flute(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_flute(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_gpiano(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_gpiano(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_gpiano2(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_gpiano2(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_guitar1(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_guitar1(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_guitar_dist(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_guitar_dist(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_guitar_pick(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_guitar_pick(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_horn(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_horn(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_melodic_toms(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_melodic_toms(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_oboe(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_oboe(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_open_hihat(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_open_hihat(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_orchhit(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_orchhit(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_organ(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_organ(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_piano1(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_piano1(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_piano_hammer(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_piano_hammer(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_reverse_cymbal(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_reverse_cymbal(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_sax(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_sax(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_side_stick(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_side_stick(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_snare_drum(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_snare_drum(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_solostring(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_solostring(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_string2(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_string2(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_synthbass(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_synthbass(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_timpani(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_timpani(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_tom(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_tom(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_trombone(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_trombone(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_trumpet(com.sun.media.sound.SF2Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Layer new_trumpet(com.sun.media.sound.SF2Soundbank)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Sample newSimpleDrumSample(com.sun.media.sound.SF2Soundbank, java.lang.String, double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Sample newSimpleDrumSample(com.sun.media.sound.SF2Soundbank, java.lang.String, double[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Sample newSimpleDrumSample(com.sun.media.sound.SF2Soundbank, java.lang.String, double[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Sample newSimpleFFTSample(com.sun.media.sound.SF2Soundbank, java.lang.String, double[], double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Sample newSimpleFFTSample(com.sun.media.sound.SF2Soundbank, java.lang.String, double[], double) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Sample newSimpleFFTSample(com.sun.media.sound.SF2Soundbank, java.lang.String, double[], double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Sample newSimpleFFTSample(com.sun.media.sound.SF2Soundbank, java.lang.String, double[], double, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Sample newSimpleFFTSample(com.sun.media.sound.SF2Soundbank, java.lang.String, double[], double, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Sample newSimpleFFTSample(com.sun.media.sound.SF2Soundbank, java.lang.String, double[], double, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Sample newSimpleFFTSample_dist(com.sun.media.sound.SF2Soundbank, java.lang.String, double[], double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Sample newSimpleFFTSample_dist(com.sun.media.sound.SF2Soundbank, java.lang.String, double[], double, double) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank com.sun.media.sound.SF2Sample newSimpleFFTSample_dist(com.sun.media.sound.SF2Soundbank, java.lang.String, double[], double, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank double[] imgPart(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank double[] imgPart(double[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank double[] loopExtend(double[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank double[] loopExtend(double[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank double[] realPart(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank double[] realPart(double[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank float[] loopExtend(float[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank float[] loopExtend(float[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank float[] toFloat(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank float[] toFloat(double[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank void complexGaussianDist(double[], double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank void fft(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank void ifft(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank void normalize(double[], double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank void normalize(float[], double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank void randomPhase(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EmergencySoundbank void randomPhase(double[], java.util.Random) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EventDispatcher void autoClosingClipClosed(com.sun.media.sound.AutoClosingClip) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.EventDispatcher void autoClosingClipClosed(com.sun.media.sound.AutoClosingClip)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.EventDispatcher void processEvent(com.sun.media.sound.EventDispatcher.EventInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EventDispatcher void sendAudioEvents(java.lang.Object, java.util.List) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.EventDispatcher.ClipInfo boolean isExpired(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.EventDispatcher.ClipInfo com.sun.media.sound.AutoClosingClip getClip()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.EventDispatcher.EventInfo EventInfo(com.sun.media.sound.EventDispatcher, java.lang.Object, java.util.List) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.EventDispatcher.EventInfo int getListenerCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.EventDispatcher.EventInfo java.lang.Object getEvent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.EventDispatcher.EventInfo java.lang.Object getListener(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.FFT void calcF4F(int, double[], int, int, double[]) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.FFT void calcF4FE(int, double[], int, int, double[]) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.FFT void calcF4I(int, double[], int, int, double[]) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.FFT void calcF4IE(int, double[], int, int, double[]) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.FastShortMessage FastShortMessage(javax.sound.midi.ShortMessage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.FastShortMessage byte[] getMessage()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.FastShortMessage int getChannel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.FastShortMessage int getCommand()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.FastShortMessage int getData1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.FastShortMessage int getData2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.FastShortMessage int getPackedMsg()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.FastShortMessage int getStatus()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.FastSysexMessage FastSysexMessage(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.FastSysexMessage byte[] getReadOnlyMessage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.FastSysexMessage void setMessage(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.JARSoundbankReader JARSoundbankReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.JARSoundbankReader boolean isZIP(java.net.URL)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.JARSoundbankReader javax.sound.midi.Soundbank getSoundbank(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.JARSoundbankReader javax.sound.midi.Soundbank getSoundbank(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.JARSoundbankReader javax.sound.midi.Soundbank getSoundbank(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.JDK13Services JDK13Services()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.JDK13Services java.lang.String getDefaultProvider(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.JDK13Services.ProviderCache ProviderCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.JDK13Services.ProviderCache ProviderCache(com.sun.media.sound.JDK13Services.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.JDK13Services.ProviderCache ProviderCache(com.sun.media.sound.JDK13Services.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.JSSecurityManager JSSecurityManager()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.JSSecurityManager boolean hasSecurityManager()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.JSSecurityManager java.lang.Thread createThread(java.lang.Runnable, java.lang.String, boolean, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.JSSecurityManager java.lang.Thread createThread(java.lang.Runnable, java.lang.String, boolean, int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.JavaSoundAudioClip boolean loadAudioData(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.JavaSoundAudioClip java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.JavaSoundAudioClip void meta(javax.sound.midi.MetaMessage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.JavaSoundAudioClip void readStream(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.JavaSoundAudioClip void readStream(javax.sound.sampled.AudioInputStream, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.JavaSoundAudioClip void update(javax.sound.sampled.LineEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.JavaSoundAudioClip void update(javax.sound.sampled.LineEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.JavaSoundAudioClip.DirectBAOS byte[] getInternalBuffer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiDeviceReceiverEnvelope MidiDeviceReceiverEnvelope(javax.sound.midi.MidiDevice, javax.sound.midi.Receiver) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiDeviceReceiverEnvelope MidiDeviceReceiverEnvelope(javax.sound.midi.MidiDevice, javax.sound.midi.Receiver) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiDeviceReceiverEnvelope javax.sound.midi.MidiDevice getMidiDevice()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiDeviceReceiverEnvelope javax.sound.midi.Receiver getReceiver()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiDeviceTransmitterEnvelope MidiDeviceTransmitterEnvelope(javax.sound.midi.MidiDevice, javax.sound.midi.Transmitter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiDeviceTransmitterEnvelope MidiDeviceTransmitterEnvelope(javax.sound.midi.MidiDevice, javax.sound.midi.Transmitter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiDeviceTransmitterEnvelope javax.sound.midi.MidiDevice getMidiDevice()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiDeviceTransmitterEnvelope javax.sound.midi.Transmitter getTransmitter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiInDevice boolean hasTransmitters()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiInDevice javax.sound.midi.Transmitter createTransmitter()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiInDevice void callbackLongMessage(byte[], long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.MidiInDevice.MidiInTransmitter MidiInTransmitter(com.sun.media.sound.MidiInDevice, com.sun.media.sound.MidiInDevice.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.MidiInDeviceProvider MidiInDeviceProvider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiInDeviceProvider com.sun.media.sound.AbstractMidiDeviceProvider.Info[] getInfoCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiInDeviceProvider javax.sound.midi.MidiDevice createDevice(com.sun.media.sound.AbstractMidiDeviceProvider.Info) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.MidiInDeviceProvider javax.sound.midi.MidiDevice createDevice(com.sun.media.sound.AbstractMidiDeviceProvider.Info)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiInDeviceProvider javax.sound.midi.MidiDevice[] getDeviceCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiInDeviceProvider void setDeviceCache(javax.sound.midi.MidiDevice[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.MidiInDeviceProvider void setInfoCache(com.sun.media.sound.AbstractMidiDeviceProvider.Info[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.MidiInDeviceProvider.MidiInDeviceInfo MidiInDeviceInfo(int, java.lang.Class, com.sun.media.sound.MidiInDeviceProvider.1) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDevice boolean hasReceivers()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDevice javax.sound.midi.Receiver createReceiver()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDevice void access$000(com.sun.media.sound.MidiOutDevice, long, int, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDevice void access$100(com.sun.media.sound.MidiOutDevice, long, byte[], int, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDevice.MidiOutReceiver void implSend(javax.sound.midi.MidiMessage, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDeviceProvider MidiOutDeviceProvider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDeviceProvider com.sun.media.sound.AbstractMidiDeviceProvider.Info[] getInfoCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDeviceProvider javax.sound.midi.MidiDevice createDevice(com.sun.media.sound.AbstractMidiDeviceProvider.Info) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDeviceProvider javax.sound.midi.MidiDevice createDevice(com.sun.media.sound.AbstractMidiDeviceProvider.Info)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.MidiOutDeviceProvider javax.sound.midi.MidiDevice[] getDeviceCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDeviceProvider void setDeviceCache(javax.sound.midi.MidiDevice[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDeviceProvider void setInfoCache(com.sun.media.sound.AbstractMidiDeviceProvider.Info[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.MidiOutDeviceProvider.MidiOutDeviceInfo MidiOutDeviceInfo(int, java.lang.Class, com.sun.media.sound.MidiOutDeviceProvider.1) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils MidiUtils()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils boolean isMetaEndOfTrack(javax.sound.midi.MidiMessage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils boolean isMetaTempo(javax.sound.midi.MidiMessage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils double convertTempo(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils int getTempoMPQ(javax.sound.midi.MidiMessage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils long microsec2ticks(long, double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils long microsecond2tick(javax.sound.midi.Sequence, long, com.sun.media.sound.MidiUtils.TempoCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils long microsecond2tick(javax.sound.midi.Sequence, long, com.sun.media.sound.MidiUtils.TempoCache) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils long tick2microsecond(javax.sound.midi.Sequence, long, com.sun.media.sound.MidiUtils.TempoCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils long tick2microsecond(javax.sound.midi.Sequence, long, com.sun.media.sound.MidiUtils.TempoCache) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils long ticks2microsec(long, double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils.TempoCache TempoCache(javax.sound.midi.Sequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils.TempoCache float getTempoMPQAt(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils.TempoCache float getTempoMPQAt(long, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils.TempoCache int getCurrTempoMPQ()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.MidiUtils.TempoCache void refresh(javax.sound.midi.Sequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer ModelAbstractChannelMixer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer boolean getMono()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer boolean getMute()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer boolean getOmni()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer boolean getSolo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer boolean localControl(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;false-&gt;false;true-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer int getChannelPressure()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer int getController(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer int getPitchBend()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer int getPolyPressure(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer int getProgram()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void allNotesOff()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void allSoundOff()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void controlChange(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void noteOff(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void noteOff(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void noteOn(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void programChange(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void programChange(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void resetAllControllers()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setChannelPressure(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setMono(boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setMute(boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setOmni(boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setPitchBend(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setPolyPressure(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractChannelMixer void setSolo(boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator boolean isOn()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator com.sun.media.sound.ModelInstrument getInstrument()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator com.sun.media.sound.ModelPerformer getPerformer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator float getAttenuation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator float getPitch()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator float getSampleRate()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator int getChannels()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator int getNoteNumber()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator int getVelocity()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator int read(float[][], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator int read(float[][], int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator java.lang.String getVendor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator java.lang.String getVersion()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator javax.sound.midi.Instrument getInstrument(javax.sound.midi.Patch) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator javax.sound.midi.Instrument[] getInstruments()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator javax.sound.midi.MidiChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator javax.sound.midi.Patch getPatch()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator javax.sound.midi.Soundbank getSoundBank()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator javax.sound.midi.SoundbankResource[] getResources()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator javax.sound.midi.VoiceStatus getVoice()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator void close()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelAbstractOscillator void init()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer ModelByteBuffer(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer ModelByteBuffer(com.sun.media.sound.ModelByteBuffer, long, long, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer ModelByteBuffer(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer byte[] array()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer com.sun.media.sound.ModelByteBuffer access$000(com.sun.media.sound.ModelByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer com.sun.media.sound.ModelByteBuffer access$000(com.sun.media.sound.ModelByteBuffer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer com.sun.media.sound.ModelByteBuffer getRoot()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer com.sun.media.sound.ModelByteBuffer subbuffer(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer com.sun.media.sound.ModelByteBuffer subbuffer(long, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer com.sun.media.sound.ModelByteBuffer subbuffer(long, long, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer java.io.File access$100(com.sun.media.sound.ModelByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer java.io.File access$100(com.sun.media.sound.ModelByteBuffer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer java.io.File getFile()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer long access$200(com.sun.media.sound.ModelByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer long access$200(com.sun.media.sound.ModelByteBuffer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer long capacity()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer long getFilePointer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer void loadAll(java.util.Collection&lt;com.sun.media.sound.ModelByteBuffer&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer.RandomFileInputStream RandomFileInputStream(com.sun.media.sound.ModelByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer.RandomFileInputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer.RandomFileInputStream int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBuffer.RandomFileInputStream int read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable com.sun.media.sound.ModelByteBuffer access$100(com.sun.media.sound.ModelByteBufferWavetable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable com.sun.media.sound.ModelByteBuffer access$100(com.sun.media.sound.ModelByteBufferWavetable)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable com.sun.media.sound.ModelByteBuffer access$200(com.sun.media.sound.ModelByteBufferWavetable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable com.sun.media.sound.ModelByteBuffer access$200(com.sun.media.sound.ModelByteBufferWavetable)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable com.sun.media.sound.ModelByteBuffer get8BitExtensionBuffer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable com.sun.media.sound.ModelByteBuffer getBuffer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable com.sun.media.sound.ModelOscillatorStream open(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable float getAttenuation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable float getLoopLength()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable float getLoopStart()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable float getPitchcorrection()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable int getLoopType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable javax.sound.sampled.AudioFormat access$000(com.sun.media.sound.ModelByteBufferWavetable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable javax.sound.sampled.AudioFormat access$000(com.sun.media.sound.ModelByteBufferWavetable)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable.Buffer8PlusInputStream Buffer8PlusInputStream(com.sun.media.sound.ModelByteBufferWavetable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable.Buffer8PlusInputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable.Buffer8PlusInputStream int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelByteBufferWavetable.Buffer8PlusInputStream int read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock ModelConnectionBlock(com.sun.media.sound.ModelSource, com.sun.media.sound.ModelDestination) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock ModelConnectionBlock(com.sun.media.sound.ModelSource, com.sun.media.sound.ModelSource, com.sun.media.sound.ModelDestination) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock ModelConnectionBlock(com.sun.media.sound.ModelSource, com.sun.media.sound.ModelSource, com.sun.media.sound.ModelDestination) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock ModelConnectionBlock(com.sun.media.sound.ModelSource, com.sun.media.sound.ModelSource, double, com.sun.media.sound.ModelDestination) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock ModelConnectionBlock(com.sun.media.sound.ModelSource, com.sun.media.sound.ModelSource, double, com.sun.media.sound.ModelDestination) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock ModelConnectionBlock(com.sun.media.sound.ModelSource, double, com.sun.media.sound.ModelDestination) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock com.sun.media.sound.ModelDestination getDestination()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock double getScale()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelConnectionBlock void setSources(com.sun.media.sound.ModelSource[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.ModelDestination com.sun.media.sound.ModelIdentifier getIdentifier()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelDestination com.sun.media.sound.ModelTransform getTransform()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier int getInstance()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier java.lang.String getObject()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier java.lang.String getVariable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelIdentifier java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrument com.sun.media.sound.ModelChannelMixer getChannelMixer(javax.sound.midi.MidiChannel, javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrument com.sun.media.sound.ModelChannelMixer getChannelMixer(javax.sound.midi.MidiChannel, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrument com.sun.media.sound.ModelChannelMixer getChannelMixer(javax.sound.midi.MidiChannel, javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;null;_,!null-&gt;null;_,null-&gt;null;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrument com.sun.media.sound.ModelDirector getDirector(com.sun.media.sound.ModelPerformer[], javax.sound.midi.MidiChannel, com.sun.media.sound.ModelDirectedPlayer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrument com.sun.media.sound.ModelDirector getDirector(com.sun.media.sound.ModelPerformer[], javax.sound.midi.MidiChannel, com.sun.media.sound.ModelDirectedPlayer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrument com.sun.media.sound.ModelDirector getDirector(com.sun.media.sound.ModelPerformer[], javax.sound.midi.MidiChannel, com.sun.media.sound.ModelDirectedPlayer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrument com.sun.media.sound.ModelPerformer[] getPerformers()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrumentComparator ModelInstrumentComparator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrumentComparator int compare(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrumentComparator int compare(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrumentComparator int compare(javax.sound.midi.Instrument, javax.sound.midi.Instrument) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelInstrumentComparator int compare(javax.sound.midi.Instrument, javax.sound.midi.Instrument) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelMappedInstrument ModelMappedInstrument(com.sun.media.sound.ModelInstrument, javax.sound.midi.Patch) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelPatch boolean isPercussion()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer boolean isDefaultConnectionsEnabled()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer boolean isReleaseTriggered()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer boolean isSelfNonExclusive()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer int getExclusiveClass()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer int getKeyFrom()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer int getKeyTo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer int getVelFrom()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer int getVelTo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer java.lang.Object getUserObject()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer java.util.List&lt;com.sun.media.sound.ModelConnectionBlock&gt; getConnectionBlocks()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelPerformer java.util.List&lt;com.sun.media.sound.ModelOscillator&gt; getOscillators()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelSource com.sun.media.sound.ModelIdentifier getIdentifier()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelSource com.sun.media.sound.ModelTransform getTransform()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardDirector ModelStandardDirector(com.sun.media.sound.ModelPerformer[], com.sun.media.sound.ModelDirectedPlayer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardDirector void close()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardIndexedDirector ModelStandardIndexedDirector(com.sun.media.sound.ModelPerformer[], com.sun.media.sound.ModelDirectedPlayer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardIndexedDirector int restrict(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardIndexedDirector int[] lookupIndex(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardIndexedDirector void close()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform boolean getDirection()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform boolean getPolarity()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.ModelStandardTransform int getTransform()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings(javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec javax.sound.sampled.AudioFormat[] getOutputFormats(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec javax.sound.sampled.AudioFormat[] getTargetFormats(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec javax.sound.sampled.AudioFormat[] getTargetFormats(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec javax.sound.sampled.AudioInputStream getConvertedStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec javax.sound.sampled.AudioInputStream getConvertedStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec.PCMtoPCMCodecStream PCMtoPCMCodecStream(com.sun.media.sound.PCMtoPCMCodec, javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec.PCMtoPCMCodecStream PCMtoPCMCodecStream(com.sun.media.sound.PCMtoPCMCodec, javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec.PCMtoPCMCodecStream PCMtoPCMCodecStream(com.sun.media.sound.PCMtoPCMCodec, javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFormat) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PCMtoPCMCodec.PCMtoPCMCodecStream int read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.Platform Platform()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Platform boolean isBigEndian()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Platform boolean isSigned8()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Platform java.lang.String getClasspath()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Platform java.lang.String getJavahome()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Platform void initialize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Platform.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.PortMixer long getID()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.PortMixer void implStart()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.PortMixer void implStop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.BoolCtrl BoolCtrl(long, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.BoolCtrl boolean access$402(com.sun.media.sound.PortMixer.BoolCtrl, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.BoolCtrl boolean access$402(com.sun.media.sound.PortMixer.BoolCtrl, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.PortMixer.BoolCtrl javax.sound.sampled.BooleanControl.Type createType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.BoolCtrl.BCT BCT(java.lang.String, com.sun.media.sound.PortMixer.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.CompCtrl.CCT CCT(java.lang.String, com.sun.media.sound.PortMixer.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.FloatCtrl boolean access$502(com.sun.media.sound.PortMixer.FloatCtrl, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.FloatCtrl boolean access$502(com.sun.media.sound.PortMixer.FloatCtrl, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.PortMixer.FloatCtrl.FCT FCT(java.lang.String, com.sun.media.sound.PortMixer.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.PortInfo PortInfo(java.lang.String, boolean, com.sun.media.sound.PortMixer.1) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.PortMixerPort PortMixerPort(javax.sound.sampled.Port.Info, com.sun.media.sound.PortMixer, int, com.sun.media.sound.PortMixer.1) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.PortMixerPort void access$000(com.sun.media.sound.PortMixer.PortMixerPort) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PortMixer.PortMixerPort void enableControls(javax.sound.sampled.Control[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PortMixerProvider javax.sound.sampled.Mixer getDevice(com.sun.media.sound.PortMixerProvider.PortMixerInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.PortMixerProvider javax.sound.sampled.Mixer.Info[] getMixerInfo()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.PortMixerProvider void &lt;clinit&gt;()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.PortMixerProvider.PortMixerInfo PortMixerInfo(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.PortMixerProvider.PortMixerInfo int getIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Printer Printer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Printer void debug(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.Printer void debug(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Printer void err(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.Printer void err(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Printer void println(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.Printer void release(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.Printer void release(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Printer void trace(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.Printer void trace(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Printer void verbose(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.Printer void verbose(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RIFFReader int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RIFFReader java.lang.String getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RIFFReader java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RIFFReader java.lang.String readString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RIFFReader long getFilePointer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RIFFReader long getSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RIFFReader void readFully(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter RIFFWriter(com.sun.media.sound.RIFFWriter.RandomAccessWriter, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter RIFFWriter(com.sun.media.sound.RIFFWriter.RandomAccessWriter, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter RIFFWriter(java.io.File, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter RIFFWriter(java.io.File, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter RIFFWriter(java.io.OutputStream, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter RIFFWriter(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter RIFFWriter(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter boolean getWriteOverride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter com.sun.media.sound.RIFFWriter writeChunk(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter com.sun.media.sound.RIFFWriter writeList(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter void writeString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter void writeString(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter.RandomAccessByteWriter long getPointer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter.RandomAccessByteWriter long length()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter.RandomAccessByteWriter void write(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter.RandomAccessFileWriter RandomAccessFileWriter(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RIFFWriter.RandomAccessFileWriter RandomAccessFileWriter(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean access$1100(com.sun.media.sound.RealTimeSequencer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean access$1100(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean access$1102(com.sun.media.sound.RealTimeSequencer, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean access$1102(com.sun.media.sound.RealTimeSequencer, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean access$700(com.sun.media.sound.RealTimeSequencer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean access$700(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean addMetaEventListener(javax.sound.midi.MetaEventListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean findTrack(javax.sound.midi.Track) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean hasReceivers()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean hasTransmitters()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean isRecording()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean isRunning()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean[] access$1600(com.sun.media.sound.RealTimeSequencer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean[] access$1600(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean[] access$1700(com.sun.media.sound.RealTimeSequencer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean[] access$1700(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean[] ensureBoolArraySize(boolean[], int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer boolean[] ensureBoolArraySize(boolean[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer com.sun.media.sound.MidiUtils.TempoCache access$1400(com.sun.media.sound.RealTimeSequencer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer com.sun.media.sound.MidiUtils.TempoCache access$1400(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer com.sun.media.sound.MidiUtils.TempoCache access$800(com.sun.media.sound.RealTimeSequencer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer com.sun.media.sound.MidiUtils.TempoCache access$800(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer com.sun.media.sound.MidiUtils.TempoCache getTempoCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer com.sun.media.sound.RealTimeSequencer.DataPump getDataPump()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer int access$1500(com.sun.media.sound.RealTimeSequencer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer int access$1500(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer int getLoopCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer int[] addControllerEventListener(javax.sound.midi.ControllerEventListener, int[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer int[] removeControllerEventListener(javax.sound.midi.ControllerEventListener, int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer java.util.List access$1000(com.sun.media.sound.RealTimeSequencer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer java.util.List access$1000(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Receiver createReceiver()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Sequence access$900(com.sun.media.sound.RealTimeSequencer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Sequence access$900(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Sequence getSequence()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Sequencer.SyncMode getMasterSyncMode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Sequencer.SyncMode getSlaveSyncMode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Sequencer.SyncMode[] getMasterSyncModes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Sequencer.SyncMode[] getSlaveSyncModes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer javax.sound.midi.Transmitter createTransmitter()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer long access$1800(com.sun.media.sound.RealTimeSequencer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer long access$1800(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer long access$1900(com.sun.media.sound.RealTimeSequencer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer long access$1900(com.sun.media.sound.RealTimeSequencer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer long getLoopEndPoint()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer long getLoopStartPoint()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer void recordDisable(javax.sound.midi.Track) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer void sendControllerEvents(javax.sound.midi.MidiMessage) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer void setMasterSyncMode(javax.sound.midi.Sequencer.SyncMode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer void setMasterSyncMode(javax.sound.midi.Sequencer.SyncMode)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer void setSequence(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer void setSlaveSyncMode(javax.sound.midi.Sequencer.SyncMode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer void setSlaveSyncMode(javax.sound.midi.Sequencer.SyncMode)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement ControllerListElement(com.sun.media.sound.RealTimeSequencer, javax.sound.midi.ControllerEventListener, int[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement ControllerListElement(com.sun.media.sound.RealTimeSequencer, javax.sound.midi.ControllerEventListener, int[], com.sun.media.sound.RealTimeSequencer.1) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement ControllerListElement(com.sun.media.sound.RealTimeSequencer, javax.sound.midi.ControllerEventListener, int[], com.sun.media.sound.RealTimeSequencer.1) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement int[] access$400(com.sun.media.sound.RealTimeSequencer.ControllerListElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement int[] access$400(com.sun.media.sound.RealTimeSequencer.ControllerListElement)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement int[] getControllers()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement void access$200(com.sun.media.sound.RealTimeSequencer.ControllerListElement, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement void access$200(com.sun.media.sound.RealTimeSequencer.ControllerListElement, int[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement void access$500(com.sun.media.sound.RealTimeSequencer.ControllerListElement, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement void access$500(com.sun.media.sound.RealTimeSequencer.ControllerListElement, int[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement void addControllers(int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.ControllerListElement void removeControllers(int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump boolean access$1302(com.sun.media.sound.RealTimeSequencer.DataPump, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump boolean access$1302(com.sun.media.sound.RealTimeSequencer.DataPump, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump boolean dispatchMessage(int, javax.sound.midi.MidiEvent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump boolean[] makeDisabledArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump float getTempoFactor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump float getTempoMPQ()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump long access$1202(com.sun.media.sound.RealTimeSequencer.DataPump, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump long getTickPos()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump long millis2tick(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump long tick2millis(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump void applyDisabledTracks(boolean[], boolean[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump void sendNoteOffIfOn(javax.sound.midi.Track, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.DataPump void setSequence(javax.sound.midi.Sequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.PlayThread com.sun.media.sound.RealTimeSequencer.DataPump getDataPump()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.RealTimeSequencerInfo RealTimeSequencerInfo(com.sun.media.sound.RealTimeSequencer.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.RecordingTrack com.sun.media.sound.RealTimeSequencer.RecordingTrack get(java.util.List, javax.sound.midi.Track) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.RecordingTrack com.sun.media.sound.RealTimeSequencer.RecordingTrack get(java.util.List, javax.sound.midi.Track) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.RecordingTrack int access$102(com.sun.media.sound.RealTimeSequencer.RecordingTrack, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.RecordingTrack javax.sound.midi.Track get(java.util.List, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencer.SequencerTransmitter SequencerTransmitter(com.sun.media.sound.RealTimeSequencer, com.sun.media.sound.RealTimeSequencer.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencerProvider RealTimeSequencerProvider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencerProvider javax.sound.midi.MidiDevice getDevice(javax.sound.midi.MidiDevice.Info) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.RealTimeSequencerProvider javax.sound.midi.MidiDevice.Info[] getDeviceInfo()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument com.sun.media.sound.SF2GlobalRegion getGlobalRegion()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument java.lang.Object getData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument java.util.List&lt;com.sun.media.sound.SF2InstrumentRegion&gt; getRegions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument javax.sound.midi.Patch getPatch()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument long getGenre()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument long getLibrary()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument long getMorphology()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument short getGeneratorValue(java.util.Map&lt;java.lang.Integer,java.lang.Short&gt;, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument void addTimecentValue(com.sun.media.sound.ModelPerformer, com.sun.media.sound.ModelIdentifier, short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument void addValue(com.sun.media.sound.ModelPerformer, com.sun.media.sound.ModelIdentifier, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument void addValue(com.sun.media.sound.ModelPerformer, com.sun.media.sound.ModelIdentifier, short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument void convertModulator(com.sun.media.sound.ModelPerformer, com.sun.media.sound.SF2Modulator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument void setPatch(javax.sound.midi.Patch) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Instrument.1 double transform(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2InstrumentRegion com.sun.media.sound.SF2Layer getLayer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Layer com.sun.media.sound.SF2GlobalRegion getGlobalRegion()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Layer java.lang.Object getData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Layer java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Layer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Layer java.util.List&lt;com.sun.media.sound.SF2LayerRegion&gt; getRegions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2LayerRegion com.sun.media.sound.SF2Sample getSample()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Modulator SF2Modulator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Modulator int getAmountSourceOperator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Modulator int getDestinationOperator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Modulator int getSourceOperator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Modulator int getTransportOperator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Modulator short getAmount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Region byte[] getBytes(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Region java.util.List&lt;com.sun.media.sound.SF2Modulator&gt; getModulators()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Region java.util.Map&lt;java.lang.Integer,java.lang.Short&gt; getGenerators()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Region short getDefaultValue(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Region void putBytes(int, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample byte getPitchCorrection()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample com.sun.media.sound.ModelByteBuffer getData24Buffer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample com.sun.media.sound.ModelByteBuffer getDataBuffer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample int getOriginalPitch()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample int getSampleLink()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample int getSampleType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample long getEndLoop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample long getSampleRate()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample long getStartLoop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setData(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Sample void setData24(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank SF2Soundbank(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank SF2Soundbank(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank int getRomVersionMajor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank int getRomVersionMinor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getCreationDate()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getProduct()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getRomName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getTargetEngine()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getTools()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getVendor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank java.lang.String getVersion()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank javax.sound.midi.Instrument getInstrument(javax.sound.midi.Patch) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void addResource(javax.sound.midi.SoundbankResource) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void readInfoChunk(com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void readPdtaChunk(com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void readSdtaChunk(com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void removeResource(javax.sound.midi.SoundbankResource) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void save(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void save(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void writeGenerators(com.sun.media.sound.RIFFWriter, java.util.Map&lt;java.lang.Integer,java.lang.Short&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void writeInfo(com.sun.media.sound.RIFFWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void writeInfoStringChunk(com.sun.media.sound.RIFFWriter, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void writeInfoStringChunk(com.sun.media.sound.RIFFWriter, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void writeModulators(com.sun.media.sound.RIFFWriter, java.util.List&lt;com.sun.media.sound.SF2Modulator&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void writePdtaChunk(com.sun.media.sound.RIFFWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void writeSdtaChunk(com.sun.media.sound.RIFFWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2Soundbank void writeSoundbank(com.sun.media.sound.RIFFWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SF2SoundbankReader SF2SoundbankReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SF2SoundbankReader javax.sound.midi.Soundbank getSoundbank(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SMFParser boolean trackFinished()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SMFParser void read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument com.sun.media.sound.ModelPatch getPatch()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument java.lang.Object getData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument void add(com.sun.media.sound.ModelInstrument) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument void add(com.sun.media.sound.ModelInstrument, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument void add(com.sun.media.sound.ModelInstrument, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument void add(com.sun.media.sound.ModelInstrument, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument void setPatch(javax.sound.midi.Patch) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument.SimpleInstrumentPart SimpleInstrumentPart()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument.SimpleInstrumentPart SimpleInstrumentPart(com.sun.media.sound.SimpleInstrument.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SimpleInstrument.SimpleInstrumentPart SimpleInstrumentPart(com.sun.media.sound.SimpleInstrument.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank java.lang.String getVendor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank java.lang.String getVersion()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank javax.sound.midi.Instrument getInstrument(javax.sound.midi.Patch) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank void addAllInstruments(javax.sound.midi.Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SimpleSoundbank void removeAllInstruments(javax.sound.midi.Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftAbstractResampler SoftAbstractResampler()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftAbstractResampler com.sun.media.sound.SoftResamplerStreamer openStreamer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftAbstractResampler.ModelAbstractResamplerStream ModelAbstractResamplerStream(com.sun.media.sound.SoftAbstractResampler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftAbstractResampler.ModelAbstractResamplerStream void noteOn(javax.sound.midi.MidiChannel, javax.sound.midi.VoiceStatus, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftAbstractResampler.ModelAbstractResamplerStream void noteOn(javax.sound.midi.MidiChannel, javax.sound.midi.VoiceStatus, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftAbstractResampler.ModelAbstractResamplerStream void noteOn(javax.sound.midi.MidiChannel, javax.sound.midi.VoiceStatus, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftAbstractResampler.ModelAbstractResamplerStream void open(com.sun.media.sound.ModelWavetable, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftAudioBuffer SoftAudioBuffer(int, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftAudioBuffer boolean isSilent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftAudioBuffer int getSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftAudioBuffer javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftAudioBuffer void swap(com.sun.media.sound.SoftAudioBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel SoftChannel(com.sun.media.sound.SoftSynthesizer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel boolean getMono()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel boolean getMute()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel boolean getOmni()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel boolean getSolo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel boolean localControl(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;false-&gt;false;true-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel com.sun.media.sound.ModelConnectionBlock[] createModelConnections(com.sun.media.sound.ModelIdentifier, int[], int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel double[] access$000(com.sun.media.sound.SoftChannel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel double[] access$000(com.sun.media.sound.SoftChannel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel double[] access$100(com.sun.media.sound.SoftChannel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel double[] access$100(com.sun.media.sound.SoftChannel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel double[][] access$300(com.sun.media.sound.SoftChannel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel double[][] access$300(com.sun.media.sound.SoftChannel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel int findFreeVoice(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel int getChannelPressure()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel int getControlPerNote(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel int getController(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel int getPitchBend()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel int getPolyPressure(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel int getProgram()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel int restrict14Bit(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel int restrict7Bit(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel void initVoice(com.sun.media.sound.SoftVoice, com.sun.media.sound.SoftPerformer, int, int, int, int, com.sun.media.sound.ModelConnectionBlock[], com.sun.media.sound.ModelChannelMixer, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel void mapChannelPressureToDestination(int[], int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel void mapPolyPressureToDestination(int[], int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel.1 double[] get(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel.1 double[] get(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel.2 double[] get(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel.2 double[] get(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel.3 double[] get(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel.3 double[] get(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftChannel.MidiControlObject MidiControlObject(com.sun.media.sound.SoftChannel, com.sun.media.sound.SoftChannel.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel.MidiControlObject double[] get(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftChannel.MidiControlObject double[] get(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChannelProxy javax.sound.midi.MidiChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus void globalParameterControlChange(int[], long, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.VariableDelay void processMix(float[], float[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.VariableDelay void processMix(float[], float[], float[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.VariableDelay void processReplace(float[], float[], float[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftChorus.VariableDelay void processReplace(float[], float[], float[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftCubicResampler SoftCubicResampler()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftCubicResampler int getPadding()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftCubicResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftCubicResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftCubicResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftEnvelopeGenerator double[] get(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftEnvelopeGenerator void init(com.sun.media.sound.SoftSynthesizer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftFilter void filter2(com.sun.media.sound.SoftAudioBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftFilter void filter4(com.sun.media.sound.SoftAudioBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftInstrument SoftInstrument(com.sun.media.sound.ModelInstrument) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftInstrument SoftInstrument(com.sun.media.sound.ModelInstrument, com.sun.media.sound.ModelPerformer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftInstrument SoftInstrument(com.sun.media.sound.ModelInstrument, com.sun.media.sound.ModelPerformer[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftInstrument com.sun.media.sound.ModelInstrument getSourceInstrument()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftInstrument com.sun.media.sound.SoftPerformer getPerformer(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftInstrument java.lang.Object getData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftInstrument void initPerformers(com.sun.media.sound.ModelPerformer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftJitterCorrector SoftJitterCorrector(javax.sound.sampled.AudioInputStream, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftJitterCorrector.JitterStream byte[] nextWriteBuffer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftJitterCorrector.JitterStream int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftLanczosResampler int getPadding()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftLanczosResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftLanczosResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftLanczosResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftLimiter void globalParameterControlChange(int[], long, long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftLimiter void globalParameterControlChange(int[], long, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftLimiter void processControlLogic()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler SoftLinearResampler()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler int getPadding()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler2 SoftLinearResampler2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler2 int getPadding()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler2 void interpolate(float[], float[], float, float[], float, float[], int[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler2 void interpolate(float[], float[], float, float[], float, float[], int[], int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftLinearResampler2 void interpolate(float[], float[], float, float[], float, float[], int[], int) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftLowFrequencyOscillator double[] get(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftLowFrequencyOscillator void init(com.sun.media.sound.SoftSynthesizer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer SoftMainMixer(com.sun.media.sound.SoftSynthesizer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer com.sun.media.sound.SoftAudioBuffer[] access$500(com.sun.media.sound.SoftMainMixer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer com.sun.media.sound.SoftAudioBuffer[] access$500(com.sun.media.sound.SoftMainMixer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer com.sun.media.sound.SoftSynthesizer access$600(com.sun.media.sound.SoftMainMixer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer com.sun.media.sound.SoftSynthesizer access$600(com.sun.media.sound.SoftMainMixer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer double[] access$000(com.sun.media.sound.SoftMainMixer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer double[] access$000(com.sun.media.sound.SoftMainMixer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer double[] access$100(com.sun.media.sound.SoftMainMixer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer double[] access$100(com.sun.media.sound.SoftMainMixer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer double[] access$200(com.sun.media.sound.SoftMainMixer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer double[] access$200(com.sun.media.sound.SoftMainMixer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer double[] access$300(com.sun.media.sound.SoftMainMixer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer double[] access$300(com.sun.media.sound.SoftMainMixer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer int getBalance()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer int getCoarseTuning()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer int getFineTuning()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer int getVolume()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer javax.sound.sampled.AudioInputStream getInputStream()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer long getMicrosecondPosition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer void close()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer void globalParameterControlChange(int[], long[], long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer void processMessage(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer void processMessage(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer void processMessage(javax.sound.midi.MidiMessage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer void processSystemExclusiveMessage(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer.1 double[] get(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer.1 double[] get(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer.2 int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMainMixer.SoftChannelMixerContainer SoftChannelMixerContainer(com.sun.media.sound.SoftMainMixer, com.sun.media.sound.SoftMainMixer.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader SoftMidiAudioFileReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(javax.sound.midi.Sequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(javax.sound.midi.Sequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.midi.Sequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMidiAudioFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.midi.Sequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip SoftMixingClip(com.sun.media.sound.SoftMixingMixer, javax.sound.sampled.DataLine.Info) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip boolean isActive()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip boolean isRunning()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip byte[] access$500(com.sun.media.sound.SoftMixingClip) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip byte[] access$500(com.sun.media.sound.SoftMixingClip)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip float getLevel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$000(com.sun.media.sound.SoftMixingClip) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$000(com.sun.media.sound.SoftMixingClip)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$010(com.sun.media.sound.SoftMixingClip) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$100(com.sun.media.sound.SoftMixingClip) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$100(com.sun.media.sound.SoftMixingClip)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$200(com.sun.media.sound.SoftMixingClip) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$200(com.sun.media.sound.SoftMixingClip)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$300(com.sun.media.sound.SoftMixingClip) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$300(com.sun.media.sound.SoftMixingClip)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$400(com.sun.media.sound.SoftMixingClip) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$400(com.sun.media.sound.SoftMixingClip)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$402(com.sun.media.sound.SoftMixingClip, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$412(com.sun.media.sound.SoftMixingClip, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$600(com.sun.media.sound.SoftMixingClip) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int access$600(com.sun.media.sound.SoftMixingClip)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int getBufferSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip int getFramePosition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip long getLongFramePosition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip void drain()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip void flush()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip void open(javax.sound.sampled.AudioFormat, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingClip void open(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine SoftMixingDataLine(com.sun.media.sound.SoftMixingMixer, javax.sound.sampled.DataLine.Info) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine boolean isControlSupported(javax.sound.sampled.Control.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine boolean isControlSupported(javax.sound.sampled.Control.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine com.sun.media.sound.SoftMixingDataLine.Balance access$000(com.sun.media.sound.SoftMixingDataLine) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine com.sun.media.sound.SoftMixingDataLine.Balance access$000(com.sun.media.sound.SoftMixingDataLine)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine javax.sound.sampled.Control getControl(javax.sound.sampled.Control.Type) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine javax.sound.sampled.Line.Info getLineInfo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.ApplyReverb ApplyReverb(com.sun.media.sound.SoftMixingDataLine, com.sun.media.sound.SoftMixingDataLine.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.AudioFloatInputStreamResampler AudioFloatInputStreamResampler(com.sun.media.sound.AudioFloatInputStream, javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.AudioFloatInputStreamResampler AudioFloatInputStreamResampler(com.sun.media.sound.AudioFloatInputStream, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.AudioFloatInputStreamResampler int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.AudioFloatInputStreamResampler javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.AudioFloatInputStreamResampler long getFrameLength()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.Balance Balance(com.sun.media.sound.SoftMixingDataLine, com.sun.media.sound.SoftMixingDataLine.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.ChorusSend ChorusSend(com.sun.media.sound.SoftMixingDataLine, com.sun.media.sound.SoftMixingDataLine.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.Gain Gain(com.sun.media.sound.SoftMixingDataLine, com.sun.media.sound.SoftMixingDataLine.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.Mute Mute(com.sun.media.sound.SoftMixingDataLine, com.sun.media.sound.SoftMixingDataLine.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.Pan Pan(com.sun.media.sound.SoftMixingDataLine, com.sun.media.sound.SoftMixingDataLine.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingDataLine.ReverbSend ReverbSend(com.sun.media.sound.SoftMixingDataLine, com.sun.media.sound.SoftMixingDataLine.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMainMixer SoftMixingMainMixer(com.sun.media.sound.SoftMixingMixer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMainMixer com.sun.media.sound.SoftAudioBuffer[] access$000(com.sun.media.sound.SoftMixingMainMixer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMainMixer com.sun.media.sound.SoftAudioBuffer[] access$000(com.sun.media.sound.SoftMixingMainMixer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMainMixer com.sun.media.sound.SoftMixingDataLine[] getOpenLines()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMainMixer com.sun.media.sound.SoftMixingMixer access$100(com.sun.media.sound.SoftMixingMainMixer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMainMixer com.sun.media.sound.SoftMixingMixer access$100(com.sun.media.sound.SoftMixingMainMixer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMainMixer javax.sound.sampled.AudioInputStream getInputStream()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMainMixer.1 int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer boolean isControlSupported(javax.sound.sampled.Control.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer boolean isControlSupported(javax.sound.sampled.Control.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer boolean isLineSupported(javax.sound.sampled.Line.Info) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer boolean isLineSupported(javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer boolean isSynchronizationSupported(javax.sound.sampled.Line[], boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer boolean isSynchronizationSupported(javax.sound.sampled.Line[], boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;false;_,false-&gt;false;_,true-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer com.sun.media.sound.SoftMixingMainMixer getMainMixer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer float getControlRate()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer int getMaxLines(javax.sound.sampled.Line.Info) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Control getControl(javax.sound.sampled.Control.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Control[] getControls()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line getLine(javax.sound.sampled.Line.Info) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line getLine(javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line.Info getLineInfo()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line.Info[] getSourceLineInfo()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line.Info[] getTargetLineInfo()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line.Info[] getTargetLineInfo(javax.sound.sampled.Line.Info) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line.Info[] getTargetLineInfo(javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line[] getSourceLines()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Line[] getTargetLines()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer javax.sound.sampled.Mixer.Info getMixerInfo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer long getLatency()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer void synchronize(javax.sound.sampled.Line[], boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixer void unsynchronize(javax.sound.sampled.Line[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixerProvider SoftMixingMixerProvider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingMixerProvider javax.sound.sampled.Mixer.Info[] getMixerInfo()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine SoftMixingSourceDataLine(com.sun.media.sound.SoftMixingMixer, javax.sound.sampled.DataLine.Info) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine boolean isActive()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine boolean isRunning()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine byte[] access$000(com.sun.media.sound.SoftMixingSourceDataLine) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine byte[] access$000(com.sun.media.sound.SoftMixingSourceDataLine)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine float getLevel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int access$100(com.sun.media.sound.SoftMixingSourceDataLine) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int access$100(com.sun.media.sound.SoftMixingSourceDataLine)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int access$120(com.sun.media.sound.SoftMixingSourceDataLine, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int access$200(com.sun.media.sound.SoftMixingSourceDataLine) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int access$200(com.sun.media.sound.SoftMixingSourceDataLine)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int access$202(com.sun.media.sound.SoftMixingSourceDataLine, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int access$400(com.sun.media.sound.SoftMixingSourceDataLine) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int access$400(com.sun.media.sound.SoftMixingSourceDataLine)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int getBufferSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine int getFramePosition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine long access$314(com.sun.media.sound.SoftMixingSourceDataLine, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine long getLongFramePosition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine void open(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine void open(javax.sound.sampled.AudioFormat, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftMixingSourceDataLine.1 int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer SoftPerformer(com.sun.media.sound.ModelPerformer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer boolean isUnnecessaryTransform(com.sun.media.sound.ModelTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer boolean isUnnecessaryTransform(com.sun.media.sound.ModelTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer java.lang.String extractKeys(com.sun.media.sound.ModelConnectionBlock) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer java.lang.String extractKeys(com.sun.media.sound.ModelConnectionBlock)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer void processMidiControlSource(com.sun.media.sound.ModelSource, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer void processMidiNrpnSource(com.sun.media.sound.ModelSource, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer void processMidiRpnSource(com.sun.media.sound.ModelSource, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer void processMidiSource(com.sun.media.sound.ModelSource, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer void processNoteOnSource(com.sun.media.sound.ModelSource, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer void processSource(com.sun.media.sound.ModelSource, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer.1 double transform(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer.2 double transform(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer.KeySortComparator KeySortComparator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer.KeySortComparator KeySortComparator(com.sun.media.sound.SoftPerformer.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer.KeySortComparator KeySortComparator(com.sun.media.sound.SoftPerformer.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer.KeySortComparator int compare(com.sun.media.sound.ModelSource, com.sun.media.sound.ModelSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPerformer.KeySortComparator int compare(com.sun.media.sound.ModelSource, com.sun.media.sound.ModelSource) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPointResampler SoftPointResampler()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftPointResampler int getPadding()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftPointResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPointResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftPointResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftProvider SoftProvider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftProvider javax.sound.midi.MidiDevice getDevice(javax.sound.midi.MidiDevice.Info) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftReceiver SoftReceiver(com.sun.media.sound.SoftSynthesizer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftReceiver javax.sound.midi.MidiDevice getMidiDevice()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftReceiver void send(javax.sound.midi.MidiMessage, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb void globalParameterControlChange(int[], long, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb.AllPass void processReplace(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb.AllPass void processReplace(float[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb.Comb float access$002(com.sun.media.sound.SoftReverb.Comb, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb.Comb void processMix(float[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftReverb.Comb void processReplace(float[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftShortMessage int getChannel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftShortMessage java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSincResampler int getPadding()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSincResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSincResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSincResampler void interpolate(float[], float[], float, float[], float, float[], int[], int) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer boolean isOpen()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer boolean isSoundbankSupported(javax.sound.midi.Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer boolean loadAllInstruments(javax.sound.midi.Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer boolean loadInstrument(javax.sound.midi.Instrument) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer boolean loadInstruments(java.util.List&lt;com.sun.media.sound.ModelInstrument&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer boolean loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer boolean loadSamples(java.util.List&lt;com.sun.media.sound.ModelInstrument&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer boolean remapInstrument(javax.sound.midi.Instrument, javax.sound.midi.Instrument) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer boolean remapInstrument(javax.sound.midi.Instrument, javax.sound.midi.Instrument) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer com.sun.media.sound.AudioSynthesizerPropertyInfo[] getPropertyInfo(java.util.Map&lt;java.lang.String,java.lang.Object&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer com.sun.media.sound.SoftMainMixer getMainMixer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer com.sun.media.sound.SoftTuning getTuning(javax.sound.midi.Patch) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer com.sun.media.sound.SoftVoice[] getVoices()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer float getControlRate()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer int getDeviceID()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer int getGeneralMidiMode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer int getMaxPolyphony()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer int getMaxReceivers()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer int getMaxTransmitters()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer int getVoiceAllocationMode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer java.lang.String patchToString(javax.sound.midi.Patch) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer java.lang.String patchToString(javax.sound.midi.Patch)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer java.util.List&lt;javax.sound.midi.Receiver&gt; getReceivers()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer java.util.List&lt;javax.sound.midi.Transmitter&gt; getTransmitters()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer javax.sound.midi.Instrument[] getLoadedInstruments()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer javax.sound.midi.MidiDevice.Info getDeviceInfo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer javax.sound.midi.Receiver getReceiver()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer javax.sound.midi.Receiver getReceiverReferenceCounting()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer javax.sound.sampled.AudioInputStream openStream(javax.sound.sampled.AudioFormat, java.util.Map&lt;java.lang.String,java.lang.Object&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer long getLatency()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer long getMicrosecondPosition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer void getBuffers(com.sun.media.sound.ModelInstrument, java.util.List&lt;com.sun.media.sound.ModelByteBuffer&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer void open(javax.sound.sampled.SourceDataLine, java.util.Map&lt;java.lang.String,java.lang.Object&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer void processPropertyInfo(java.util.Map&lt;java.lang.String,java.lang.Object&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer void setFormat(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer void unloadAllInstruments(javax.sound.midi.Soundbank) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer void unloadInstrument(javax.sound.midi.Instrument) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer void unloadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer.WeakAudioStream WeakAudioStream(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftSynthesizer.WeakAudioStream javax.sound.sampled.AudioInputStream getAudioInputStream()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftTuning SoftTuning(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftTuning SoftTuning(javax.sound.midi.Patch, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftTuning boolean checksumOK(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftTuning boolean checksumOK(byte[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftTuning double getTuning(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftTuning double[] getTuning()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftTuning java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftTuning javax.sound.midi.Patch getPatch()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftTuning void load(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice SoftVoice(com.sun.media.sound.SoftSynthesizer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double processKeyBasedController(double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double transformValue(double, com.sun.media.sound.ModelDestination) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double transformValue(double, com.sun.media.sound.ModelSource) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$000(com.sun.media.sound.SoftVoice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$000(com.sun.media.sound.SoftVoice)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$100(com.sun.media.sound.SoftVoice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$100(com.sun.media.sound.SoftVoice)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$200(com.sun.media.sound.SoftVoice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$200(com.sun.media.sound.SoftVoice)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$300(com.sun.media.sound.SoftVoice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$300(com.sun.media.sound.SoftVoice)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$400(com.sun.media.sound.SoftVoice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$400(com.sun.media.sound.SoftVoice)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$500(com.sun.media.sound.SoftVoice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$500(com.sun.media.sound.SoftVoice)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$600(com.sun.media.sound.SoftVoice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$600(com.sun.media.sound.SoftVoice)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$700(com.sun.media.sound.SoftVoice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$700(com.sun.media.sound.SoftVoice)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$800(com.sun.media.sound.SoftVoice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$800(com.sun.media.sound.SoftVoice)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$900(com.sun.media.sound.SoftVoice) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] access$900(com.sun.media.sound.SoftVoice)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice double[] getValue(com.sun.media.sound.ModelIdentifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice int getValueKC(com.sun.media.sound.ModelIdentifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice void mixAudioStream(com.sun.media.sound.SoftAudioBuffer, com.sun.media.sound.SoftAudioBuffer, com.sun.media.sound.SoftAudioBuffer, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice void mixAudioStream(com.sun.media.sound.SoftAudioBuffer, com.sun.media.sound.SoftAudioBuffer, com.sun.media.sound.SoftAudioBuffer, float, float) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice.1 double[] get(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice.1 double[] get(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice.2 double[] get(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice.2 double[] get(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice.3 double[] get(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice.3 double[] get(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice.4 double[] get(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.SoftVoice.4 double[] get(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileReader StandardMidiFileReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileReader javax.sound.midi.MidiFileFormat getMidiFileFormat(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileReader javax.sound.midi.MidiFileFormat getMidiFileFormat(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileReader javax.sound.midi.MidiFileFormat getMidiFileFormat(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileReader javax.sound.midi.MidiFileFormat getMidiFileFormat(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileReader javax.sound.midi.MidiFileFormat getMidiFileFormat(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileReader javax.sound.midi.MidiFileFormat getMidiFileFormatFromStream(java.io.InputStream, int, com.sun.media.sound.SMFParser)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileReader javax.sound.midi.Sequence getSequence(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileReader javax.sound.midi.Sequence getSequence(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter StandardMidiFileWriter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter boolean isFileTypeSupported(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter int getType(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter int write(javax.sound.midi.Sequence, int, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter int write(javax.sound.midi.Sequence, int, java.io.File) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter int write(javax.sound.midi.Sequence, int, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter int[] getMidiFileTypes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter int[] getMidiFileTypes(javax.sound.midi.Sequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter int[] getMidiFileTypes(javax.sound.midi.Sequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter java.io.InputStream getFileStream(int, javax.sound.midi.Sequence) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter java.io.InputStream writeTrack(javax.sound.midi.Track, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.StandardMidiFileWriter java.io.InputStream writeTrack(javax.sound.midi.Track, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SunCodec javax.sound.sampled.AudioFormat.Encoding[] getSourceEncodings()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SunCodec javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SunFileReader SunFileReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SunFileReader int big2little(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SunFileReader int calculatePCMFrameSize(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SunFileReader int rllong(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SunFileReader short big2littleShort(short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SunFileReader short rlshort(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SunFileWriter int big2little(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SunFileWriter int rllong(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SunFileWriter javax.sound.sampled.AudioFileFormat.Type[] getAudioFileTypes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SunFileWriter short big2littleShort(short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.SunFileWriter short rlshort(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.SunFileWriter.NoCloseInputStream void close()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Toolkit Toolkit()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Toolkit boolean isFullySpecifiedPCMFormat(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.Toolkit int align(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Toolkit javax.sound.sampled.AudioInputStream getPCMConvertedAudioInputStream(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.Toolkit long align(long, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.Toolkit long bytes2micros(javax.sound.sampled.AudioFormat, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.Toolkit long bytes2millis(javax.sound.sampled.AudioFormat, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.Toolkit long frames2micros(javax.sound.sampled.AudioFormat, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.Toolkit long micros2bytes(javax.sound.sampled.AudioFormat, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.Toolkit long micros2frames(javax.sound.sampled.AudioFormat, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.Toolkit long millis2bytes(javax.sound.sampled.AudioFormat, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.Toolkit void isFullySpecifiedAudioFormat(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec byte[] access$000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec byte[] access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings(javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec javax.sound.sampled.AudioFormat[] getOutputFormats(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec javax.sound.sampled.AudioFormat[] getTargetFormats(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec javax.sound.sampled.AudioFormat[] getTargetFormats(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.UlawCodec javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.UlawCodec javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.UlawCodec javax.sound.sampled.AudioInputStream getConvertedStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec javax.sound.sampled.AudioInputStream getConvertedStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="com.sun.media.sound.UlawCodec short[] access$200()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec.UlawCodecStream UlawCodecStream(com.sun.media.sound.UlawCodec, javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec.UlawCodecStream UlawCodecStream(com.sun.media.sound.UlawCodec, javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec.UlawCodecStream UlawCodecStream(com.sun.media.sound.UlawCodec, javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFormat) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec.UlawCodecStream int read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.UlawCodec.UlawCodecStream short search(short, short[], short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader WaveExtensibleFileReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioFileFormat internal_getAudioFileFormat(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader.GUID GUID()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader.GUID boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader.GUID boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader.GUID com.sun.media.sound.WaveExtensibleFileReader.GUID read(com.sun.media.sound.RIFFReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader.GUID com.sun.media.sound.WaveExtensibleFileReader.GUID read(com.sun.media.sound.RIFFReader)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveExtensibleFileReader.GUID int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveFileFormat WaveFileFormat(javax.sound.sampled.AudioFileFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileFormat WaveFileFormat(javax.sound.sampled.AudioFileFormat.Type, int, javax.sound.sampled.AudioFormat, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileFormat int getFmtChunkSize(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveFileFormat int getHeaderSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveFileFormat int getHeaderSize(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveFileFormat int getWaveType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader WaveFileReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader javax.sound.sampled.AudioFileFormat getFMT(java.io.InputStream, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.File) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter int writeWaveFile(java.io.InputStream, com.sun.media.sound.WaveFileFormat, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter java.io.InputStream getFileStream(com.sun.media.sound.WaveFileFormat, java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter java.io.InputStream getFileStream(com.sun.media.sound.WaveFileFormat, java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter javax.sound.sampled.AudioFileFormat getAudioFileFormat(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter javax.sound.sampled.AudioFileFormat getAudioFileFormat(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter javax.sound.sampled.AudioFileFormat getAudioFileFormat(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter javax.sound.sampled.AudioFileFormat.Type[] getAudioFileTypes(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFileWriter javax.sound.sampled.AudioFileFormat.Type[] getAudioFileTypes(javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader WaveFloatFileReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioFileFormat internal_getAudioFileFormat(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileReader javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter WaveFloatFileWriter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.File) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter int write(javax.sound.sampled.AudioInputStream, javax.sound.sampled.AudioFileFormat.Type, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter javax.sound.sampled.AudioFileFormat.Type[] getAudioFileTypes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter javax.sound.sampled.AudioFileFormat.Type[] getAudioFileTypes(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter javax.sound.sampled.AudioFileFormat.Type[] getAudioFileTypes(javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter javax.sound.sampled.AudioInputStream toLittleEndian(javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter void checkFormat(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioInputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter void checkFormat(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter void write(javax.sound.sampled.AudioInputStream, com.sun.media.sound.RIFFWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="com.sun.media.sound.WaveFloatFileWriter void write(javax.sound.sampled.AudioInputStream, com.sun.media.sound.RIFFWriter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
