<root>
  <item name="apple.laf.JRSUIConstants JRSUIConstants()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants apple.laf.JRSUIConstants.Hit getHit(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants java.lang.String getConstantName(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIConstants.AlignmentHorizontal long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.AlignmentVertical long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Animating long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.ArrowsOnly long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.BooleanValue long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Direction long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.DoubleValue DoubleValue(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIConstants.DoubleValue boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="apple.laf.JRSUIConstants.DoubleValue boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.DoubleValue byte getTypeCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.DoubleValue void putValueInBuffer(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Focused long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.FrameOnly long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Hit Hit(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Hit boolean isHit()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.IndicatorOnly long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Key Key(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Key java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIConstants.NoIndicator long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.NothingToScroll long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Orientation long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Property Property(apple.laf.JRSUIConstants.PropertyEncoding, byte) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Property Property(apple.laf.JRSUIConstants.PropertyEncoding, byte)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Property long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.PropertyEncoding PropertyEncoding(long, byte)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIConstants.ScrollBarPart long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.SegmentLeadingSeparator long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.SegmentPosition long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.SegmentTrailingSeparator long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.ShowArrows long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Size long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.State long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Variant long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.Widget long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.WindowClipCorners long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.WindowTitleBarSeparator long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIConstants.WindowType long apply(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIControl JRSUIControl(apple.laf.JRSUIControl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIControl apple.laf.JRSUIControl.BufferState handleBufferOverflow(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIControl apple.laf.JRSUIControl.BufferState loadBufferWithChanges(apple.laf.JRSUIControl.ThreadLocalByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIControl boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="apple.laf.JRSUIControl boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="apple.laf.JRSUIControl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIControl void getPartBounds(double[], double, double, double, double, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIControl void set(apple.laf.JRSUIState) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIControl void setEncodedState(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIFocus JRSUIFocus(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIState JRSUIState(apple.laf.JRSUIConstants.Widget) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState JRSUIState(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIState T createDerivation()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="apple.laf.JRSUIState boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="apple.laf.JRSUIState boolean is(apple.laf.JRSUIConstants.Property) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState boolean is(apple.laf.JRSUIConstants.Property)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIState boolean isDerivationSame()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIState void apply(apple.laf.JRSUIControl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIState void set(apple.laf.JRSUIConstants.Property) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState.AnimationFrameState T createDerivation()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState.AnimationFrameState boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="apple.laf.JRSUIState.AnimationFrameState boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="apple.laf.JRSUIState.AnimationFrameState boolean isDerivationSame()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIState.AnimationFrameState void apply(apple.laf.JRSUIControl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState.AnimationFrameState void setAnimationFrame(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIState.ScrollBarState T createDerivation()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState.ScrollBarState boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="apple.laf.JRSUIState.ScrollBarState boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="apple.laf.JRSUIState.ScrollBarState boolean isDerivationSame()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIState.ScrollBarState void apply(apple.laf.JRSUIControl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState.ScrollBarState void setThumbPercent(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIState.ScrollBarState void setThumbStart(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIState.TitleBarHeightState T createDerivation()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState.TitleBarHeightState void apply(apple.laf.JRSUIControl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState.ValueState T createDerivation()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState.ValueState boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="apple.laf.JRSUIState.ValueState boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="apple.laf.JRSUIState.ValueState boolean isDerivationSame()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIState.ValueState void apply(apple.laf.JRSUIControl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIState.ValueState void setValue(double)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="apple.laf.JRSUIStateFactory JRSUIStateFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIStateFactory apple.laf.JRSUIState getSliderThumb()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIStateFactory apple.laf.JRSUIState getSliderTrack()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIStateFactory apple.laf.JRSUIState getSpinnerArrows()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIStateFactory apple.laf.JRSUIState getSplitPaneDivider()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIStateFactory apple.laf.JRSUIState getTab()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIStateFactory apple.laf.JRSUIState.AnimationFrameState getDisclosureTriangle()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIStateFactory apple.laf.JRSUIState.ScrollBarState getScrollBar()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIStateFactory apple.laf.JRSUIState.TitleBarHeightState getTitleBar()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIStateFactory apple.laf.JRSUIState.ValueState getLabeledButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIStateFactory apple.laf.JRSUIState.ValueState getProgressBar()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIUtils JRSUIUtils()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIUtils.HitDetection HitDetection()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIUtils.HitDetection apple.laf.JRSUIConstants.Hit getHitForPoint(apple.laf.JRSUIControl, double, double, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIUtils.Images Images()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIUtils.Images boolean shouldUseLegacySecurityUIPath()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIUtils.InternalFrame InternalFrame()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIUtils.InternalFrame boolean shouldUseLegacyBorderMetrics()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIUtils.ScrollBar ScrollBar()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIUtils.ScrollBar double getNativeOffsetChange(apple.laf.JRSUIControl, double, double, double, double, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIUtils.ScrollBar void getPartBounds(double[], apple.laf.JRSUIControl, double, double, double, double, apple.laf.JRSUIConstants.ScrollBarPart) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIUtils.ScrollBar void getPartBounds(double[], apple.laf.JRSUIControl, double, double, double, double, apple.laf.JRSUIConstants.ScrollBarPart) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIUtils.ScrollBar void getPartBounds(double[], apple.laf.JRSUIControl, double, double, double, double, apple.laf.JRSUIConstants.ScrollBarPart) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="apple.laf.JRSUIUtils.TabbedPane TabbedPane()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIUtils.TabbedPane boolean shouldUseTabbedPaneContrastUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIUtils.TabbedPane boolean useLegacyTabs()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIUtils.Tree Tree()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="apple.laf.JRSUIUtils.Tree boolean useLegacyTreeKnobs()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
</root>
