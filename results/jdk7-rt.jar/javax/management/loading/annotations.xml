<root>
  <item name="javax.management.loading.DefaultLoaderRepository DefaultLoaderRepository()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLet MLet(java.net.URL[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLet MLet(java.net.URL[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLet MLet(java.net.URL[], java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLet MLet(java.net.URL[], java.lang.ClassLoader, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLet MLet(java.net.URL[], java.lang.ClassLoader, java.net.URLStreamHandlerFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLet MLet(java.net.URL[], java.lang.ClassLoader, java.net.URLStreamHandlerFactory) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLet MLet(java.net.URL[], java.lang.ClassLoader, java.net.URLStreamHandlerFactory, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLet MLet(java.net.URL[], java.lang.ClassLoader, java.net.URLStreamHandlerFactory, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLet java.lang.Class&lt;?&gt; findClass(java.lang.String, javax.management.loading.ClassLoaderRepository)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLet java.lang.Object loadSerializedObject(java.net.URL, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLet java.lang.String findLibrary(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLet java.lang.String getLibraryDirectory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLet java.lang.String getTmpDir()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLet java.lang.String loadLibraryAsResource(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLet java.lang.String removeSpace(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLet java.net.URL check(java.lang.String, java.net.URL, java.lang.String, javax.management.loading.MLetContent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLet java.net.URL check(java.lang.String, java.net.URL, java.lang.String, javax.management.loading.MLetContent) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLet java.net.URL check(java.lang.String, java.net.URL, java.lang.String, javax.management.loading.MLetContent) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLet java.net.URL check(java.lang.String, java.net.URL, java.lang.String, javax.management.loading.MLetContent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;_,!null,_,_-&gt;!null;_,null,_,_-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLet java.util.Set&lt;java.lang.Object&gt; getMBeansFromURL(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLet java.util.Set&lt;java.lang.Object&gt; getMBeansFromURL(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLet java.util.Set&lt;java.lang.Object&gt; getMBeansFromURL(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLet javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLet void addURL(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLet void postDeregister()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLet void postRegister(java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLet void postRegister(java.lang.Boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLet void preDeregister()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLet void readExternal(java.io.ObjectInput) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLet void writeExternal(java.io.ObjectOutput) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLetContent MLetContent(java.net.URL, java.util.Map&lt;java.lang.String,java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLetContent MLetContent(java.net.URL, java.util.Map&lt;java.lang.String,java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLetContent MLetContent(java.net.URL, java.util.Map&lt;java.lang.String,java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;, java.util.List&lt;java.lang.String&gt;) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLetContent java.lang.String getParameter(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLetContent java.net.URL getCodeBase()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLetContent java.net.URL getDocumentBase()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLetContent java.util.List&lt;java.lang.String&gt; getParameterTypes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLetContent java.util.List&lt;java.lang.String&gt; getParameterValues()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLetContent java.util.Map&lt;java.lang.String,java.lang.String&gt; getAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLetObjectInputStream MLetObjectInputStream(java.io.InputStream, javax.management.loading.MLet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLetObjectInputStream java.lang.Class&lt;?&gt; primitiveType(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.loading.MLetObjectInputStream java.lang.Class&lt;?&gt; resolveClass(java.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLetObjectInputStream java.lang.ClassLoader getClassLoader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLetParser MLetParser()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.loading.MLetParser java.lang.String scanIdentifier(java.io.Reader)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLetParser java.util.List&lt;javax.management.loading.MLetContent&gt; parse(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLetParser java.util.List&lt;javax.management.loading.MLetContent&gt; parse(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLetParser java.util.List&lt;javax.management.loading.MLetContent&gt; parseURL(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.MLetParser java.util.Map&lt;java.lang.String,java.lang.String&gt; scanTag(java.io.Reader)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.PrivateMLet PrivateMLet(java.net.URL[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.PrivateMLet PrivateMLet(java.net.URL[], java.lang.ClassLoader, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.PrivateMLet PrivateMLet(java.net.URL[], java.lang.ClassLoader, java.net.URLStreamHandlerFactory, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.loading.PrivateMLet PrivateMLet(java.net.URL[], java.lang.ClassLoader, java.net.URLStreamHandlerFactory, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
