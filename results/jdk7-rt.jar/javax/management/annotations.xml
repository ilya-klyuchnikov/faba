<root>
  <item name="javax.management.AndQueryExp AndQueryExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.AndQueryExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AndQueryExp javax.management.QueryExp getLeftExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.AndQueryExp javax.management.QueryExp getRightExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.Attribute Attribute(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Attribute boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.Attribute boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.Attribute java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.Attribute java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.Attribute java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeChangeNotification AttributeChangeNotification(java.lang.Object, long, long, java.lang.String, java.lang.String, java.lang.String, java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeChangeNotification java.lang.Object getNewValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.AttributeChangeNotification java.lang.Object getOldValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.AttributeChangeNotification java.lang.String getAttributeName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.AttributeChangeNotification java.lang.String getAttributeType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.AttributeChangeNotificationFilter boolean isNotificationEnabled(javax.management.Notification) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeChangeNotificationFilter java.util.Vector&lt;java.lang.String&gt; getEnabledAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.AttributeChangeNotificationFilter void enableAttribute(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeList AttributeList(java.util.List&lt;javax.management.Attribute&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeList AttributeList(javax.management.AttributeList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeList boolean add(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.AttributeList boolean addAll(int, java.util.Collection&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeList boolean addAll(int, javax.management.AttributeList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeList boolean addAll(java.util.Collection&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeList boolean addAll(javax.management.AttributeList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeList java.util.List&lt;javax.management.Attribute&gt; asList()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeList void adding(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.AttributeList void adding(java.util.Collection&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeValueExp AttributeValueExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.AttributeValueExp java.lang.Object getAttribute(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.AttributeValueExp java.lang.String getAttributeName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.AttributeValueExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.AttributeValueExp javax.management.ValueExp apply(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.AttributeValueExp void setMBeanServer(javax.management.MBeanServer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.AttributeValueExp void setMBeanServer(javax.management.MBeanServer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BadAttributeValueExpException BadAttributeValueExpException(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.BadAttributeValueExpException java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.BadAttributeValueExpException void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.BadBinaryOpValueExpException java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.BadBinaryOpValueExpException javax.management.ValueExp getExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BadStringOperationException java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.BetweenQueryExp BetweenQueryExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BetweenQueryExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.BetweenQueryExp javax.management.ValueExp getCheckedValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BetweenQueryExp javax.management.ValueExp getLowerBound()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BetweenQueryExp javax.management.ValueExp getUpperBound()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BinaryOpValueExp BinaryOpValueExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BinaryOpValueExp int getOperator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BinaryOpValueExp java.lang.String opString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.BinaryOpValueExp java.lang.String parens(javax.management.ValueExp, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.BinaryOpValueExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.BinaryOpValueExp javax.management.ValueExp apply(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.BinaryOpValueExp javax.management.ValueExp getLeftValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BinaryOpValueExp javax.management.ValueExp getRightValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BinaryRelQueryExp BinaryRelQueryExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BinaryRelQueryExp int getOperator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BinaryRelQueryExp java.lang.String relOpString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.BinaryRelQueryExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.BinaryRelQueryExp javax.management.ValueExp getLeftValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BinaryRelQueryExp javax.management.ValueExp getRightValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BooleanValueExp BooleanValueExp(java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.BooleanValueExp java.lang.Boolean getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.BooleanValueExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.BooleanValueExp javax.management.ValueExp apply(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.BooleanValueExp javax.management.ValueExp apply(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ClassAttributeValueExp java.lang.Object getValue(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.ClassAttributeValueExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ClassAttributeValueExp javax.management.ValueExp apply(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.DefaultLoaderRepository DefaultLoaderRepository()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ImmutableDescriptor ImmutableDescriptor(java.lang.String...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor ImmutableDescriptor(java.lang.String[], java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor ImmutableDescriptor(java.lang.String[], java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor ImmutableDescriptor(java.util.Map&lt;java.lang.String,?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.ImmutableDescriptor boolean isEmpty(javax.management.Descriptor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.ImmutableDescriptor boolean isEmpty(javax.management.Descriptor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.ImmutableDescriptor boolean isValid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ImmutableDescriptor int findNonEmpty(javax.management.Descriptor[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor java.lang.Object getFieldValue(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.ImmutableDescriptor java.lang.Object[] getFieldValues(java.lang.String...) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.ImmutableDescriptor java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor java.lang.String[] getFields()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor java.util.SortedMap&lt;java.lang.String,?&gt; makeMap(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor java.util.SortedMap&lt;java.lang.String,?&gt; makeMap(java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor java.util.SortedMap&lt;java.lang.String,?&gt; makeMap(java.lang.String[], java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor java.util.SortedMap&lt;java.lang.String,?&gt; makeMap(java.lang.String[], java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor java.util.SortedMap&lt;java.lang.String,?&gt; makeMap(java.lang.String[], java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor javax.management.Descriptor clone()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor javax.management.Descriptor nonNullDescriptor(javax.management.Descriptor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.ImmutableDescriptor javax.management.Descriptor nonNullDescriptor(javax.management.Descriptor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ImmutableDescriptor javax.management.ImmutableDescriptor union(javax.management.Descriptor...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor void checkIllegalFieldName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.ImmutableDescriptor void removeField(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.ImmutableDescriptor void setFields(java.lang.String[], java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ImmutableDescriptor void setFields(java.lang.String[], java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.InQueryExp InQueryExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.InQueryExp java.lang.String generateValueList()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.InQueryExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.InQueryExp javax.management.ValueExp getCheckedValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.InQueryExp javax.management.ValueExp[] getExplicitValues()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.InstanceOfQueryExp InstanceOfQueryExp(javax.management.StringValueExp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.InstanceOfQueryExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.InstanceOfQueryExp javax.management.StringValueExp getClassNameValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.JMX JMX()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.JMX T createProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T createProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T createProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T newMBeanProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T newMBeanProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T newMBeanProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T newMBeanProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T newMBeanProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T newMBeanProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T newMXBeanProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T newMXBeanProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T newMXBeanProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T newMXBeanProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T newMXBeanProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX T newMXBeanProxy(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX boolean isMXBeanInterface(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.JMX void checkProxyInterface(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanAttributeInfo boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanAttributeInfo boolean isIs()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanAttributeInfo boolean isIs(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanAttributeInfo boolean isIs(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanAttributeInfo boolean isReadable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanAttributeInfo boolean isWritable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanAttributeInfo java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanAttributeInfo java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanAttributeInfo java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanConstructorInfo MBeanConstructorInfo(java.lang.String, java.lang.String, javax.management.MBeanParameterInfo[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanConstructorInfo MBeanConstructorInfo(java.lang.String, java.lang.String, javax.management.MBeanParameterInfo[], javax.management.Descriptor) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanConstructorInfo MBeanConstructorInfo(java.lang.String, java.lang.reflect.Constructor&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanConstructorInfo boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanConstructorInfo java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanConstructorInfo java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanConstructorInfo javax.management.MBeanParameterInfo[] constructorSignature(java.lang.reflect.Constructor&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanConstructorInfo javax.management.MBeanParameterInfo[] constructorSignature(java.lang.reflect.Constructor&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanException java.lang.Exception getTargetException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanException java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanFeatureInfo boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanFeatureInfo java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanFeatureInfo java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanFeatureInfo void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanFeatureInfo void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanInfo MBeanInfo(java.lang.String, java.lang.String, javax.management.MBeanAttributeInfo[], javax.management.MBeanConstructorInfo[], javax.management.MBeanOperationInfo[], javax.management.MBeanNotificationInfo[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo MBeanInfo(java.lang.String, java.lang.String, javax.management.MBeanAttributeInfo[], javax.management.MBeanConstructorInfo[], javax.management.MBeanOperationInfo[], javax.management.MBeanNotificationInfo[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo MBeanInfo(java.lang.String, java.lang.String, javax.management.MBeanAttributeInfo[], javax.management.MBeanConstructorInfo[], javax.management.MBeanOperationInfo[], javax.management.MBeanNotificationInfo[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo MBeanInfo(java.lang.String, java.lang.String, javax.management.MBeanAttributeInfo[], javax.management.MBeanConstructorInfo[], javax.management.MBeanOperationInfo[], javax.management.MBeanNotificationInfo[]) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo MBeanInfo(java.lang.String, java.lang.String, javax.management.MBeanAttributeInfo[], javax.management.MBeanConstructorInfo[], javax.management.MBeanOperationInfo[], javax.management.MBeanNotificationInfo[], javax.management.Descriptor) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo MBeanInfo(java.lang.String, java.lang.String, javax.management.MBeanAttributeInfo[], javax.management.MBeanConstructorInfo[], javax.management.MBeanOperationInfo[], javax.management.MBeanNotificationInfo[], javax.management.Descriptor) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo MBeanInfo(java.lang.String, java.lang.String, javax.management.MBeanAttributeInfo[], javax.management.MBeanConstructorInfo[], javax.management.MBeanOperationInfo[], javax.management.MBeanNotificationInfo[], javax.management.Descriptor) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo MBeanInfo(java.lang.String, java.lang.String, javax.management.MBeanAttributeInfo[], javax.management.MBeanConstructorInfo[], javax.management.MBeanOperationInfo[], javax.management.MBeanNotificationInfo[], javax.management.Descriptor) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo MBeanInfo(java.lang.String, java.lang.String, javax.management.MBeanAttributeInfo[], javax.management.MBeanConstructorInfo[], javax.management.MBeanOperationInfo[], javax.management.MBeanNotificationInfo[], javax.management.Descriptor) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo boolean isEqual(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo boolean isEqual(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo boolean isEqual(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanInfo int arrayHashCode(java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanInfo java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanInfo java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanInfo java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanInfo java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanInfo javax.management.MBeanAttributeInfo[] nonNullAttributes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanInfo javax.management.MBeanConstructorInfo[] nonNullConstructors()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanInfo javax.management.MBeanNotificationInfo[] nonNullNotifications()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanInfo javax.management.MBeanOperationInfo[] nonNullOperations()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanInfo void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanInfo void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanNotificationInfo MBeanNotificationInfo(java.lang.String[], java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanNotificationInfo MBeanNotificationInfo(java.lang.String[], java.lang.String, java.lang.String, javax.management.Descriptor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanNotificationInfo boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanNotificationInfo java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanNotificationInfo java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanNotificationInfo void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanOperationInfo MBeanOperationInfo(java.lang.String, java.lang.String, javax.management.MBeanParameterInfo[], java.lang.String, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanOperationInfo MBeanOperationInfo(java.lang.String, java.lang.String, javax.management.MBeanParameterInfo[], java.lang.String, int, javax.management.Descriptor) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanOperationInfo MBeanOperationInfo(java.lang.String, java.lang.reflect.Method) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanOperationInfo boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanOperationInfo int getImpact()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanOperationInfo java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanOperationInfo java.lang.String getReturnType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanOperationInfo java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanOperationInfo javax.management.MBeanParameterInfo[] methodSignature(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanOperationInfo javax.management.MBeanParameterInfo[] methodSignature(java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanOperationInfo javax.management.MBeanParameterInfo[] parameters(java.lang.Class&lt;?&gt;[], java.lang.annotation.Annotation[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanOperationInfo javax.management.MBeanParameterInfo[] parameters(java.lang.Class&lt;?&gt;[], java.lang.annotation.Annotation[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanParameterInfo boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanParameterInfo java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanParameterInfo java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanParameterInfo java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanPermission MBeanPermission(java.lang.String, java.lang.String, javax.management.ObjectName, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanPermission MBeanPermission(java.lang.String, java.lang.String, javax.management.ObjectName, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanPermission boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanPermission boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanPermission boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanPermission int getMask(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanPermission java.lang.String getActions(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanPermission java.lang.String makeName(java.lang.String, java.lang.String, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanPermission java.lang.String makeName(java.lang.String, java.lang.String, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanPermission java.lang.String makeName(java.lang.String, java.lang.String, javax.management.ObjectName) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanPermission java.lang.String makeName(java.lang.String, java.lang.String, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanPermission void initName(java.lang.String, java.lang.String, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanPermission void initName(java.lang.String, java.lang.String, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanPermission void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanPermission void setClassName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanPermission void setMember(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerBuilder MBeanServerBuilder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerBuilder javax.management.MBeanServer newMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerBuilder javax.management.MBeanServer newMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerBuilder javax.management.MBeanServer newMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerBuilder javax.management.MBeanServer newMBeanServer(java.lang.String, javax.management.MBeanServer, javax.management.MBeanServerDelegate)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerBuilder javax.management.MBeanServerDelegate newMBeanServerDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerDelegate java.lang.String getImplementationName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerDelegate java.lang.String getImplementationVendor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerDelegate java.lang.String getSpecificationName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerDelegate java.lang.String getSpecificationVendor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerDelegate java.lang.String getSpecificationVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerDelegate javax.management.MBeanNotificationInfo[] getNotificationInfo()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerDelegate void sendNotification(javax.management.Notification) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerFactory MBeanServerFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerFactory java.lang.String mBeanServerId(javax.management.MBeanServer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerFactory java.util.ArrayList&lt;javax.management.MBeanServer&gt; findMBeanServer(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerFactory java.util.ArrayList&lt;javax.management.MBeanServer&gt; findMBeanServer(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerFactory javax.management.MBeanServerBuilder newBuilder(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerFactory javax.management.loading.ClassLoaderRepository getClassLoaderRepository(javax.management.MBeanServer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler MBeanServerInvocationHandler(javax.management.MBeanServerConnection, javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler MBeanServerInvocationHandler(javax.management.MBeanServerConnection, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler MBeanServerInvocationHandler(javax.management.MBeanServerConnection, javax.management.ObjectName, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler MBeanServerInvocationHandler(javax.management.MBeanServerConnection, javax.management.ObjectName, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler T newProxyInstance(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler T newProxyInstance(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler T newProxyInstance(javax.management.MBeanServerConnection, javax.management.ObjectName, java.lang.Class&lt;T&gt;, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler boolean isLocal(java.lang.Object, java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler boolean isLocal(java.lang.Object, java.lang.reflect.Method)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler boolean isMXBean()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler boolean shouldDoLocally(java.lang.Object, java.lang.reflect.Method) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler java.lang.Object doLocally(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler java.lang.Object invokeBroadcasterMethod(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler java.lang.Object invokeBroadcasterMethod(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler java.lang.Object invokeBroadcasterMethod(java.lang.Object, java.lang.reflect.Method, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler javax.management.MBeanServerConnection getMBeanServerConnection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerInvocationHandler javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerNotification MBeanServerNotification(java.lang.String, java.lang.Object, long, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerNotification java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerNotification javax.management.ObjectName getMBeanName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerPermission MBeanServerPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerPermission MBeanServerPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerPermission MBeanServerPermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerPermission boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerPermission boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerPermission boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerPermission boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerPermission int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerPermission int impliedMask(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerPermission int nameIndex(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.MBeanServerPermission int parseMask(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerPermission int simplifyMask(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerPermission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerPermission void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerPermissionCollection MBeanServerPermissionCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MBeanServerPermissionCollection java.util.Enumeration&lt;java.security.Permission&gt; elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanServerPermissionCollection void add(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanTrustPermission MBeanTrustPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanTrustPermission MBeanTrustPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanTrustPermission void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MBeanTrustPermission void validate(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MatchQueryExp MatchQueryExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MatchQueryExp MatchQueryExp(javax.management.AttributeValueExp, javax.management.StringValueExp) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MatchQueryExp boolean wildmatch(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MatchQueryExp boolean wildmatch(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MatchQueryExp java.lang.String getPattern()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.MatchQueryExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.MatchQueryExp javax.management.AttributeValueExp getAttribute()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.NotQueryExp NotQueryExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.NotQueryExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.NotQueryExp javax.management.QueryExp getNegatedExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.Notification Notification(java.lang.String, java.lang.Object, long) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Notification Notification(java.lang.String, java.lang.Object, long, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Notification Notification(java.lang.String, java.lang.Object, long, long) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Notification Notification(java.lang.String, java.lang.Object, long, long, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Notification java.lang.Object getUserData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.Notification java.lang.String getMessage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.Notification java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.Notification java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Notification long getSequenceNumber()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.Notification long getTimeStamp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.Notification void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Notification void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport NotificationBroadcasterSupport(java.util.concurrent.Executor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport NotificationBroadcasterSupport(java.util.concurrent.Executor, javax.management.MBeanNotificationInfo...) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport NotificationBroadcasterSupport(java.util.concurrent.Executor, javax.management.MBeanNotificationInfo...) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport NotificationBroadcasterSupport(javax.management.MBeanNotificationInfo...) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport com.sun.jmx.remote.util.ClassLogger access$000()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport void addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport void handleNotification(javax.management.NotificationListener, javax.management.Notification, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport void sendNotification(javax.management.Notification) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport.1 void execute(java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport.ListenerInfo boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport.ListenerInfo boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.NotificationBroadcasterSupport.WildcardListenerInfo boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.NotificationFilterSupport boolean isNotificationEnabled(javax.management.Notification) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.NotificationFilterSupport java.util.Vector&lt;java.lang.String&gt; getEnabledTypes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.NotificationFilterSupport void enableType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.NumericValueExp boolean isLong()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.NumericValueExp javax.management.ValueExp apply(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.NumericValueExp javax.management.ValueExp apply(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.NumericValueExp void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.NumericValueExp void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectInstance ObjectInstance(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectInstance ObjectInstance(javax.management.ObjectName, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectInstance boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.ObjectInstance boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.ObjectInstance java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ObjectInstance java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectInstance javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ObjectName ObjectName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName ObjectName(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName ObjectName(java.lang.String, java.util.Hashtable&lt;java.lang.String,java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName ObjectName(java.lang.String, java.util.Hashtable&lt;java.lang.String,java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName boolean apply(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName boolean checkValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.ObjectName boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ObjectName boolean isDomain(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.ObjectName boolean isDomain(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.ObjectName boolean isDomainPattern()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ObjectName boolean isPattern()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ObjectName boolean isPropertyListPattern()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ObjectName boolean isPropertyPattern()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ObjectName boolean isPropertyValuePattern()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ObjectName boolean isPropertyValuePattern(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName boolean matchDomains(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName boolean matchKeys(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName int parseKey(char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName int[] parseValue(char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName int[] parseValue(char[], int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName java.lang.String getCanonicalKeyPropertyListString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName java.lang.String getCanonicalName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ObjectName java.lang.String getDomain()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName java.lang.String getKeyPropertyListString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName java.lang.String getSerializedNameString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName java.lang.String quote(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName java.lang.String quote(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName java.lang.String unquote(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName java.lang.String unquote(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName java.util.Hashtable&lt;java.lang.String,java.lang.String&gt; getKeyPropertyList()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName javax.management.ObjectName getInstance(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName javax.management.ObjectName getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName javax.management.ObjectName getInstance(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName javax.management.ObjectName getInstance(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName javax.management.ObjectName getInstance(java.lang.String, java.util.Hashtable&lt;java.lang.String,java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName javax.management.ObjectName getInstance(java.lang.String, java.util.Hashtable&lt;java.lang.String,java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName javax.management.ObjectName getInstance(java.lang.String, java.util.Hashtable&lt;java.lang.String,java.lang.String&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName javax.management.ObjectName getInstance(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName javax.management.ObjectName getInstance(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName void addProperty(javax.management.ObjectName.Property, int, java.util.Map&lt;java.lang.String,javax.management.ObjectName.Property&gt;, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName void checkKey(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName void construct(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName void construct(java.lang.String, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName void construct(java.lang.String, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName void setCanonicalName(char[], char[], java.lang.String[], java.util.Map&lt;java.lang.String,javax.management.ObjectName.Property&gt;, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName void setMBeanServer(javax.management.MBeanServer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.ObjectName void setMBeanServer(javax.management.MBeanServer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ObjectName void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName.Property java.lang.String getKeyString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName.Property java.lang.String getKeyString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName.Property java.lang.String getValueString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.ObjectName.Property java.lang.String getValueString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.OrQueryExp OrQueryExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.OrQueryExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.OrQueryExp javax.management.QueryExp getLeftExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.OrQueryExp javax.management.QueryExp getRightExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.QualifiedAttributeValueExp QualifiedAttributeValueExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.QualifiedAttributeValueExp java.lang.String getAttrClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.QualifiedAttributeValueExp javax.management.ValueExp apply(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query Query()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.Query java.lang.String escapeString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.Query java.lang.String escapeString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.Query javax.management.AttributeValueExp attr(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.AttributeValueExp attr(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.AttributeValueExp classattr()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp and(javax.management.QueryExp, javax.management.QueryExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp anySubString(javax.management.AttributeValueExp, javax.management.StringValueExp) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp anySubString(javax.management.AttributeValueExp, javax.management.StringValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp between(javax.management.ValueExp, javax.management.ValueExp, javax.management.ValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp eq(javax.management.ValueExp, javax.management.ValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp finalSubString(javax.management.AttributeValueExp, javax.management.StringValueExp) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp finalSubString(javax.management.AttributeValueExp, javax.management.StringValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp geq(javax.management.ValueExp, javax.management.ValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp gt(javax.management.ValueExp, javax.management.ValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp in(javax.management.ValueExp, javax.management.ValueExp[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp initialSubString(javax.management.AttributeValueExp, javax.management.StringValueExp) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp initialSubString(javax.management.AttributeValueExp, javax.management.StringValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp isInstanceOf(javax.management.StringValueExp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp isInstanceOf(javax.management.StringValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp leq(javax.management.ValueExp, javax.management.ValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp lt(javax.management.ValueExp, javax.management.ValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp match(javax.management.AttributeValueExp, javax.management.StringValueExp) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp match(javax.management.AttributeValueExp, javax.management.StringValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp not(javax.management.QueryExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.QueryExp or(javax.management.QueryExp, javax.management.QueryExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.StringValueExp value(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.ValueExp div(javax.management.ValueExp, javax.management.ValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.ValueExp minus(javax.management.ValueExp, javax.management.ValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.ValueExp plus(javax.management.ValueExp, javax.management.ValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.ValueExp times(javax.management.ValueExp, javax.management.ValueExp)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.ValueExp value(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.ValueExp value(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.ValueExp value(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.ValueExp value(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.ValueExp value(java.lang.Number)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.Query javax.management.ValueExp value(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.QueryEval QueryEval()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ReflectionException java.lang.Exception getTargetException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.ReflectionException java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.RuntimeErrorException java.lang.Error getTargetError()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.RuntimeErrorException java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.RuntimeMBeanException java.lang.RuntimeException getTargetException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.RuntimeMBeanException java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.RuntimeOperationsException java.lang.RuntimeException getTargetException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.RuntimeOperationsException java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.StandardEmitterMBean StandardEmitterMBean(T, java.lang.Class&lt;T&gt;, boolean, javax.management.NotificationEmitter) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardEmitterMBean StandardEmitterMBean(T, java.lang.Class&lt;T&gt;, boolean, javax.management.NotificationEmitter) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardEmitterMBean StandardEmitterMBean(T, java.lang.Class&lt;T&gt;, javax.management.NotificationEmitter) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardEmitterMBean StandardEmitterMBean(T, java.lang.Class&lt;T&gt;, javax.management.NotificationEmitter) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardEmitterMBean StandardEmitterMBean(java.lang.Class&lt;?&gt;, boolean, javax.management.NotificationEmitter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardEmitterMBean StandardEmitterMBean(java.lang.Class&lt;?&gt;, boolean, javax.management.NotificationEmitter) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardEmitterMBean StandardEmitterMBean(java.lang.Class&lt;?&gt;, javax.management.NotificationEmitter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardEmitterMBean StandardEmitterMBean(java.lang.Class&lt;?&gt;, javax.management.NotificationEmitter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardEmitterMBean javax.management.MBeanNotificationInfo[] getNotifications(javax.management.MBeanInfo) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean StandardMBean(T, java.lang.Class&lt;T&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean StandardMBean(T, java.lang.Class&lt;T&gt;, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean StandardMBean(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean StandardMBean(java.lang.Class&lt;?&gt;, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean boolean equal(T, T) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean boolean equal(T, T) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean boolean identicalArrays(T[], T[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean boolean identicalArrays(T[], T[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean boolean identicalArrays(T[], T[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.StandardMBean boolean overrides(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;...) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean boolean overrides(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;...) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean boolean overrides(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.StandardMBean int getImpact(javax.management.MBeanOperationInfo) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.Class&lt;?&gt; getMBeanInterface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.StandardMBean java.lang.Object getImplementation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getClassName(javax.management.MBeanInfo) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanAttributeInfo)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanConstructorInfo)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanConstructorInfo, javax.management.MBeanParameterInfo, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanConstructorInfo, javax.management.MBeanParameterInfo, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanConstructorInfo, javax.management.MBeanParameterInfo, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanFeatureInfo) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanFeatureInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanInfo) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanOperationInfo)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanOperationInfo, javax.management.MBeanParameterInfo, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanOperationInfo, javax.management.MBeanParameterInfo, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getDescription(javax.management.MBeanOperationInfo, javax.management.MBeanParameterInfo, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getParameterName(javax.management.MBeanConstructorInfo, javax.management.MBeanParameterInfo, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getParameterName(javax.management.MBeanConstructorInfo, javax.management.MBeanParameterInfo, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getParameterName(javax.management.MBeanConstructorInfo, javax.management.MBeanParameterInfo, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getParameterName(javax.management.MBeanOperationInfo, javax.management.MBeanParameterInfo, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getParameterName(javax.management.MBeanOperationInfo, javax.management.MBeanParameterInfo, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean java.lang.String getParameterName(javax.management.MBeanOperationInfo, javax.management.MBeanParameterInfo, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.AttributeList getAttributes(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.AttributeList getAttributes(java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.AttributeList setAttributes(javax.management.AttributeList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.AttributeList setAttributes(javax.management.AttributeList)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.Descriptor getDescriptor(javax.management.MBeanInfo, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanAttributeInfo customize(javax.management.MBeanAttributeInfo, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanAttributeInfo customize(javax.management.MBeanAttributeInfo, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanAttributeInfo[] getAttributes(javax.management.MBeanInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanAttributeInfo[] getAttributes(javax.management.MBeanInfo)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanConstructorInfo customize(javax.management.MBeanConstructorInfo, java.lang.String, javax.management.MBeanParameterInfo[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanConstructorInfo customize(javax.management.MBeanConstructorInfo, java.lang.String, javax.management.MBeanParameterInfo[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanConstructorInfo[] getConstructors(javax.management.MBeanConstructorInfo[], java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanConstructorInfo[] getConstructors(javax.management.MBeanConstructorInfo[], java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanConstructorInfo[] getConstructors(javax.management.MBeanConstructorInfo[], java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null,_-&gt;null&quot;,pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanConstructorInfo[] getConstructors(javax.management.MBeanInfo, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanConstructorInfo[] getConstructors(javax.management.MBeanInfo, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanInfo getCachedMBeanInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanInfo getMBeanInfo()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanNotificationInfo[] getNotifications(javax.management.MBeanInfo) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanNotificationInfo[] getNotifications(javax.management.MBeanInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;null;null-&gt;null&quot;,pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanOperationInfo customize(javax.management.MBeanOperationInfo, java.lang.String, javax.management.MBeanParameterInfo[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanOperationInfo customize(javax.management.MBeanOperationInfo, java.lang.String, javax.management.MBeanParameterInfo[], int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanOperationInfo[] getOperations(javax.management.MBeanInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanOperationInfo[] getOperations(javax.management.MBeanInfo)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanParameterInfo customize(javax.management.MBeanParameterInfo, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.MBeanParameterInfo customize(javax.management.MBeanParameterInfo, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.StandardMBean javax.management.openmbean.OpenMBeanParameterInfo[] paramsToOpenParams(javax.management.MBeanParameterInfo[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean javax.management.openmbean.OpenMBeanParameterInfo[] paramsToOpenParams(javax.management.MBeanParameterInfo[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.management.StandardMBean void construct(T, java.lang.Class&lt;T&gt;, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StandardMBean void postRegister(java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean void preDeregister()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.StandardMBean void setAttribute(javax.management.Attribute) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StandardMBean void setImplementation(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StringValueExp StringValueExp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.StringValueExp java.lang.String getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.management.StringValueExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StringValueExp javax.management.ValueExp apply(javax.management.ObjectName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StringValueExp javax.management.ValueExp apply(javax.management.ObjectName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.management.StringValueExp void setMBeanServer(javax.management.MBeanServer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.management.StringValueExp void setMBeanServer(javax.management.MBeanServer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
</root>
