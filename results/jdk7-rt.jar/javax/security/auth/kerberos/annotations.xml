<root>
  <item name="javax.security.auth.kerberos.DelegationPermission DelegationPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.DelegationPermission DelegationPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.DelegationPermission DelegationPermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.DelegationPermission boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.DelegationPermission boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.DelegationPermission boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.DelegationPermission boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.DelegationPermission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.DelegationPermission void init(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.DelegationPermission void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.DelegationPermission void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.JavaxSecurityAuthKerberosAccessImpl JavaxSecurityAuthKerberosAccessImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.JavaxSecurityAuthKerberosAccessImpl sun.security.krb5.EncryptionKey[] keyTabGetEncryptionKeys(javax.security.auth.kerberos.KeyTab, sun.security.krb5.PrincipalName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey KerberosKey(javax.security.auth.kerberos.KerberosPrincipal, byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey KerberosKey(javax.security.auth.kerberos.KerberosPrincipal, char[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey KerberosKey(javax.security.auth.kerberos.KerberosPrincipal, char[], java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey KerberosKey(javax.security.auth.kerberos.KerberosPrincipal, char[], java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey boolean isDestroyed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey java.lang.String getFormat()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosKey java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal KerberosPrincipal(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal KerberosPrincipal(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal int getNameType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal java.lang.String getRealm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosPrincipal void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket KerberosTicket(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket KerberosTicket(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 10">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket KerberosTicket(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket KerberosTicket(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket KerberosTicket(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket KerberosTicket(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 8">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isDestroyed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isForwardable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isForwarded()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isInitial()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isPostdated()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isProxiable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isProxy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean isRenewable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket boolean[] getFlags()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket java.net.InetAddress[] getClientAddresses()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket java.util.Date getAuthTime()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket java.util.Date getRenewTill()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket java.util.Date getStartTime()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket javax.security.auth.kerberos.KerberosPrincipal getClient()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket javax.security.auth.kerberos.KerberosPrincipal getServer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket void init(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket void init(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 10">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket void init(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket void init(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket void init(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket void init(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, byte[], int, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 8">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket void init(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KeyImpl, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket void init(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KeyImpl, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket void init(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KeyImpl, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket void init(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KeyImpl, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket void init(byte[], javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KerberosPrincipal, javax.security.auth.kerberos.KeyImpl, boolean[], java.util.Date, java.util.Date, java.util.Date, java.util.Date, java.net.InetAddress[]) 9">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KerberosTicket void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl KeyImpl(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl KeyImpl(javax.security.auth.kerberos.KerberosPrincipal, char[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl KeyImpl(javax.security.auth.kerberos.KerberosPrincipal, char[], java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl KeyImpl(javax.security.auth.kerberos.KerberosPrincipal, char[], java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl boolean isDestroyed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl java.lang.String getAlgorithmName(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl java.lang.String getFormat()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyImpl void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyTab boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyTab javax.security.auth.kerberos.KerberosKey[] getKeys(javax.security.auth.kerberos.KerberosPrincipal)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyTab javax.security.auth.kerberos.KeyTab getInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyTab javax.security.auth.kerberos.KeyTab getInstance(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KeyTab javax.security.auth.kerberos.KeyTab getInstance(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KrbDelegationPermissionCollection boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KrbDelegationPermissionCollection boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KrbDelegationPermissionCollection java.util.Enumeration&lt;java.security.Permission&gt; elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KrbDelegationPermissionCollection void add(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KrbDelegationPermissionCollection void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KrbDelegationPermissionCollection void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KrbServicePermissionCollection boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.KrbServicePermissionCollection boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.KrbServicePermissionCollection java.util.Enumeration&lt;java.security.Permission&gt; elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KrbServicePermissionCollection void add(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KrbServicePermissionCollection void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.KrbServicePermissionCollection void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission ServicePermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission ServicePermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission int getMask()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission int getMask(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission java.lang.String getActions(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission void init(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.security.auth.kerberos.ServicePermission void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
