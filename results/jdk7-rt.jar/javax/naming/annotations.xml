<root>
  <item name="javax.naming.BinaryRefAddr BinaryRefAddr(java.lang.String, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.BinaryRefAddr boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.BinaryRefAddr boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.BinaryRefAddr java.lang.Object getContent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.BinaryRefAddr java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.Binding Binding(java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.Binding Binding(java.lang.String, java.lang.Object, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.Binding Binding(java.lang.String, java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.Binding Binding(java.lang.String, java.lang.String, java.lang.Object, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.Binding java.lang.Object getObject()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.Binding java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.Binding void setObject(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.CannotProceedException java.util.Hashtable&lt;?,?&gt; getEnvironment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.CannotProceedException javax.naming.Context getAltNameCtx()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.CannotProceedException javax.naming.Name getAltName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.CannotProceedException javax.naming.Name getRemainingNewName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.CannotProceedException void setAltName(javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.CannotProceedException void setAltNameCtx(javax.naming.Context)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.CannotProceedException void setEnvironment(java.util.Hashtable&lt;?,?&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.CannotProceedException void setRemainingNewName(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.CompositeName CompositeName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName CompositeName(java.util.Enumeration&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName boolean endsWith(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.CompositeName boolean endsWith(javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.CompositeName boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.CompositeName boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.CompositeName boolean startsWith(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.CompositeName boolean startsWith(javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.CompositeName int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName javax.naming.Name add(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName javax.naming.Name add(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName javax.naming.Name addAll(int, javax.naming.Name) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName javax.naming.Name addAll(int, javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName javax.naming.Name addAll(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName javax.naming.Name addAll(javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName javax.naming.Name getPrefix(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName javax.naming.Name getSuffix(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompositeName void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName CompoundName(java.lang.String, java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName CompoundName(java.lang.String, java.util.Properties) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName CompoundName(java.util.Enumeration&lt;java.lang.String&gt;, java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName CompoundName(java.util.Enumeration&lt;java.lang.String&gt;, java.util.Properties) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName boolean endsWith(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.CompoundName boolean endsWith(javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.CompoundName boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.CompoundName boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.CompoundName boolean startsWith(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.CompoundName boolean startsWith(javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.CompoundName int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName javax.naming.Name add(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName javax.naming.Name add(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName javax.naming.Name addAll(int, javax.naming.Name) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName javax.naming.Name addAll(int, javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName javax.naming.Name addAll(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName javax.naming.Name addAll(javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName javax.naming.Name getPrefix(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName javax.naming.Name getSuffix(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.CompoundName void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.InitialContext java.lang.String composeName(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.InitialContext java.lang.String composeName(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.InitialContext java.lang.String getURLScheme(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.InitialContext javax.naming.Name composeName(javax.naming.Name, javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.InitialContext javax.naming.Name composeName(javax.naming.Name, javax.naming.Name) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.InitialContext void init(java.util.Hashtable&lt;?,?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.LinkException java.lang.Object getLinkResolvedObj()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.LinkException java.lang.String getLinkExplanation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.LinkException java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.LinkException javax.naming.Name getLinkRemainingName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.LinkException javax.naming.Name getLinkResolvedName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.LinkException void setLinkExplanation(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.LinkException void setLinkRemainingName(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.LinkException void setLinkResolvedName(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.LinkException void setLinkResolvedObj(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.LinkRef LinkRef(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameClassPair NameClassPair(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.NameClassPair NameClassPair(java.lang.String, java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.NameClassPair boolean isRelative()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.NameClassPair java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.NameClassPair java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.NameClassPair java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameClassPair void setClassName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.NameClassPair void setName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.NameClassPair void setNameInNamespace(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.NameClassPair void setRelative(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.NameImpl NameImpl(java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.NameImpl NameImpl(java.util.Properties, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.NameImpl NameImpl(java.util.Properties, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameImpl NameImpl(java.util.Properties, java.util.Enumeration) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.NameImpl NameImpl(java.util.Properties, java.util.Enumeration) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameImpl boolean addAll(int, java.util.Enumeration) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameImpl boolean addAll(java.util.Enumeration) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameImpl boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.NameImpl boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.NameImpl boolean getBoolean(java.util.Properties, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameImpl boolean isA(java.lang.String, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.NameImpl boolean isA(java.lang.String, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null-&gt;false;null,_,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.NameImpl boolean isMeta(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.NameImpl boolean isSeparator(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.NameImpl boolean toBoolean(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.NameImpl boolean toBoolean(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.NameImpl int extractComp(java.lang.String, int, int, java.util.Vector) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameImpl int skipSeparator(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.NameImpl java.lang.String stringifyComp(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameImpl java.lang.String stringifyComp(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameImpl java.util.Enumeration getPrefix(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameImpl java.util.Enumeration getSuffix(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameImpl void recordNamingConvention(java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NameImplEnumerator NameImplEnumerator(java.util.Vector, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.NameImplEnumerator boolean hasMoreElements()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.NamingException java.lang.Object getResolvedObj()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.NamingException java.lang.Throwable getRootCause()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.NamingException java.lang.Throwable initCause(java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.NamingException javax.naming.Name getRemainingName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.NamingException javax.naming.Name getResolvedName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.NamingException void appendRemainingComponent(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.NamingException void appendRemainingName(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.NamingException void setRemainingName(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.NamingException void setResolvedName(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.NamingException void setResolvedObj(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.NamingException void setRootCause(java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.RefAddr RefAddr(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.RefAddr boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.RefAddr boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.RefAddr java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.RefAddr java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.Reference boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.Reference boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.Reference java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.Reference java.lang.String getFactoryClassLocation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.Reference java.lang.String getFactoryClassName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.Reference java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.StringRefAddr StringRefAddr(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.StringRefAddr java.lang.Object getContent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
</root>
