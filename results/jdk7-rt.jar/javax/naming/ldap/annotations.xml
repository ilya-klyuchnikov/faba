<root>
  <item name="javax.naming.ldap.BasicControl BasicControl(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.BasicControl BasicControl(java.lang.String, boolean, byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.BasicControl boolean isCritical()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.BasicControl byte[] getEncodedValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.BasicControl java.lang.String getID()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.ControlFactory ControlFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.ControlFactory javax.naming.ldap.Control getControlInstance(javax.naming.ldap.Control, javax.naming.Context, java.util.Hashtable&lt;?,?&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.ControlFactory javax.naming.ldap.Control getControlInstance(javax.naming.ldap.Control, javax.naming.Context, java.util.Hashtable&lt;?,?&gt;) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.InitialLdapContext InitialLdapContext(java.util.Hashtable&lt;?,?&gt;, javax.naming.ldap.Control[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.InitialLdapContext InitialLdapContext(java.util.Hashtable&lt;?,?&gt;, javax.naming.ldap.Control[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.LdapName LdapName(java.lang.String, java.util.ArrayList, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName LdapName(java.util.List&lt;javax.naming.ldap.Rdn&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName boolean doesListMatch(int, int, java.util.List)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.ldap.LdapName boolean endsWith(java.util.List&lt;javax.naming.ldap.Rdn&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.LdapName boolean endsWith(java.util.List&lt;javax.naming.ldap.Rdn&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.ldap.LdapName boolean endsWith(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.LdapName boolean endsWith(javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.ldap.LdapName boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.LdapName boolean matches(int, int, javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.ldap.LdapName boolean startsWith(java.util.List&lt;javax.naming.ldap.Rdn&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.LdapName boolean startsWith(java.util.List&lt;javax.naming.ldap.Rdn&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.ldap.LdapName boolean startsWith(javax.naming.Name) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.LdapName boolean startsWith(javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.ldap.LdapName int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName java.util.Enumeration&lt;java.lang.String&gt; getAll()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName java.util.List&lt;javax.naming.ldap.Rdn&gt; getRdns()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName javax.naming.Name add(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName javax.naming.Name add(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName javax.naming.Name add(int, javax.naming.ldap.Rdn) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName javax.naming.Name add(int, javax.naming.ldap.Rdn)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName javax.naming.Name addAll(int, java.util.List&lt;javax.naming.ldap.Rdn&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName javax.naming.Name addAll(int, java.util.List&lt;javax.naming.ldap.Rdn&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName javax.naming.Name addAll(int, javax.naming.Name) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName javax.naming.Name addAll(int, javax.naming.Name)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName javax.naming.Name getPrefix(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName javax.naming.Name getSuffix(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.LdapName.1 1(javax.naming.ldap.LdapName, java.util.Iterator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.ManageReferralControl ManageReferralControl()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.ManageReferralControl ManageReferralControl(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.PagedResultsControl PagedResultsControl(int, byte[], boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.PagedResultsControl byte[] setEncodedValue(int, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.PagedResultsControl byte[] setEncodedValue(int, byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.PagedResultsResponseControl PagedResultsResponseControl(java.lang.String, boolean, byte[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.PagedResultsResponseControl byte[] getCookie()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.PagedResultsResponseControl int getResultSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.Rdn Rdn(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn Rdn(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn Rdn(java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn Rdn(javax.naming.directory.Attributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn Rdn(javax.naming.ldap.Rdn) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.Rdn boolean isEmptyValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.Rdn boolean isEmptyValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.ldap.Rdn boolean isWhitespace(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.Rdn int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn java.lang.Object unescapeValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn java.lang.String access$300(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn java.lang.String access$300(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn java.lang.String escapeBinaryValue(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn java.lang.String escapeBinaryValue(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn java.lang.String escapeStringValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn java.lang.String escapeStringValue(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn java.lang.String escapeValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn java.lang.String escapeValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn javax.naming.ldap.Rdn put(java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn.RdnEntry RdnEntry()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.Rdn.RdnEntry RdnEntry(javax.naming.ldap.Rdn.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.Rdn.RdnEntry RdnEntry(javax.naming.ldap.Rdn.1)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.Rdn.RdnEntry boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.Rdn.RdnEntry int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn.RdnEntry java.lang.Object access$202(javax.naming.ldap.Rdn.RdnEntry, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn.RdnEntry java.lang.Object access$202(javax.naming.ldap.Rdn.RdnEntry, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.ldap.Rdn.RdnEntry java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.Rdn.RdnEntry java.lang.String access$102(javax.naming.ldap.Rdn.RdnEntry, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rdn.RdnEntry java.lang.String access$102(javax.naming.ldap.Rdn.RdnEntry, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.ldap.Rdn.RdnEntry java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.Rdn.RdnEntry java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser Rfc2253Parser(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser Rfc2253Parser(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser boolean atTerminator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser boolean isWhitespace(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser java.lang.String parseAttrType()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser java.lang.String parseAttrValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser java.lang.String parseBinaryAttrValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser java.lang.String parseQuotedAttrValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser java.lang.String parseStringAttrValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser javax.naming.ldap.Rdn doParse(javax.naming.ldap.Rdn) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser javax.naming.ldap.Rdn doParse(javax.naming.ldap.Rdn)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser javax.naming.ldap.Rdn parseRdn(javax.naming.ldap.Rdn) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser javax.naming.ldap.Rdn parseRdn(javax.naming.ldap.Rdn)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.naming.ldap.Rfc2253Parser void consumeWhitespace()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.SortControl SortControl(java.lang.String[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.SortControl SortControl(javax.naming.ldap.SortKey[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.SortControl byte[] setEncodedValue(javax.naming.ldap.SortKey[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.SortControl byte[] setEncodedValue(javax.naming.ldap.SortKey[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.SortKey SortKey(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.SortKey SortKey(java.lang.String, boolean, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.SortKey boolean isAscending()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.SortKey java.lang.String getAttributeID()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.SortKey java.lang.String getMatchingRuleID()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.SortResponseControl SortResponseControl(java.lang.String, boolean, byte[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.SortResponseControl boolean isSorted()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.SortResponseControl int getResultCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.SortResponseControl java.lang.String getAttributeID()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.StartTlsRequest StartTlsRequest()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.StartTlsRequest byte[] getEncodedValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.StartTlsRequest java.lang.String getID()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.StartTlsRequest javax.naming.ConfigurationException wrapException(java.lang.Exception)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.StartTlsRequest javax.naming.ldap.ExtendedResponse createExtendedResponse(java.lang.String, byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.naming.ldap.StartTlsRequest.1 1(javax.naming.ldap.StartTlsRequest)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.StartTlsRequest.2 2(java.util.Iterator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.naming.ldap.StartTlsResponse StartTlsResponse()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.StartTlsResponse byte[] getEncodedValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.StartTlsResponse java.lang.String getID()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.UnsolicitedNotificationEvent UnsolicitedNotificationEvent(java.lang.Object, javax.naming.ldap.UnsolicitedNotification) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.naming.ldap.UnsolicitedNotificationEvent javax.naming.ldap.UnsolicitedNotification getNotification()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.naming.ldap.UnsolicitedNotificationEvent void dispatch(javax.naming.ldap.UnsolicitedNotificationListener) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
