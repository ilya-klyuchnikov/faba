<root>
  <item name="javax.swing.text.html.AccessibleHTML java.awt.Rectangle access$1600(javax.swing.text.html.AccessibleHTML) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML java.lang.Object access$1300(javax.swing.text.html.AccessibleHTML) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.JEditorPane access$300(javax.swing.text.html.AccessibleHTML) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.JEditorPane access$300(javax.swing.text.html.AccessibleHTML)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.JEditorPane access$400(javax.swing.text.html.AccessibleHTML) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.JEditorPane access$400(javax.swing.text.html.AccessibleHTML)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.JEditorPane getTextComponent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.text.Document access$200(javax.swing.text.html.AccessibleHTML) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.text.Document access$200(javax.swing.text.html.AccessibleHTML)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.text.Document getDocument()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.text.View access$1400(javax.swing.text.html.AccessibleHTML) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.text.html.AccessibleHTML.ElementInfo access$1700(javax.swing.text.html.AccessibleHTML) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.text.html.AccessibleHTML.ElementInfo access$1700(javax.swing.text.html.AccessibleHTML)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.text.html.AccessibleHTML.ElementInfo access$500(javax.swing.text.html.AccessibleHTML) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.text.html.AccessibleHTML.ElementInfo access$500(javax.swing.text.html.AccessibleHTML)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.text.html.AccessibleHTML.ElementInfo createElementInfo(javax.swing.text.Element, javax.swing.text.html.AccessibleHTML.ElementInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML javax.swing.text.html.AccessibleHTML.ElementInfo getRootInfo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML void access$1500(javax.swing.text.html.AccessibleHTML, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML void access$1500(javax.swing.text.html.AccessibleHTML, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML void access$1900(javax.swing.text.html.AccessibleHTML, javax.swing.text.Document) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML void unlock(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.DocumentHandler DocumentHandler(javax.swing.text.html.AccessibleHTML, javax.swing.text.html.AccessibleHTML.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.ElementInfo boolean isValid()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.ElementInfo int getIntAttr(javax.swing.text.AttributeSet, java.lang.Object, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.ElementInfo javax.swing.text.Element getElement()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.ElementInfo javax.swing.text.View getView(javax.swing.text.View, javax.swing.text.Element, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.ElementInfo javax.swing.text.html.AccessibleHTML.ElementInfo getParent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.ElementInfo void access$1800(javax.swing.text.html.AccessibleHTML.ElementInfo, javax.swing.event.DocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.ElementInfo void loadChildren(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext boolean contains(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext javax.accessibility.AccessibleComponent getAccessibleComponent()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext javax.accessibility.AccessibleStateSet getAccessibleStateSet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext javax.swing.text.html.AccessibleHTML.ElementInfo getElementInfoAt(javax.swing.text.html.AccessibleHTML.ElementInfo, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext void setBounds(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext void setBounds(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext void setLocation(java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.HTMLAccessibleContext void setLocation(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo int access$700(javax.swing.text.html.AccessibleHTML.IconElementInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo int access$700(javax.swing.text.html.AccessibleHTML.IconElementInfo)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo int access$702(javax.swing.text.html.AccessibleHTML.IconElementInfo, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo int access$800(javax.swing.text.html.AccessibleHTML.IconElementInfo, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo int access$900(javax.swing.text.html.AccessibleHTML.IconElementInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo int access$900(javax.swing.text.html.AccessibleHTML.IconElementInfo)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo int access$902(javax.swing.text.html.AccessibleHTML.IconElementInfo, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo.IconAccessibleContext IconAccessibleContext(javax.swing.text.html.AccessibleHTML.IconElementInfo, javax.swing.text.html.AccessibleHTML.ElementInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo.IconAccessibleContext javax.accessibility.AccessibleIcon[] getAccessibleIcon()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo.IconAccessibleContext javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo.IconAccessibleContext void setAccessibleIconDescription(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.IconElementInfo.IconAccessibleContext void setAccessibleIconDescription(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.PropertyChangeHandler PropertyChangeHandler(javax.swing.text.html.AccessibleHTML, javax.swing.text.html.AccessibleHTML.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.PropertyChangeHandler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.RootHTMLAccessibleContext javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo javax.swing.text.html.AccessibleHTML.ElementInfo getCaptionInfo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo javax.swing.text.html.AccessibleHTML.TableElementInfo.TableCellElementInfo[][] access$1200(javax.swing.text.html.AccessibleHTML.TableElementInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo javax.swing.text.html.AccessibleHTML.TableElementInfo.TableCellElementInfo[][] access$1200(javax.swing.text.html.AccessibleHTML.TableElementInfo)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo void loadChildren(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext TableAccessibleContext(javax.swing.text.html.AccessibleHTML.TableElementInfo, javax.swing.text.html.AccessibleHTML.ElementInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext boolean contains(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.Accessible getAccessibleColumnDescription(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.Accessible getAccessibleRowDescription(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.Accessible getAccessibleSummary()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.AccessibleComponent getAccessibleComponent()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.AccessibleStateSet getAccessibleStateSet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.AccessibleTable getAccessibleColumnHeader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.AccessibleTable getAccessibleRowHeader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext javax.accessibility.AccessibleTable getAccessibleTable()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setAccessibleCaption(javax.accessibility.Accessible) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setAccessibleCaption(javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setAccessibleColumnDescription(int, javax.accessibility.Accessible) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setAccessibleColumnDescription(int, javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setAccessibleColumnHeader(javax.accessibility.AccessibleTable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setAccessibleColumnHeader(javax.accessibility.AccessibleTable)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setAccessibleRowDescription(int, javax.accessibility.Accessible) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setAccessibleRowDescription(int, javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setAccessibleRowHeader(javax.accessibility.AccessibleTable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setAccessibleRowHeader(javax.accessibility.AccessibleTable)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setAccessibleSummary(javax.accessibility.Accessible) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setAccessibleSummary(javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setBounds(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setBounds(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setLocation(java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext void setLocation(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable boolean isAccessibleColumnSelected(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable boolean isAccessibleRowSelected(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable boolean isAccessibleSelected(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable int getAccessibleColumnCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable int getAccessibleRowCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable int[] getSelectedAccessibleColumns()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable int[] getSelectedAccessibleRows()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable javax.accessibility.Accessible getAccessibleCaption()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable javax.accessibility.Accessible getAccessibleColumnDescription(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable javax.accessibility.Accessible getAccessibleRowDescription(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable javax.accessibility.Accessible getAccessibleSummary()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable javax.accessibility.AccessibleTable getAccessibleColumnHeader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable javax.accessibility.AccessibleTable getAccessibleRowHeader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable void setAccessibleCaption(javax.accessibility.Accessible) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable void setAccessibleCaption(javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable void setAccessibleColumnDescription(int, javax.accessibility.Accessible) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable void setAccessibleColumnDescription(int, javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable void setAccessibleColumnHeader(javax.accessibility.AccessibleTable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable void setAccessibleColumnHeader(javax.accessibility.AccessibleTable)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable void setAccessibleRowDescription(int, javax.accessibility.Accessible) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable void setAccessibleRowDescription(int, javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable void setAccessibleRowHeader(javax.accessibility.AccessibleTable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable void setAccessibleRowHeader(javax.accessibility.AccessibleTable)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable void setAccessibleSummary(javax.accessibility.Accessible) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableAccessibleContext.AccessibleHeadersTable void setAccessibleSummary(javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableCellElementInfo TableCellElementInfo(javax.swing.text.html.AccessibleHTML.TableElementInfo, javax.swing.text.Element, javax.swing.text.html.AccessibleHTML.ElementInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableCellElementInfo TableCellElementInfo(javax.swing.text.html.AccessibleHTML.TableElementInfo, javax.swing.text.Element, javax.swing.text.html.AccessibleHTML.ElementInfo, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableCellElementInfo boolean isHeaderCell()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableCellElementInfo void getAccessible(javax.swing.text.html.AccessibleHTML.ElementInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableRowElementInfo TableRowElementInfo(javax.swing.text.html.AccessibleHTML.TableElementInfo, javax.swing.text.Element, javax.swing.text.html.AccessibleHTML.TableElementInfo, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableRowElementInfo int access$1000(javax.swing.text.html.AccessibleHTML.TableElementInfo.TableRowElementInfo, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableRowElementInfo void access$1100(javax.swing.text.html.AccessibleHTML.TableElementInfo.TableRowElementInfo, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TableElementInfo.TableRowElementInfo void loadChildren(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext TextAccessibleContext(javax.swing.text.html.AccessibleHTML.TextElementInfo, javax.swing.text.html.AccessibleHTML.ElementInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext boolean contains(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext javax.accessibility.AccessibleComponent getAccessibleComponent()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext javax.accessibility.AccessibleContext getAccessibleContext()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext javax.accessibility.AccessibleRole getAccessibleRole()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext javax.accessibility.AccessibleStateSet getAccessibleStateSet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext javax.accessibility.AccessibleText getAccessibleText()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext void setBounds(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext void setBounds(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext void setLocation(java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext void setLocation(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext.IndexedSegment IndexedSegment(javax.swing.text.html.AccessibleHTML.TextElementInfo.TextAccessibleContext, javax.swing.text.html.AccessibleHTML.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.BRView BRView(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.BlockView boolean isPercentage(int, javax.swing.text.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.BlockView boolean spanSetFromAttributes(int, javax.swing.SizeRequirements, javax.swing.text.html.CSS.LengthValue, javax.swing.text.html.CSS.LengthValue) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.BlockView boolean spanSetFromAttributes(int, javax.swing.SizeRequirements, javax.swing.text.html.CSS.LengthValue, javax.swing.text.html.CSS.LengthValue) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.BlockView boolean spanSetFromAttributes(int, javax.swing.SizeRequirements, javax.swing.text.html.CSS.LengthValue, javax.swing.text.html.CSS.LengthValue)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.BlockView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.BlockView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.BlockView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.BlockView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.BlockView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.BlockView void constrainSize(int, javax.swing.SizeRequirements, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.BlockView void constrainSize(int, javax.swing.SizeRequirements, javax.swing.SizeRequirements) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.BlockView void paint(java.awt.Graphics, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.BlockView void paint(java.awt.Graphics, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS boolean isFloater(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS boolean isFloater(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS boolean isHTMLFontTag(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS boolean isHTMLFontTag(javax.swing.text.html.HTML.Tag)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS boolean validTextAlignValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS boolean validTextAlignValue(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS float getLength(javax.swing.text.AttributeSet, javax.swing.text.html.CSS.Attribute, javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS float getLength(javax.swing.text.AttributeSet, javax.swing.text.html.CSS.Attribute, javax.swing.text.html.StyleSheet) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS float getPointSize(int, javax.swing.text.html.StyleSheet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS float getPointSize(java.lang.String, javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS float getPointSize(java.lang.String, javax.swing.text.html.StyleSheet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS int getBaseFontSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS int getColorComponent(java.lang.String, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS int getColorComponent(java.lang.String, int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS int getFontSize(javax.swing.text.AttributeSet, int, javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS int getIndexOfSize(float, int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS int getIndexOfSize(float, int[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS int getIndexOfSize(float, javax.swing.text.html.StyleSheet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS int getTableBorder(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS java.awt.Color getColor(javax.swing.text.AttributeSet, javax.swing.text.html.CSS.Attribute) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS java.awt.Color hexToColor(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS java.awt.Color parseRGB(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS java.awt.Color parseRGB(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS java.awt.Color stringToColor(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS java.awt.Color stringToColor(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.CSS java.awt.Font getFont(javax.swing.text.StyleContext, javax.swing.text.AttributeSet, int, javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS java.awt.Font getFont(javax.swing.text.StyleContext, javax.swing.text.AttributeSet, int, javax.swing.text.html.StyleSheet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS java.awt.Font getFont(javax.swing.text.StyleContext, javax.swing.text.AttributeSet, int, javax.swing.text.html.StyleSheet) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS java.lang.Object cssValueToStyleConstantsValue(javax.swing.text.StyleConstants, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS java.lang.Object cssValueToStyleConstantsValue(javax.swing.text.StyleConstants, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.CSS java.lang.String colorToHex(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS java.lang.String colorToHex(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS java.lang.String[] parseStrings(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS java.net.URL getURL(java.net.URL, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS java.net.URL getURL(java.net.URL, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS java.net.URL getURL(java.net.URL, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.CSS java.util.Hashtable access$600()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS java.util.Hashtable access$700()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.SizeRequirements calculateTiledRequirements(javax.swing.text.html.CSS.LayoutIterator, javax.swing.SizeRequirements) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.SizeRequirements calculateTiledRequirements(javax.swing.text.html.CSS.LayoutIterator, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.SizeRequirements calculateTiledRequirements(javax.swing.text.html.CSS.LayoutIterator, javax.swing.SizeRequirements)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.text.AttributeSet translateHTMLToCSS(javax.swing.text.AttributeSet)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.text.html.CSS.Attribute getCssAlignAttribute(javax.swing.text.html.HTML.Tag, javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.text.html.CSS.Attribute getCssAlignAttribute(javax.swing.text.html.HTML.Tag, javax.swing.text.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.text.html.CSS.Attribute getCssAlignAttribute(javax.swing.text.html.HTML.Tag, javax.swing.text.AttributeSet)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.text.html.CSS.Attribute[] getAllAttributeKeys()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.text.html.HTML.Tag getHTMLTag(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.text.html.StyleSheet access$500(javax.swing.text.html.CSS, javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.text.html.StyleSheet access$500(javax.swing.text.html.CSS, javax.swing.text.html.StyleSheet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS javax.swing.text.html.StyleSheet getStyleSheet(javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS void calculateTiledLayout(javax.swing.text.html.CSS.LayoutIterator, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS void setBaseFontSize(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS void translateAttribute(javax.swing.text.html.HTML.Attribute, java.lang.String, javax.swing.text.MutableAttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS void translateAttributes(javax.swing.text.html.HTML.Tag, javax.swing.text.AttributeSet, javax.swing.text.MutableAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS void translateAttributes(javax.swing.text.html.HTML.Tag, javax.swing.text.AttributeSet, javax.swing.text.MutableAttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS void translateEmbeddedAttributes(javax.swing.text.AttributeSet, javax.swing.text.MutableAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.Attribute boolean isInherited()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.Attribute java.lang.String getDefaultValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.Attribute java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.Attribute javax.swing.text.html.CSS.Attribute[] access$000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.Attribute javax.swing.text.html.CSS.Attribute[] access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.Attribute javax.swing.text.html.CSS.Attribute[] access$200()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.Attribute javax.swing.text.html.CSS.Attribute[] access$300()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.Attribute javax.swing.text.html.CSS.Attribute[] access$400()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.BackgroundImage BackgroundImage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.BackgroundImage java.lang.Object parseCssValue(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.BackgroundImage javax.swing.ImageIcon getImage(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.BackgroundPosition BackgroundPosition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.BackgroundPosition boolean isHorizontalPositionRelativeToFontSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.BackgroundPosition boolean isHorizontalPositionRelativeToSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.BackgroundPosition boolean isVerticalPositionRelativeToFontSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.BackgroundPosition boolean isVerticalPositionRelativeToSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.BackgroundPosition float getHorizontalPosition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.BackgroundPosition float getVerticalPosition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.BorderStyle BorderStyle()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.BorderStyle javax.swing.text.html.CSS.Value getValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.BorderStyle void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.BorderStyle void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.ColorValue ColorValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.ColorValue java.awt.Color getValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.ColorValue java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.ColorValue java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.ColorValue java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.ColorValue java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.ColorValue java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.CssValue CssValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.CssValue java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.CssValue java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.CssValue java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;null;_,!null-&gt;null;_,null-&gt;null;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.CssValue java.lang.Object parseCssValue(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.CssValue java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.CssValue java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.CssValue java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;null;_,!null-&gt;null;_,null-&gt;null;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.CssValue java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.CssValueMapper CssValueMapper()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontFamily FontFamily()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontFamily java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontFamily java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontFamily java.lang.Object parseCssValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontFamily java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontFamily java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontFamily java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontFamily java.lang.String getValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontFamily void setFontName(javax.swing.text.html.CSS.FontFamily, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontSize int getValue(javax.swing.text.AttributeSet, javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontSize int getValue(javax.swing.text.AttributeSet, javax.swing.text.html.StyleSheet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontSize java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontSize java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontSize java.lang.Object parseCssValue(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.CSS.FontSize java.lang.Object parseHtmlValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontSize java.lang.Object parseHtmlValue(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.CSS.FontSize java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontSize java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontWeight FontWeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontWeight boolean isBold()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontWeight int getValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontWeight java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontWeight java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontWeight java.lang.Object parseCssValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontWeight java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontWeight java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.FontWeight java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.LengthUnit float getValue(float, java.lang.String, java.lang.Boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.LengthUnit float getValue(float, java.lang.String, java.lang.Boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.LengthUnit java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.LengthUnit void parse(java.lang.String, short, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.LengthValue boolean isPercentage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.LengthValue java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.LengthValue java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.LengthValue java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.LengthValue java.lang.Object parseHtmlValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.LengthValue java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.LengthValue java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.LengthValue java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandBackgroundParser ShorthandBackgroundParser()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandBackgroundParser boolean isAttachment(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandBackgroundParser boolean isAttachment(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandBackgroundParser boolean isColor(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandBackgroundParser boolean isImage(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandBackgroundParser boolean isImage(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandBackgroundParser boolean isPosition(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandBackgroundParser boolean isRepeat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandBackgroundParser boolean isRepeat(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandBorderParser ShorthandBorderParser()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandBorderParser void parseShorthandBorder(javax.swing.text.MutableAttributeSet, javax.swing.text.html.CSS.Attribute, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandFontParser ShorthandFontParser()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandFontParser boolean isFontStyle(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandFontParser boolean isFontStyle(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandFontParser boolean isFontVariant(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandFontParser boolean isFontVariant(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandFontParser boolean isFontWeight(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandFontParser void parseShorthandFont(javax.swing.text.html.CSS, java.lang.String, javax.swing.text.MutableAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSS.ShorthandMarginParser ShorthandMarginParser()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.StringValue StringValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.StringValue boolean isItalic()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.StringValue boolean isStrike()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.StringValue boolean isSub()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.StringValue boolean isSup()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.StringValue boolean isUnderline()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.StringValue java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.StringValue java.lang.Object fromStyleConstants(javax.swing.text.StyleConstants, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.CSS.StringValue java.lang.Object parseCssValue(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSS.StringValue java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.StringValue java.lang.Object toStyleConstants(javax.swing.text.StyleConstants, javax.swing.text.View) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSS.Value java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder java.awt.Color getAdjustedColor(java.awt.Color, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder java.awt.Color getAdjustedColor(java.awt.Color, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.CSSBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.DottedDashedPainter void paint(java.awt.Polygon, java.awt.Graphics, java.awt.Color, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.DoublePainter DoublePainter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.DoublePainter void paint(java.awt.Polygon, java.awt.Graphics, java.awt.Color, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.GrooveRidgePainter void paint(java.awt.Polygon, java.awt.Graphics, java.awt.Color, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.InsetOutsetPainter void paint(java.awt.Polygon, java.awt.Graphics, java.awt.Color, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.NullPainter NullPainter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.NullPainter void paint(java.awt.Polygon, java.awt.Graphics, java.awt.Color, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.NullPainter void paint(java.awt.Polygon, java.awt.Graphics, java.awt.Color, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.NullPainter void paint(java.awt.Polygon, java.awt.Graphics, java.awt.Color, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.NullPainter void paint(java.awt.Polygon, java.awt.Graphics, java.awt.Color, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.ShadowLightPainter ShadowLightPainter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.ShadowLightPainter java.awt.Color getLightColor(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.ShadowLightPainter java.awt.Color getLightColor(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.ShadowLightPainter java.awt.Color getShadowColor(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.ShadowLightPainter java.awt.Color getShadowColor(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.SolidPainter SolidPainter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.SolidPainter void paint(java.awt.Polygon, java.awt.Graphics, java.awt.Color, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.StrokePainter StrokePainter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CSSBorder.StrokePainter void paintStrokes(java.awt.Rectangle, java.awt.Graphics, int, int[], java.awt.Color[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CSSParser boolean inBlock()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CommentView void resetBorder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CommentView.CommentBorder boolean isBorderOpaque()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.CommentView.CommentBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CommentView.CommentBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.CommentView.CommentBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.CommentView.CommentBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.CommentView.CommentBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.EditableView boolean isVisible()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.EditableView void paint(java.awt.Graphics, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.FormSubmitEvent FormSubmitEvent(java.lang.Object, javax.swing.event.HyperlinkEvent.EventType, java.net.URL, javax.swing.text.Element, java.lang.String, javax.swing.text.html.FormSubmitEvent.MethodType, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormSubmitEvent java.lang.String getData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.FormSubmitEvent javax.swing.text.html.FormSubmitEvent.MethodType getMethod()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.FormView boolean isControl(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView java.lang.String access$000(javax.swing.text.html.FormView, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView java.lang.String access$000(javax.swing.text.html.FormView, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView java.lang.String access$000(javax.swing.text.html.FormView, java.awt.Point)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView java.lang.String getImageData(java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView java.lang.String getImageData(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView java.lang.String getInputElementData(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView java.lang.String getTextAreaData(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView javax.swing.JComponent createInputComponent(javax.swing.text.AttributeSet, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.FormView void appendBuffer(java.lang.StringBuilder, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView void imageSubmit(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.FormView void loadElementDataIntoBuffer(javax.swing.text.Element, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView void loadSelectData(javax.swing.text.AttributeSet, java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView void removeStaleListenerForModel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.FormView void storePostData(javax.swing.text.html.HTMLDocument, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FormView void storePostData(javax.swing.text.html.HTMLDocument, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.FormView.BrowseFileAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.FormView.MouseEventListener void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FrameSetView int parseDigits(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FrameSetView void layoutMajorAxis(int, int, int[], int[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.FrameView float getMaximumSpan(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.FrameView float getMinimumSpan(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.FrameView java.lang.Object movePostData(javax.swing.JEditorPane, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.FrameView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.FrameView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.FrameView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.FrameView void paint(java.awt.Graphics, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.FrameView.FrameEditorPane javax.swing.text.html.FrameView getFrameView()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HRuleView float getLength(javax.swing.text.html.CSS.Attribute, javax.swing.text.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HRuleView int getBreakWeight(int, float, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HRuleView int getResizeWeight(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HRuleView int viewToModel(float, float, java.awt.Shape, javax.swing.text.Position.Bias[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HRuleView int viewToModel(float, float, java.awt.Shape, javax.swing.text.Position.Bias[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HRuleView java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position.Bias) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HRuleView java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position.Bias)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HRuleView javax.swing.text.AttributeSet getAttributes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HRuleView javax.swing.text.View breakView(int, int, float, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HRuleView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HRuleView void paint(java.awt.Graphics, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HRuleView void paint(java.awt.Graphics, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTML HTML()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTML int getIntegerAttributeValue(javax.swing.text.AttributeSet, javax.swing.text.html.HTML.Attribute, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTML javax.swing.text.html.HTML.Attribute[] getAllAttributeKeys()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTML javax.swing.text.html.HTML.Tag[] getAllTags()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTML.Attribute java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTML.Tag Tag()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTML.Tag boolean breaksFlow()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTML.Tag boolean isBlock()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTML.Tag boolean isParagraph()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTML.Tag boolean isPreformatted()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTML.Tag java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTML.UnknownTag boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTML.UnknownTag boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTML.UnknownTag void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTML.UnknownTag void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument HTMLDocument(javax.swing.text.AbstractDocument.Content, javax.swing.text.html.StyleSheet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument HTMLDocument(javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument boolean getPreservesUnknownTags()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument boolean hasBaseTag()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument boolean isFrameDocument()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument boolean matchNameAttribute(javax.swing.text.AttributeSet, javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument boolean matchNameAttribute(javax.swing.text.AttributeSet, javax.swing.text.html.HTML.Tag) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument char[] access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument java.lang.String access$902(javax.swing.text.html.HTMLDocument, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument java.lang.String access$902(javax.swing.text.html.HTMLDocument, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTMLDocument java.lang.String getBaseTarget()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument java.net.URL getBase()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument java.util.HashMap access$600(javax.swing.text.html.HTMLDocument) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument java.util.HashMap access$600(javax.swing.text.html.HTMLDocument)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument java.util.HashMap access$602(javax.swing.text.html.HTMLDocument, java.util.HashMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument java.util.HashMap access$602(javax.swing.text.html.HTMLDocument, java.util.HashMap)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.AbstractDocument.AbstractElement createDefaultRoot()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.AbstractDocument.Content access$300(javax.swing.text.html.HTMLDocument) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.Element createBranchElement(javax.swing.text.Element, javax.swing.text.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.Element createBranchElement(javax.swing.text.Element, javax.swing.text.AttributeSet)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.Element createLeafElement(javax.swing.text.Element, javax.swing.text.AttributeSet, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.Element createLeafElement(javax.swing.text.Element, javax.swing.text.AttributeSet, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.Element findFrame(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.Element getElement(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.Element getElement(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.Element getElement(javax.swing.text.Element, java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.Element getElement(javax.swing.text.Element, java.lang.Object, java.lang.Object, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.html.HTMLDocument.Iterator getIterator(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.html.HTMLEditorKit.ParserCallback getReader(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.html.HTMLEditorKit.ParserCallback getReader(int, int, int, javax.swing.text.html.HTML.Tag, boolean) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.html.HTMLEditorKit.ParserCallback getReader(int, int, int, javax.swing.text.html.HTML.Tag, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.html.Map getMap(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument javax.swing.text.html.Map getMap(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void access$200(javax.swing.text.html.HTMLDocument, javax.swing.text.AbstractDocument.DefaultDocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void access$400(javax.swing.text.html.HTMLDocument, javax.swing.text.AbstractDocument.DefaultDocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void access$500(javax.swing.text.html.HTMLDocument, javax.swing.event.DocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void addMap(javax.swing.text.html.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void create(javax.swing.text.DefaultStyledDocument.ElementSpec[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insert(int, javax.swing.text.DefaultStyledDocument.ElementSpec[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insertAfterEnd(javax.swing.text.Element, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insertAfterEnd(javax.swing.text.Element, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insertAfterStart(javax.swing.text.Element, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insertAfterStart(javax.swing.text.Element, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insertBeforeEnd(javax.swing.text.Element, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insertBeforeEnd(javax.swing.text.Element, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insertBeforeStart(javax.swing.text.Element, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insertBeforeStart(javax.swing.text.Element, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insertHTML(javax.swing.text.Element, int, java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insertHTML(javax.swing.text.Element, int, java.lang.String, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insertUpdate(javax.swing.text.AbstractDocument.DefaultDocumentEvent, javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void insertUpdate(javax.swing.text.AbstractDocument.DefaultDocumentEvent, javax.swing.text.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void processHTMLFrameHyperlinkEvent(javax.swing.text.html.HTMLFrameHyperlinkEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void removeElements(javax.swing.text.Element, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void removeElements(javax.swing.text.Element, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void removeElementsAtEnd(javax.swing.text.Element, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void removeMap(javax.swing.text.html.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void replace(javax.swing.text.AbstractDocument.DefaultDocumentEvent, javax.swing.text.Element, int, int, int, int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void replace(javax.swing.text.AbstractDocument.DefaultDocumentEvent, javax.swing.text.Element, int, int, int, int, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void setInnerHTML(javax.swing.text.Element, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void setInnerHTML(javax.swing.text.Element, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void setOuterHTML(javax.swing.text.Element, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void setOuterHTML(javax.swing.text.Element, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void setParagraphAttributes(int, int, javax.swing.text.AttributeSet, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void updateFrame(javax.swing.text.Element, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument void updateFrameSet(javax.swing.text.Element, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.BlockElement BlockElement(javax.swing.text.html.HTMLDocument, javax.swing.text.Element, javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.BlockElement BlockElement(javax.swing.text.html.HTMLDocument, javax.swing.text.Element, javax.swing.text.AttributeSet) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.BlockElement javax.swing.text.AttributeSet getResolveParent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.FixedLengthDocument void insertString(int, java.lang.String, javax.swing.text.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader HTMLReader(javax.swing.text.html.HTMLDocument, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader HTMLReader(javax.swing.text.html.HTMLDocument, int, int, int, javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader HTMLReader(javax.swing.text.html.HTMLDocument, int, int, int, javax.swing.text.html.HTML.Tag) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader HTMLReader(javax.swing.text.html.HTMLDocument, int, int, int, javax.swing.text.html.HTML.Tag, boolean, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader HTMLReader(javax.swing.text.html.HTMLDocument, int, int, int, javax.swing.text.html.HTML.Tag, boolean, boolean, boolean) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader boolean access$700(javax.swing.text.html.HTMLDocument.HTMLReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader boolean access$700(javax.swing.text.html.HTMLDocument.HTMLReader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader boolean access$800(javax.swing.text.html.HTMLDocument.HTMLReader, javax.swing.text.html.HTML.Tag, javax.swing.text.AttributeSet, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader boolean access$800(javax.swing.text.html.HTMLDocument.HTMLReader, javax.swing.text.html.HTML.Tag, javax.swing.text.AttributeSet, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader boolean access$800(javax.swing.text.html.HTMLDocument.HTMLReader, javax.swing.text.html.HTML.Tag, javax.swing.text.AttributeSet, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader boolean canInsertTag(javax.swing.text.html.HTML.Tag, javax.swing.text.AttributeSet, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader boolean canInsertTag(javax.swing.text.html.HTML.Tag, javax.swing.text.AttributeSet, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader boolean isInsertTag(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader boolean isInsertTag(javax.swing.text.html.HTML.Tag)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader int heightToElementWithName(java.lang.Object, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader javax.swing.text.Element[] getPathTo(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader void addSpecialElement(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader void blockClose(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader void handleEndOfLineString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader void preContent(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.AnchorAction void end(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.AreaAction void end(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.AreaAction void end(javax.swing.text.html.HTML.Tag)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.AreaAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.BaseAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.BaseAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.CharacterAction void end(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.ConvertAction void end(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.FormAction void setModel(java.lang.String, javax.swing.text.MutableAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.FormTagAction FormTagAction(javax.swing.text.html.HTMLDocument.HTMLReader, javax.swing.text.html.HTMLDocument.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.HeadAction boolean isEmpty(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.HeadAction boolean isEmpty(javax.swing.text.html.HTML.Tag)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.HeadAction void handleLink(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.HiddenAction boolean isEmpty(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.HiddenAction boolean isEmpty(javax.swing.text.html.HTML.Tag)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.LinkAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.MapAction void end(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.MapAction void end(javax.swing.text.html.HTML.Tag)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.MapAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.MapAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.MetaAction boolean isEmpty(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.MetaAction boolean isEmpty(javax.swing.text.html.HTML.Tag)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.MetaAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.ObjectAction void addParameter(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.PreAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.StyleAction boolean isEmpty(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.StyleAction boolean isEmpty(javax.swing.text.html.HTML.Tag)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.StyleAction void end(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.TagAction void end(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.TagAction void end(javax.swing.text.html.HTML.Tag)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.TagAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.TagAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.TagAction void start(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.TitleAction boolean isEmpty(javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.HTMLReader.TitleAction boolean isEmpty(javax.swing.text.html.HTML.Tag)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.Iterator Iterator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.LeafIterator LeafIterator(javax.swing.text.html.HTML.Tag, javax.swing.text.Document) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.LeafIterator int getEndOffset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.LeafIterator javax.swing.text.html.HTML.Tag getTag()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.LeafIterator void nextLeaf(javax.swing.text.ElementIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.RunElement RunElement(javax.swing.text.html.HTMLDocument, javax.swing.text.Element, javax.swing.text.AttributeSet, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.RunElement RunElement(javax.swing.text.html.HTMLDocument, javax.swing.text.Element, javax.swing.text.AttributeSet, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLDocument.RunElement javax.swing.text.AttributeSet getResolveParent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit boolean access$000(javax.swing.text.html.HTMLEditorKit) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit boolean access$000(javax.swing.text.html.HTMLEditorKit)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit boolean access$002(javax.swing.text.html.HTMLEditorKit, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit boolean access$002(javax.swing.text.html.HTMLEditorKit, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit boolean isAutoFormSubmission()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit int access$100(javax.swing.text.html.HTMLEditorKit) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit int access$100(javax.swing.text.html.HTMLEditorKit)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit int access$102(javax.swing.text.html.HTMLEditorKit, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit int access$400(javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit int getBodyElementStart(javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit java.awt.Cursor getDefaultCursor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit java.awt.Cursor getLinkCursor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit java.lang.Object access$200(javax.swing.text.AttributeSet, javax.swing.text.html.HTML.Attribute) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit java.lang.Object access$300(javax.swing.text.html.HTMLEditorKit) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit java.lang.Object access$300(javax.swing.text.html.HTMLEditorKit)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit java.lang.Object access$302(javax.swing.text.html.HTMLEditorKit, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit java.lang.Object access$302(javax.swing.text.html.HTMLEditorKit, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit java.lang.Object getAttrValue(javax.swing.text.AttributeSet, javax.swing.text.html.HTML.Attribute) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit java.lang.String getContentType()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit javax.swing.text.Document createDefaultDocument()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit javax.swing.text.ViewFactory getViewFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit javax.swing.text.html.HTMLEditorKit.Parser ensureParser(javax.swing.text.html.HTMLDocument) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit void createInputAttributes(javax.swing.text.Element, javax.swing.text.MutableAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit void createInputAttributes(javax.swing.text.Element, javax.swing.text.MutableAttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit void deinstall(javax.swing.JEditorPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit void insertHTML(javax.swing.text.html.HTMLDocument, int, java.lang.String, int, int, javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit void insertHTML(javax.swing.text.html.HTMLDocument, int, java.lang.String, int, int, javax.swing.text.html.HTML.Tag) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit void install(javax.swing.JEditorPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit void setStyleSheet(javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ActivateLinkAction java.lang.Object lock(javax.swing.JEditorPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ActivateLinkAction javax.swing.text.View getRootView(javax.swing.JEditorPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ActivateLinkAction javax.swing.text.View getView(javax.swing.JEditorPane, javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ActivateLinkAction javax.swing.text.View getView(javax.swing.JEditorPane, javax.swing.text.Element) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ActivateLinkAction javax.swing.text.View getView(javax.swing.text.View, javax.swing.text.Element, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ActivateLinkAction void doObjectAction(javax.swing.JEditorPane, javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ActivateLinkAction void doObjectAction(javax.swing.JEditorPane, javax.swing.text.Element) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ActivateLinkAction void unlock(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory HTMLFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory javax.swing.text.View create(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory javax.swing.text.View create(javax.swing.text.Element)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.1 float getMaximumSpan(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.1 float getMinimumSpan(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.1 float getPreferredSpan(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.1 int getNextVisualPositionFrom(int, javax.swing.text.Position.Bias, java.awt.Shape, int, javax.swing.text.Position.Bias[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.1 int getNextVisualPositionFrom(int, javax.swing.text.Position.Bias, java.awt.Shape, int, javax.swing.text.Position.Bias[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.1 int getNextVisualPositionFrom(int, javax.swing.text.Position.Bias, java.awt.Shape, int, javax.swing.text.Position.Bias[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.1 java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position.Bias) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.1 java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position.Bias)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null;_,null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.1 void loadChildren(javax.swing.text.ViewFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.1 void loadChildren(javax.swing.text.ViewFactory)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.BodyBlockView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.BodyBlockView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.BodyBlockView void componentHidden(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.BodyBlockView void componentHidden(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.BodyBlockView void componentMoved(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.BodyBlockView void componentMoved(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.BodyBlockView void componentResized(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.BodyBlockView void componentShown(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLFactory.BodyBlockView void componentShown(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction int elementCountToTag(javax.swing.text.html.HTMLDocument, int, javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction int elementCountToTag(javax.swing.text.html.HTMLDocument, int, javax.swing.text.html.HTML.Tag) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.Element findElementMatchingTag(javax.swing.text.html.HTMLDocument, int, javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.Element findElementMatchingTag(javax.swing.text.html.HTMLDocument, int, javax.swing.text.html.HTML.Tag) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.Element[] getElementsAt(javax.swing.text.Element, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.Element[] getElementsAt(javax.swing.text.html.HTMLDocument, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.html.HTMLDocument getHTMLDocument(javax.swing.JEditorPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.HTMLTextAction javax.swing.text.html.HTMLEditorKit getHTMLEditorKit(javax.swing.JEditorPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction void adjustSelection(javax.swing.JEditorPane, javax.swing.text.html.HTMLDocument, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction void insertAtBoundry(javax.swing.JEditorPane, javax.swing.text.html.HTMLDocument, int, javax.swing.text.Element, java.lang.String, javax.swing.text.html.HTML.Tag, javax.swing.text.html.HTML.Tag) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction void insertAtBoundry(javax.swing.JEditorPane, javax.swing.text.html.HTMLDocument, int, javax.swing.text.Element, java.lang.String, javax.swing.text.html.HTML.Tag, javax.swing.text.html.HTML.Tag) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController boolean doesElementContainLocation(javax.swing.JEditorPane, javax.swing.text.Element, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController boolean doesElementContainLocation(javax.swing.JEditorPane, javax.swing.text.Element, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_,_,_-&gt;true;null,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController java.lang.String getMapHREF(javax.swing.JEditorPane, javax.swing.text.html.HTMLDocument, javax.swing.text.Element, javax.swing.text.AttributeSet, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController java.lang.String getMapHREF(javax.swing.JEditorPane, javax.swing.text.html.HTMLDocument, javax.swing.text.Element, javax.swing.text.AttributeSet, int, int, int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController java.lang.String getMapHREF(javax.swing.JEditorPane, javax.swing.text.html.HTMLDocument, javax.swing.text.Element, javax.swing.text.AttributeSet, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_,_,_,_,_-&gt;null;null,_,_,_,_,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController javax.swing.event.HyperlinkEvent createHyperlinkEvent(javax.swing.JEditorPane, javax.swing.text.html.HTMLDocument, java.lang.String, javax.swing.text.AttributeSet, javax.swing.text.Element, java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController javax.swing.event.HyperlinkEvent createHyperlinkEvent(javax.swing.JEditorPane, javax.swing.text.html.HTMLDocument, java.lang.String, javax.swing.text.AttributeSet, javax.swing.text.Element, java.awt.event.MouseEvent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController javax.swing.event.HyperlinkEvent createHyperlinkEvent(javax.swing.JEditorPane, javax.swing.text.html.HTMLDocument, java.lang.String, javax.swing.text.AttributeSet, javax.swing.text.Element, java.awt.event.MouseEvent) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController javax.swing.event.HyperlinkEvent createHyperlinkEvent(javax.swing.JEditorPane, javax.swing.text.html.HTMLDocument, java.lang.String, javax.swing.text.AttributeSet, javax.swing.text.Element, java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController void activateLink(int, javax.swing.JEditorPane, java.awt.event.MouseEvent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController void fireEvents(javax.swing.JEditorPane, javax.swing.text.html.HTMLDocument, java.lang.String, javax.swing.text.Element, java.awt.event.MouseEvent) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController void mouseDragged(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController void mouseDragged(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.LinkController void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.NavigateLinkAction javax.swing.text.html.HTMLEditorKit getHTMLEditorKit(javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.NavigateLinkAction javax.swing.text.html.HTMLEditorKit getHTMLEditorKit(javax.swing.text.JTextComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.NavigateLinkAction void caretUpdate(javax.swing.event.CaretEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.NavigateLinkAction void moveCaretPosition(javax.swing.text.JTextComponent, javax.swing.text.html.HTMLEditorKit, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.NavigateLinkAction.FocusHighlightPainter java.awt.Shape paintLayer(java.awt.Graphics, int, int, java.awt.Shape, javax.swing.text.JTextComponent, javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.NavigateLinkAction.FocusHighlightPainter java.awt.Shape paintLayer(java.awt.Graphics, int, int, java.awt.Shape, javax.swing.text.JTextComponent, javax.swing.text.View) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.Parser Parser()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback ParserCallback()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void flush()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleComment(char[], int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleComment(char[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleEndOfLineString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleEndOfLineString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleEndTag(javax.swing.text.html.HTML.Tag, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleEndTag(javax.swing.text.html.HTML.Tag, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleError(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleError(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleSimpleTag(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleSimpleTag(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleSimpleTag(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleStartTag(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleStartTag(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleStartTag(javax.swing.text.html.HTML.Tag, javax.swing.text.MutableAttributeSet, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleText(char[], int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLEditorKit.ParserCallback void handleText(char[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLFrameHyperlinkEvent HTMLFrameHyperlinkEvent(java.lang.Object, javax.swing.event.HyperlinkEvent.EventType, java.net.URL, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLFrameHyperlinkEvent HTMLFrameHyperlinkEvent(java.lang.Object, javax.swing.event.HyperlinkEvent.EventType, java.net.URL, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLFrameHyperlinkEvent HTMLFrameHyperlinkEvent(java.lang.Object, javax.swing.event.HyperlinkEvent.EventType, java.net.URL, java.lang.String, javax.swing.text.Element, java.awt.event.InputEvent, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLFrameHyperlinkEvent HTMLFrameHyperlinkEvent(java.lang.Object, javax.swing.event.HyperlinkEvent.EventType, java.net.URL, java.lang.String, javax.swing.text.Element, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLFrameHyperlinkEvent HTMLFrameHyperlinkEvent(java.lang.Object, javax.swing.event.HyperlinkEvent.EventType, java.net.URL, javax.swing.text.Element, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLFrameHyperlinkEvent java.lang.String getTarget()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter HTMLWriter(java.io.Writer, javax.swing.text.html.HTMLDocument) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter HTMLWriter(java.io.Writer, javax.swing.text.html.HTMLDocument, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter boolean indentNeedsIncrementing(javax.swing.text.Element, javax.swing.text.Element) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter boolean isBlockTag(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter boolean matchNameAttribute(javax.swing.text.AttributeSet, javax.swing.text.html.HTML.Tag) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter boolean matchNameAttribute(javax.swing.text.AttributeSet, javax.swing.text.html.HTML.Tag) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet, javax.swing.text.html.HTML.Tag, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet, javax.swing.text.html.HTML.Tag, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter boolean noMatchForTagInAttributes(javax.swing.text.AttributeSet, javax.swing.text.html.HTML.Tag, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTMLWriter boolean synthesizedElement(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter boolean writeStyle(java.lang.String, javax.swing.text.Style, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter javax.swing.text.AttributeSet convertToHTML(javax.swing.text.AttributeSet, javax.swing.text.MutableAttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter javax.swing.text.AttributeSet convertToHTML(javax.swing.text.AttributeSet, javax.swing.text.MutableAttributeSet)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void addAttribute(javax.swing.text.MutableAttributeSet, java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void comment(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void convertToHTML32(javax.swing.text.AttributeSet, javax.swing.text.MutableAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void convertToHTML40(javax.swing.text.AttributeSet, javax.swing.text.MutableAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void createFontAttribute(javax.swing.text.html.CSS.Attribute, javax.swing.text.AttributeSet, javax.swing.text.MutableAttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void createFontAttribute(javax.swing.text.html.CSS.Attribute, javax.swing.text.AttributeSet, javax.swing.text.MutableAttributeSet) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void emptyTag(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void output(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void selectContent(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void text(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void textAreaContent(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void writeAttributes(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void writeComment(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void writeMaps(java.util.Enumeration) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void writeOption(javax.swing.text.html.Option) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HTMLWriter void writeStyles(javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView float getAlignment(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView java.awt.Component createComponent()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView void changedUpdate(javax.swing.event.DocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView void insertUpdate(javax.swing.event.DocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView void removeUpdate(javax.swing.event.DocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView.EndTagBorder EndTagBorder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView.EndTagBorder boolean isBorderOpaque()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView.EndTagBorder java.awt.Insets getBorderInsets(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView.EndTagBorder java.awt.Insets getBorderInsets(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView.EndTagBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView.EndTagBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView.StartTagBorder StartTagBorder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView.StartTagBorder boolean isBorderOpaque()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView.StartTagBorder java.awt.Insets getBorderInsets(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView.StartTagBorder java.awt.Insets getBorderInsets(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView.StartTagBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.HiddenTagView.StartTagBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView boolean access$900()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ImageView boolean getLoadsSynchronously()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ImageView boolean hasPixels(java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.ImageView boolean hasPixels(java.awt.Image)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.ImageView boolean isLink()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ImageView float getAlignment(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ImageView int access$1000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ImageView int access$500(javax.swing.text.html.ImageView) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView int access$500(javax.swing.text.html.ImageView)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ImageView int access$602(javax.swing.text.html.ImageView, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView int access$702(javax.swing.text.html.ImageView, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView int viewToModel(float, float, java.awt.Shape, javax.swing.text.Position.Bias[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView int viewToModel(float, float, java.awt.Shape, javax.swing.text.Position.Bias[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView java.awt.Image access$200(javax.swing.text.html.ImageView) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView java.awt.Image access$200(javax.swing.text.html.ImageView)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ImageView java.awt.Image access$202(javax.swing.text.html.ImageView, java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView java.awt.Image access$202(javax.swing.text.html.ImageView, java.awt.Image)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.ImageView java.awt.Image access$300(javax.swing.text.html.ImageView) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView java.awt.Image access$300(javax.swing.text.html.ImageView)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ImageView java.awt.Image access$302(javax.swing.text.html.ImageView, java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView java.awt.Image access$302(javax.swing.text.html.ImageView, java.awt.Image)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.ImageView java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position.Bias) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.ImageView java.awt.Shape modelToView(int, java.awt.Shape, javax.swing.text.Position.Bias)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.ImageView java.lang.String getToolTipText(float, float, java.awt.Shape) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.ImageView void access$100(javax.swing.text.html.ImageView) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView void access$400(javax.swing.text.html.ImageView, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView void access$800(javax.swing.text.html.ImageView) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView void paint(java.awt.Graphics, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView void paint(java.awt.Graphics, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView.ImageHandler ImageHandler(javax.swing.text.html.ImageView, javax.swing.text.html.ImageView.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.ImageView.ImageHandler boolean imageUpdate(java.awt.Image, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.ImageView.ImageLabelView ImageLabelView(javax.swing.text.html.ImageView, javax.swing.text.Element, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ImageView.ImageLabelView int getEndOffset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ImageView.ImageLabelView int getStartOffset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ImageView.ImageLabelView javax.swing.text.View breakView(int, int, float, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ImageView.ImageLabelView void reset(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.InlineView InlineView(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.InlineView javax.swing.text.AttributeSet getAttributes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.InlineView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.InlineView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.InlineView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.IsindexView java.awt.Component createComponent()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.IsindexView void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.LineView LineView(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.LineView boolean isVisible()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.LineView int getCharactersPerTab()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ListView void paint(java.awt.Graphics, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ListView void paint(java.awt.Graphics, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ListView void paintChild(java.awt.Graphics, java.awt.Rectangle, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.Map Map()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.Map int[] extractCoords(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.Map int[] extractCoords(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.Map java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.Map javax.swing.text.html.Map.RegionContainment createRegionContainment(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.Map void addArea(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.Map void removeArea(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.Map.CircleRegionContainment CircleRegionContainment(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.Map.DefaultRegionContainment DefaultRegionContainment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.Map.DefaultRegionContainment boolean contains(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.Map.PolygonRegionContainment PolygonRegionContainment(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.Map.RectangleRegionContainment RectangleRegionContainment(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.Map.RectangleRegionContainment boolean contains(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter MinimalHTMLWriter(java.io.Writer, javax.swing.text.StyledDocument) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter MinimalHTMLWriter(java.io.Writer, javax.swing.text.StyledDocument, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter boolean inFontTag()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter boolean isText(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter boolean isValidCharacter(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter java.lang.String addStyleName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter void setFontMask(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter void startFontTag(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter void startSpanTag(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter void writeAttributes(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter void writeComponent(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter void writeComponent(javax.swing.text.Element)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter void writeContent(javax.swing.text.Element, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter void writeHTMLTags(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter void writeImage(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter void writeImage(javax.swing.text.Element)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter void writeLeaf(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MinimalHTMLWriter void writeStartParagraph(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MuxingAttributeSet MuxingAttributeSet()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.MuxingAttributeSet boolean containsAttribute(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MuxingAttributeSet boolean containsAttributes(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MuxingAttributeSet boolean isEqual(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MuxingAttributeSet java.util.Enumeration getAttributeNames()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.MuxingAttributeSet javax.swing.text.AttributeSet getResolveParent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.MuxingAttributeSet javax.swing.text.AttributeSet[] getAttributes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.NoFramesView boolean isVisible()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ObjectView java.awt.Component getUnloadableRepresentation()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ObjectView void setParameters(java.awt.Component, javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.Option Option(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.Option boolean isSelected()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.Option java.lang.String getLabel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.Option java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.Option javax.swing.text.AttributeSet getAttributes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.OptionComboBoxModel javax.swing.text.html.Option getInitialSelection()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.OptionListModel boolean contains(int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.OptionListModel boolean getValueIsAdjusting()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.OptionListModel boolean isLeadAnchorNotificationEnabled()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.OptionListModel boolean isSelectionEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.OptionListModel int getAnchorSelectionIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.OptionListModel int getLeadSelectionIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.OptionListModel int getMaxSelectionIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.OptionListModel int getSelectionMode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.OptionListModel java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.OptionListModel java.util.BitSet getInitialSelection()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.ParagraphView ParagraphView(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.ParagraphView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.ParagraphView void paint(java.awt.Graphics, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet boolean addCSSAttributeFromHTML(javax.swing.text.MutableAttributeSet, javax.swing.text.html.CSS.Attribute, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.StyleSheet boolean isW3CLengthUnits()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet int getIndexOfSize(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet int getSpecificity(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet int[] getSizeMap()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet java.awt.Color stringToColor(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet java.awt.Color stringToColor(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.StyleSheet java.lang.String _cleanSelectorString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet java.lang.String _cleanSelectorString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet java.lang.String cleanSelectorString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet java.lang.String cleanSelectorString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.StyleSheet java.lang.String[] getSimpleSelectors(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet java.net.URL getBase()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.ImageIcon getBackgroundImage(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet addAttribute(javax.swing.text.AttributeSet, java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet addAttributes(javax.swing.text.AttributeSet, javax.swing.text.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet convertAttributeSet(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet getDeclaration(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet getViewAttributes(javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet getViewAttributes(javax.swing.text.View)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet removeAttribute(javax.swing.text.AttributeSet, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet removeAttributes(javax.swing.text.AttributeSet, java.util.Enumeration&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet removeHTMLTags(javax.swing.text.AttributeSet, javax.swing.text.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.AttributeSet removeHTMLTags(javax.swing.text.AttributeSet, javax.swing.text.AttributeSet)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.MutableAttributeSet createLargeAttributeSet(javax.swing.text.AttributeSet)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style createResolvedStyle(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style createResolvedStyle(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style createResolvedStyle(java.lang.String, java.lang.String[], java.lang.String[], java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style createResolvedStyle(java.lang.String, java.lang.String[], java.lang.String[], java.lang.String[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style createResolvedStyle(java.lang.String, java.lang.String[], java.lang.String[], java.lang.String[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style createResolvedStyle(java.lang.String, java.lang.String[], java.lang.String[], java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style createResolvedStyle(java.lang.String, java.util.Vector, javax.swing.text.html.HTML.Tag) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style createResolvedStyle(java.lang.String, java.util.Vector, javax.swing.text.html.HTML.Tag) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style createResolvedStyle(java.lang.String, java.util.Vector, javax.swing.text.html.HTML.Tag)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style getLinkedStyle(javax.swing.text.Style) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.Style getRule(javax.swing.text.html.HTML.Tag, javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.StyleContext.SmallAttributeSet createSmallAttributeSet(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.StyleContext.SmallAttributeSet createSmallAttributeSet(javax.swing.text.AttributeSet)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.html.CSS access$000(javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.html.CSS access$000(javax.swing.text.html.StyleSheet)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.html.StyleSheet.BoxPainter getBoxPainter(javax.swing.text.AttributeSet)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.html.StyleSheet.ListPainter getListPainter(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.html.StyleSheet.ListPainter getListPainter(javax.swing.text.AttributeSet)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet javax.swing.text.html.StyleSheet.SelectorMapping getRootSelectorMapping()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet void addRule(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet void addRule(java.lang.String[], javax.swing.text.AttributeSet, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet void addSortedStyle(javax.swing.text.html.StyleSheet.SelectorMapping, java.util.Vector&lt;javax.swing.text.html.StyleSheet.SelectorMapping&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet void getStyles(javax.swing.text.html.StyleSheet.SelectorMapping, java.util.Vector&lt;javax.swing.text.html.StyleSheet.SelectorMapping&gt;, java.lang.String[], java.lang.String[], java.lang.String[], int, int, java.util.Hashtable&lt;javax.swing.text.html.StyleSheet.SelectorMapping,javax.swing.text.html.StyleSheet.SelectorMapping&gt;) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet void refreshResolvedRules(java.lang.String, java.lang.String[], javax.swing.text.Style, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet void unlinkStyleSheet(javax.swing.text.html.StyleSheet, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BackgroundImagePainter BackgroundImagePainter(javax.swing.text.AttributeSet, javax.swing.text.html.CSS, javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BackgroundImagePainter BackgroundImagePainter(javax.swing.text.AttributeSet, javax.swing.text.html.CSS, javax.swing.text.html.StyleSheet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BackgroundImagePainter BackgroundImagePainter(javax.swing.text.AttributeSet, javax.swing.text.html.CSS, javax.swing.text.html.StyleSheet) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BackgroundImagePainter boolean updatePaintCoordinates(java.awt.Rectangle, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BackgroundImagePainter boolean updatePaintCoordinates(java.awt.Rectangle, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BackgroundImagePainter void paint(java.awt.Graphics, float, float, float, float, javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BackgroundImagePainter void paint(java.awt.Graphics, float, float, float, float, javax.swing.text.View) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BoxPainter BoxPainter(javax.swing.text.AttributeSet, javax.swing.text.html.CSS, javax.swing.text.html.StyleSheet) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BoxPainter boolean isLeftToRight(javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BoxPainter boolean isLeftToRight(javax.swing.text.View)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BoxPainter boolean isOrientationAware(javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BoxPainter boolean isOrientationAware(javax.swing.text.View)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BoxPainter float getInset(int, javax.swing.text.View) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BoxPainter float getOrientationMargin(javax.swing.text.html.StyleSheet.BoxPainter.HorizontalMargin, float, javax.swing.text.AttributeSet, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BoxPainter javax.swing.border.Border getBorder(javax.swing.text.AttributeSet)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.BoxPainter void paint(java.awt.Graphics, float, float, float, float, javax.swing.text.View) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.CssParser void handleImport(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.CssParser void handleSelector(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.CssParser void handleValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ListPainter ListPainter(javax.swing.text.AttributeSet, javax.swing.text.html.StyleSheet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ListPainter java.lang.String formatAlphaNumerals(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ListPainter javax.swing.text.html.CSS.Value getChildType(javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ListPainter void drawLetter(java.awt.Graphics, char, int, int, int, int, float, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ListPainter void drawShape(java.awt.Graphics, javax.swing.text.html.CSS.Value, int, int, int, int, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ListPainter void drawShape(java.awt.Graphics, javax.swing.text.html.CSS.Value, int, int, int, int, float) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ListPainter void getStart(javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ListPainter void paint(java.awt.Graphics, float, float, float, float, javax.swing.text.View, int) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle boolean matches(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle boolean matches(java.lang.String, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle int boundedIndexOf(java.lang.String, char, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle int boundedIndexOf(java.lang.String, char, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle javax.swing.event.ChangeListener[] getChangeListeners()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void addAttribute(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void addAttribute(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void addAttribute(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void addAttributes(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void addAttributes(javax.swing.text.AttributeSet)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void addChangeListener(javax.swing.event.ChangeListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void addChangeListener(javax.swing.event.ChangeListener)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void removeAttribute(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void removeAttribute(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void removeAttributes(java.util.Enumeration&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void removeAttributes(java.util.Enumeration&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void removeAttributes(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void removeAttributes(javax.swing.text.AttributeSet)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void removeChangeListener(javax.swing.event.ChangeListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void removeChangeListener(javax.swing.event.ChangeListener)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void removeStyle(javax.swing.text.Style) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void setResolveParent(javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ResolvedStyle void setResolveParent(javax.swing.text.AttributeSet)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.SearchBuffer void releaseSearchBuffer(javax.swing.text.html.StyleSheet.SearchBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.SelectorMapping int getChildSpecificity(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.SelectorMapping int getSpecificity()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.SelectorMapping javax.swing.text.Style getStyle()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.SelectorMapping javax.swing.text.html.StyleSheet.SelectorMapping createChildSelectorMapping(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.SmallConversionSet SmallConversionSet(javax.swing.text.html.StyleSheet, javax.swing.text.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.StyleSheet.SmallConversionSet boolean isDefined(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.StyleSheet.ViewAttributeSet ViewAttributeSet(javax.swing.text.html.StyleSheet, javax.swing.text.View) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView boolean access$000(javax.swing.text.html.TableView) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView boolean access$000(javax.swing.text.html.TableView)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView boolean access$300(javax.swing.text.html.TableView) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView boolean access$300(javax.swing.text.html.TableView)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView int access$100(javax.swing.text.html.TableView) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView int access$100(javax.swing.text.html.TableView)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView int access$200(javax.swing.text.html.TableView) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView int access$200(javax.swing.text.html.TableView)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView int getColumnCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView int getColumnSpan(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView int getColumnsOccupied(javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView int getRowsOccupied(javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView java.util.BitSet access$400()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.TableView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.TableView javax.swing.text.View create(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView javax.swing.text.View getViewAtPoint(int, int, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView javax.swing.text.View getViewAtPosition(int, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView javax.swing.text.ViewFactory getViewFactory()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView javax.swing.text.html.TableView.RowView createTableRow(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView void checkMultiColumnCell(int, int, int, javax.swing.text.View) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView void checkSingleColumnCell(int, int, javax.swing.text.View) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView void insertUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView void layoutColumns(int, int[], int[], javax.swing.SizeRequirements[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView void layoutColumns(int, int[], int[], javax.swing.SizeRequirements[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView void layoutColumns(int, int[], int[], javax.swing.SizeRequirements[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView void paint(java.awt.Graphics, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView void removeUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView void replace(int, int, javax.swing.text.View[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView.CellView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView.CellView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.TableView.CellView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView.CellView void layoutMajorAxis(int, int, int[], int[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView.ColumnIterator float getBorderWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.ColumnIterator float getLeadingCollapseSpan()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.ColumnIterator float getMaximumSpan(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.ColumnIterator float getMinimumSpan(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.ColumnIterator float getPreferredSpan(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.ColumnIterator float getTrailingCollapseSpan()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.ColumnIterator int getAdjustmentWeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.ColumnIterator int getCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.ColumnIterator int getOffset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.ColumnIterator int getSpan()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowIterator float getBorderWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowIterator float getLeadingCollapseSpan()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowIterator float getTrailingCollapseSpan()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowIterator int getAdjustmentWeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowView int getResizeWeight(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowView javax.swing.SizeRequirements calculateMajorAxisRequirements(int, javax.swing.SizeRequirements)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowView javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.TableView.RowView javax.swing.text.AttributeSet getAttributes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowView javax.swing.text.View getViewAtPosition(int, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowView void changedUpdate(javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowView void paint(java.awt.Graphics, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowView void paint(java.awt.Graphics, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.TableView.RowView void replace(int, int, javax.swing.text.View[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
