<root>
  <item name="javax.swing.text.html.parser.AttributeList AttributeList()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.AttributeList AttributeList(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.AttributeList AttributeList(java.lang.String, int, int, java.lang.String, java.util.Vector&lt;?&gt;, javax.swing.text.html.parser.AttributeList)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.AttributeList int getModifier()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.AttributeList int getType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.AttributeList java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.AttributeList java.lang.String getValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.AttributeList java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.AttributeList javax.swing.text.html.parser.AttributeList getNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.ContentModel ContentModel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.ContentModel ContentModel(int, java.lang.Object, javax.swing.text.html.parser.ContentModel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.ContentModel ContentModel(int, javax.swing.text.html.parser.ContentModel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.ContentModel ContentModel(javax.swing.text.html.parser.Element)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.ContentModelState ContentModelState(java.lang.Object, javax.swing.text.html.parser.ContentModelState)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.ContentModelState ContentModelState(java.lang.Object, javax.swing.text.html.parser.ContentModelState, long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.ContentModelState ContentModelState(javax.swing.text.html.parser.ContentModel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.ContentModelState javax.swing.text.html.parser.ContentModel getModel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD java.lang.String[] readNameArray(java.io.DataInputStream, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.AttributeList defAttributeList(java.lang.String, int, int, java.lang.String, java.lang.String, javax.swing.text.html.parser.AttributeList) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.AttributeList defAttributeList(java.lang.String, int, int, java.lang.String, java.lang.String, javax.swing.text.html.parser.AttributeList)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.AttributeList readAttributeList(java.io.DataInputStream, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.ContentModel defContentModel(int, java.lang.Object, javax.swing.text.html.parser.ContentModel)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.ContentModel readContentModel(java.io.DataInputStream, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.DTD getDTD(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.Element defElement(java.lang.String, int, boolean, boolean, javax.swing.text.html.parser.ContentModel, java.lang.String[], java.lang.String[], javax.swing.text.html.parser.AttributeList) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.Element defElement(java.lang.String, int, boolean, boolean, javax.swing.text.html.parser.ContentModel, java.lang.String[], java.lang.String[], javax.swing.text.html.parser.AttributeList) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD javax.swing.text.html.parser.Entity defEntity(java.lang.String, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DTD void read(java.io.DataInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DocumentParser void handleEmptyTag(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DocumentParser void handleEndTag(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DocumentParser void handleStartTag(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.DocumentParser void handleText(char[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.DocumentParser void parse(java.io.Reader, javax.swing.text.html.HTMLEditorKit.ParserCallback, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Element Element()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.Element boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Element boolean omitEnd()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Element boolean omitStart()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Element int getIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Element int getType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Element java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Element java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Element javax.swing.text.html.parser.AttributeList getAttribute(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.Element javax.swing.text.html.parser.AttributeList getAttribute(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Element javax.swing.text.html.parser.AttributeList getAttributes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Element javax.swing.text.html.parser.ContentModel getContent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Entity Entity(java.lang.String, int, char[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.Entity boolean isGeneral()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Entity boolean isParameter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Entity char[] getData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Entity int getType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Entity java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Entity java.lang.String getString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser boolean ignoreElement(javax.swing.text.html.parser.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser boolean ignoreElement(javax.swing.text.html.parser.Element)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser boolean parseMarkupDeclarations(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser char[] getChars(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser char[] getChars(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser char[] mapNumericReference(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser int getBlockStartPosition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser int getCurrentLine()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser int getCurrentPos()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser int strIndexOf(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser java.lang.String getEndOfLineString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser java.lang.String getString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser java.lang.String parseDTDMarkup()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser javax.swing.text.SimpleAttributeSet getAttributes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser javax.swing.text.html.parser.TagElement makeTag(javax.swing.text.html.parser.Element, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser javax.swing.text.html.parser.TagElement makeTag(javax.swing.text.html.parser.Element, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void error(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void error(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void error(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void error(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleComment(char[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleComment(char[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleEmptyTag(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleEmptyTag(javax.swing.text.html.parser.TagElement)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleEndTag(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleEndTag(javax.swing.text.html.parser.TagElement)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleError(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleError(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleStartTag(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleStartTag(javax.swing.text.html.parser.TagElement)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleText(char[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleText(char[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void handleText(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void legalTagContext(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void markFirstTime(javax.swing.text.html.parser.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void markFirstTime(javax.swing.text.html.parser.Element)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void resetStrBuffer()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.Parser void startTag(javax.swing.text.html.parser.TagElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.ParserDelegator javax.swing.text.html.parser.DTD createDTD(javax.swing.text.html.parser.DTD, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.text.html.parser.ParserDelegator void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.ResourceLoader ResourceLoader(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.text.html.parser.TagElement TagElement(javax.swing.text.html.parser.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.TagElement TagElement(javax.swing.text.html.parser.Element, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.TagElement boolean fictional()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.TagElement javax.swing.text.html.HTML.Tag getHTMLTag()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.TagElement javax.swing.text.html.parser.Element getElement()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.text.html.parser.TagStack TagStack(javax.swing.text.html.parser.TagElement, javax.swing.text.html.parser.TagStack) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.text.html.parser.TagStack java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
