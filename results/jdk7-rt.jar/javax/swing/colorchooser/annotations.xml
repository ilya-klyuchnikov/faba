<root>
  <item name="javax.swing.colorchooser.AbstractColorChooserPanel int getDisplayedMnemonicIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.AbstractColorChooserPanel int getMnemonic()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.AbstractColorChooserPanel void uninstallChooserPanel(javax.swing.JColorChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.AbstractColorChooserPanel.1 1(javax.swing.colorchooser.AbstractColorChooserPanel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.colorchooser.AbstractColorChooserPanel.1 void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.CenterLayout CenterLayout()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.CenterLayout java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.CenterLayout void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.CenterLayout void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.CenterLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.CenterLayout void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.CenterLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorChooserComponentFactory ColorChooserComponentFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorChooserComponentFactory javax.swing.JComponent getPreviewPanel()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorChooserComponentFactory javax.swing.colorchooser.AbstractColorChooserPanel[] getDefaultChooserPanels()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorChooserPanel javax.swing.Icon getLargeDisplayIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorChooserPanel javax.swing.Icon getSmallDisplayIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorChooserPanel void setEnabled(java.awt.Container, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorChooserPanel void setInheritsPopupMenu(javax.swing.JComponent, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel ColorModel(java.lang.String, java.lang.String...) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel float getDefault(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel float normalize(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel int getColor(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel int getColor(float[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel int getCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel int getInteger(java.awt.Component, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel int getInteger(java.awt.Component, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel int getMaximum(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel int getMinimum(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel int to8bit(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel java.lang.String getLabel(java.awt.Component, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel java.lang.String getText(java.awt.Component, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel java.lang.String getText(java.awt.Component, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModel void setColor(int, float[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelCMYK float[] CMYKtoRGB(float[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelCMYK float[] CMYKtoRGB(float[], float[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelCMYK float[] CMYKtoRGB(float[], float[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.colorchooser.ColorModelCMYK float[] RGBtoCMYK(float[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelCMYK float[] RGBtoCMYK(float[], float[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelCMYK float[] RGBtoCMYK(float[], float[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.colorchooser.ColorModelCMYK int getColor(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelCMYK void setColor(int, float[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL float getDefault(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL float getHue(float, float, float, float, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL float max(float, float, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL float min(float, float, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL float normalize(float, float, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL float[] HSLtoRGB(float[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL float[] HSLtoRGB(float[], float[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL float[] HSLtoRGB(float[], float[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL float[] RGBtoHSL(float[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL float[] RGBtoHSL(float[], float[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL float[] RGBtoHSL(float[], float[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL int getColor(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL int getMaximum(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSL void setColor(int, float[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSV float getDefault(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSV float[] HSVtoRGB(float[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSV float[] HSVtoRGB(float[], float[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSV float[] HSVtoRGB(float[], float[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSV float[] RGBtoHSV(float[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSV float[] RGBtoHSV(float[], float[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSV float[] RGBtoHSV(float[], float[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSV int getColor(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSV int getMaximum(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorModelHSV void setColor(int, float[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ColorPanel float getValueX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorPanel float getValueY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorPanel float getValueZ()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ColorPanel void setColor(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultColorSelectionModel java.awt.Color getSelectedColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultColorSelectionModel void setSelectedColor(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultPreviewPanel int paintSquares(java.awt.Graphics, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultPreviewPanel int paintSwatch(java.awt.Graphics, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultPreviewPanel int paintText(java.awt.Graphics, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultPreviewPanel java.awt.Dimension getPreferredSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultPreviewPanel void paintComponent(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultSwatchChooserPanel javax.swing.Icon getLargeDisplayIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultSwatchChooserPanel javax.swing.Icon getSmallDisplayIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultSwatchChooserPanel void uninstallChooserPanel(javax.swing.JColorChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultSwatchChooserPanel void updateChooser()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultSwatchChooserPanel.MainSwatchKeyListener MainSwatchKeyListener(javax.swing.colorchooser.DefaultSwatchChooserPanel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultSwatchChooserPanel.MainSwatchKeyListener MainSwatchKeyListener(javax.swing.colorchooser.DefaultSwatchChooserPanel, javax.swing.colorchooser.DefaultSwatchChooserPanel.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultSwatchChooserPanel.MainSwatchKeyListener void keyPressed(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultSwatchChooserPanel.MainSwatchListener MainSwatchListener(javax.swing.colorchooser.DefaultSwatchChooserPanel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultSwatchChooserPanel.RecentSwatchKeyListener RecentSwatchKeyListener(javax.swing.colorchooser.DefaultSwatchChooserPanel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultSwatchChooserPanel.RecentSwatchKeyListener RecentSwatchKeyListener(javax.swing.colorchooser.DefaultSwatchChooserPanel, javax.swing.colorchooser.DefaultSwatchChooserPanel.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultSwatchChooserPanel.RecentSwatchKeyListener void keyPressed(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.DefaultSwatchChooserPanel.RecentSwatchListener RecentSwatchListener(javax.swing.colorchooser.DefaultSwatchChooserPanel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent float getValue(int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent int getValue(float, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent void mouseReleased(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.DiagramComponent void paintComponent(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.MainSwatchPanel int[] initRawValues()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SlidingSpinner float getValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SlidingSpinner javax.swing.JComponent getLabel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SlidingSpinner javax.swing.JSlider getSlider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SlidingSpinner javax.swing.JSpinner getSpinner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SmartGridLayout SmartGridLayout(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.colorchooser.SmartGridLayout java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SmartGridLayout java.awt.Dimension minimumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SmartGridLayout void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.SmartGridLayout void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.SmartGridLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SmartGridLayout void buildLayoutGrid(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SmartGridLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SmartGridLayout void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.SmartGridLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel int access$000(javax.swing.colorchooser.SwatchPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel int access$000(javax.swing.colorchooser.SwatchPanel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel int access$002(javax.swing.colorchooser.SwatchPanel, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel int access$008(javax.swing.colorchooser.SwatchPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel int access$010(javax.swing.colorchooser.SwatchPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel int access$100(javax.swing.colorchooser.SwatchPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel int access$100(javax.swing.colorchooser.SwatchPanel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel int access$102(javax.swing.colorchooser.SwatchPanel, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel int access$108(javax.swing.colorchooser.SwatchPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel int access$110(javax.swing.colorchooser.SwatchPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel java.awt.Color getColorForCell(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel java.awt.Color getSelectedColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel java.awt.Dimension getPreferredSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel java.lang.String getToolTipText(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel java.lang.String getToolTipText(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel void initColors()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel void initValues()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel void paintComponent(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel.1 1(javax.swing.colorchooser.SwatchPanel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel.1 void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel.1 void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel.2 2(javax.swing.colorchooser.SwatchPanel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.colorchooser.SwatchPanel.2 void keyPressed(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter boolean access$000(javax.swing.colorchooser.ValueFormatter, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter boolean access$000(javax.swing.colorchooser.ValueFormatter, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter boolean access$100(javax.swing.colorchooser.ValueFormatter, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter boolean access$100(javax.swing.colorchooser.ValueFormatter, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter boolean isValid(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter boolean isValid(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter java.lang.Object stringToValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter java.lang.String valueToString(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter javax.swing.text.DocumentFilter getDocumentFilter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter void focusLost(java.awt.event.FocusEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter void init(int, boolean, javax.swing.JFormattedTextField) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter.1 1(javax.swing.colorchooser.ValueFormatter)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter.1 void insertString(javax.swing.text.DocumentFilter.FilterBypass, int, java.lang.String, javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter.1 void insertString(javax.swing.text.DocumentFilter.FilterBypass, int, java.lang.String, javax.swing.text.AttributeSet) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter.1 void remove(javax.swing.text.DocumentFilter.FilterBypass, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter.1 void replace(javax.swing.text.DocumentFilter.FilterBypass, int, int, java.lang.String, javax.swing.text.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.colorchooser.ValueFormatter.1 void replace(javax.swing.text.DocumentFilter.FilterBypass, int, int, java.lang.String, javax.swing.text.AttributeSet) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
