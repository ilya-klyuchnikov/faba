<root>
  <item name="javax.swing.plaf.basic.BasicArrowButton boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicArrowButton int getDirection()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicArrowButton java.awt.Dimension getMaximumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicArrowButton java.awt.Dimension getMinimumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicArrowButton java.awt.Dimension getPreferredSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicArrowButton void paint(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicArrowButton void paintTriangle(java.awt.Graphics, int, int, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicArrowButton void setDirection(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders BasicBorders()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders javax.swing.border.Border getButtonBorder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders javax.swing.border.Border getInternalFrameBorder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders javax.swing.border.Border getMenuBarBorder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders javax.swing.border.Border getProgressBarBorder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders javax.swing.border.Border getRadioButtonBorder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders javax.swing.border.Border getSplitPaneBorder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders javax.swing.border.Border getSplitPaneDividerBorder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders javax.swing.border.Border getTextFieldBorder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders javax.swing.border.Border getToggleButtonBorder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.ButtonBorder ButtonBorder(java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.ButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.ButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.ButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.ButtonBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.ButtonBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.FieldBorder FieldBorder(java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.FieldBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.FieldBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.FieldBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.FieldBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.FieldBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.MarginBorder MarginBorder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.MarginBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.MarginBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.MarginBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.MenuBarBorder MenuBarBorder(java.awt.Color, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.MenuBarBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.MenuBarBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.MenuBarBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.MenuBarBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.MenuBarBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.RadioButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.RadioButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.RadioButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.RadioButtonBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.RadioButtonBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.RolloverButtonBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.RolloverMarginBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.RolloverMarginBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.RolloverMarginBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.SplitPaneBorder SplitPaneBorder(java.awt.Color, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.SplitPaneBorder boolean isBorderOpaque()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.SplitPaneBorder java.awt.Insets getBorderInsets(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.SplitPaneBorder java.awt.Insets getBorderInsets(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.SplitPaneBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.SplitPaneDividerBorder SplitPaneDividerBorder(java.awt.Color, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.SplitPaneDividerBorder boolean isBorderOpaque()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.SplitPaneDividerBorder java.awt.Insets getBorderInsets(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.SplitPaneDividerBorder java.awt.Insets getBorderInsets(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.SplitPaneDividerBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.ToggleButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.ToggleButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.ToggleButtonBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.ToggleButtonBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicBorders.ToggleButtonBorder void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener BasicButtonListener(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener BasicButtonListener(javax.swing.AbstractButton)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener javax.swing.InputMap getInputMap(int, javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void checkOpacity(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void installKeyboardActions(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void mouseDragged(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void mouseDragged(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void uninstallKeyboardActions(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener void updateMnemonicBinding(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener.Actions boolean isEnabled(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener.Actions boolean isEnabled(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonListener.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI BasicButtonUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI int getBaseline(javax.swing.JComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI int getDefaultTextIconGap(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI int getDefaultTextIconGap(javax.swing.AbstractButton)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI int getTextShiftOffset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI java.lang.String layout(javax.swing.AbstractButton, java.awt.FontMetrics, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI javax.swing.plaf.basic.BasicButtonListener createButtonListener(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI javax.swing.plaf.basic.BasicButtonListener createButtonListener(javax.swing.AbstractButton)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI javax.swing.plaf.basic.BasicButtonListener getButtonListener(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void clearTextShiftOffset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void installDefaults(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void installKeyboardActions(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintButtonPressed(java.awt.Graphics, javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintButtonPressed(java.awt.Graphics, javax.swing.AbstractButton) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintButtonPressed(java.awt.Graphics, javax.swing.AbstractButton)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintFocus(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintIcon(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintText(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintText(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintText(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void paintText(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void setTextShiftOffset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void uninstallDefaults(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void uninstallKeyboardActions(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void uninstallListeners(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicButtonUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicCheckBoxMenuItemUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicCheckBoxMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicCheckBoxMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicCheckBoxMenuItemUI void processMouseEvent(javax.swing.JMenuItem, java.awt.event.MouseEvent, javax.swing.MenuElement[], javax.swing.MenuSelectionManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicCheckBoxMenuItemUI void processMouseEvent(javax.swing.JMenuItem, java.awt.event.MouseEvent, javax.swing.MenuElement[], javax.swing.MenuSelectionManager) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicCheckBoxUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicCheckBoxUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI BasicColorChooserUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI javax.swing.colorchooser.AbstractColorChooserPanel[] createDefaultChoosers()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI javax.swing.plaf.basic.BasicColorChooserUI.Handler access$200(javax.swing.plaf.basic.BasicColorChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI void access$100(javax.swing.plaf.basic.BasicColorChooserUI, javax.swing.colorchooser.ColorSelectionModel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.Handler Handler(javax.swing.plaf.basic.BasicColorChooserUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.Handler Handler(javax.swing.plaf.basic.BasicColorChooserUI, javax.swing.plaf.basic.BasicColorChooserUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.Handler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.Handler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.Handler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.Handler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.Handler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.Handler void mouseReleased(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.Handler void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicColorChooserUI.PropertyHandler PropertyHandler(javax.swing.plaf.basic.BasicColorChooserUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxEditor java.awt.Component getEditorComponent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxEditor javax.swing.JTextField createEditorComponent()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxEditor void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxEditor void focusGained(java.awt.event.FocusEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxEditor void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxEditor void focusLost(java.awt.event.FocusEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxEditor void setItem(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxEditor.BorderlessTextField BorderlessTextField(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxRenderer javax.swing.border.Border getNoFocusBorder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI boolean access$200(javax.swing.plaf.basic.BasicComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI boolean access$200(javax.swing.plaf.basic.BasicComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI boolean access$202(javax.swing.plaf.basic.BasicComboBoxUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI boolean access$202(javax.swing.plaf.basic.BasicComboBoxUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI boolean access$302(javax.swing.plaf.basic.BasicComboBoxUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI boolean access$302(javax.swing.plaf.basic.BasicComboBoxUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI boolean access$500(javax.swing.plaf.basic.BasicComboBoxUI, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI boolean isFocusTraversable(javax.swing.JComboBox) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI boolean isNavigationKey(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI boolean isPopupVisible(javax.swing.JComboBox) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI boolean isTableCellEditor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI int getAccessibleChildrenCount(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI java.awt.Dimension getDefaultSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI java.awt.Dimension getSizeForComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI java.awt.Rectangle rectangleForCurrentValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI java.awt.event.ItemListener createItemListener()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI javax.accessibility.Accessible getAccessibleChild(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI javax.swing.ComboBoxEditor createEditor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI javax.swing.JButton createArrowButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI javax.swing.ListCellRenderer createRenderer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI javax.swing.plaf.basic.BasicComboBoxUI.Handler access$100(javax.swing.plaf.basic.BasicComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI javax.swing.plaf.basic.ComboPopup createPopup()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI long access$600(javax.swing.plaf.basic.BasicComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI long access$600(javax.swing.plaf.basic.BasicComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI long access$602(javax.swing.plaf.basic.BasicComboBoxUI, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI long access$700(javax.swing.plaf.basic.BasicComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI long access$700(javax.swing.plaf.basic.BasicComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI long access$702(javax.swing.plaf.basic.BasicComboBoxUI, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI long access$800(javax.swing.plaf.basic.BasicComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI long access$800(javax.swing.plaf.basic.BasicComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI void access$400(javax.swing.plaf.basic.BasicComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI void paintCurrentValue(java.awt.Graphics, java.awt.Rectangle, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI void paintCurrentValueBackground(java.awt.Graphics, java.awt.Rectangle, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI void paintCurrentValueBackground(java.awt.Graphics, java.awt.Rectangle, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI void setPopupVisible(javax.swing.JComboBox, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Actions boolean isEnabled(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Actions int getNextIndex(javax.swing.JComboBox, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Actions int getNextIndex(javax.swing.JComboBox, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.ComboBoxLayoutManager ComboBoxLayoutManager(javax.swing.plaf.basic.BasicComboBoxUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.ComboBoxLayoutManager void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.ComboBoxLayoutManager void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.ComboBoxLayoutManager void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.ComboBoxLayoutManager void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.ComboBoxLayoutManager void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.DefaultKeySelectionManager DefaultKeySelectionManager(javax.swing.plaf.basic.BasicComboBoxUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.FocusHandler FocusHandler(javax.swing.plaf.basic.BasicComboBoxUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler Handler(javax.swing.plaf.basic.BasicComboBoxUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler Handler(javax.swing.plaf.basic.BasicComboBoxUI, javax.swing.plaf.basic.BasicComboBoxUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler boolean isTypeAheadKey(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void contentsChanged(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void keyPressed(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void keyReleased(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void keyReleased(java.awt.event.KeyEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void keyTyped(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void keyTyped(java.awt.event.KeyEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.Handler void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.ItemHandler ItemHandler(javax.swing.plaf.basic.BasicComboBoxUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.ItemHandler void itemStateChanged(java.awt.event.ItemEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.ItemHandler void itemStateChanged(java.awt.event.ItemEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.KeyHandler KeyHandler(javax.swing.plaf.basic.BasicComboBoxUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.ListDataHandler ListDataHandler(javax.swing.plaf.basic.BasicComboBoxUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboBoxUI.PropertyChangeHandler PropertyChangeHandler(javax.swing.plaf.basic.BasicComboBoxUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup java.awt.Rectangle computePopupBounds(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup java.awt.event.KeyListener createKeyListener()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup java.awt.event.MouseEvent convertMouseEvent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup java.awt.event.MouseEvent convertMouseEvent(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup javax.swing.JList createList()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup javax.swing.JList getList()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup javax.swing.JScrollPane createScroller()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup javax.swing.event.ListDataListener createListDataListener()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup javax.swing.event.ListSelectionListener createListSelectionListener()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup javax.swing.plaf.basic.BasicComboPopup.Handler access$200(javax.swing.plaf.basic.BasicComboPopup) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup void access$300(javax.swing.plaf.basic.BasicComboPopup, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup void delegateFocus(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup void installComboBoxModelListeners(javax.swing.ComboBoxModel) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup void installKeyboardActions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup void uninstallComboBoxModelListeners(javax.swing.ComboBoxModel) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup void uninstallKeyboardActions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup void updateListBoxSelectionForEvent(java.awt.event.MouseEvent, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.1 1(javax.swing.plaf.basic.BasicComboPopup, javax.swing.ListModel) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.1 void processMouseEvent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.AutoScrollActionHandler AutoScrollActionHandler(javax.swing.plaf.basic.BasicComboPopup, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.AutoScrollActionHandler void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.EmptyListModelClass EmptyListModelClass()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.EmptyListModelClass EmptyListModelClass(javax.swing.plaf.basic.BasicComboPopup.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.EmptyListModelClass EmptyListModelClass(javax.swing.plaf.basic.BasicComboPopup.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.EmptyListModelClass int getSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.EmptyListModelClass java.lang.Object getElementAt(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.EmptyListModelClass void addListDataListener(javax.swing.event.ListDataListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.EmptyListModelClass void addListDataListener(javax.swing.event.ListDataListener)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.EmptyListModelClass void removeListDataListener(javax.swing.event.ListDataListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.EmptyListModelClass void removeListDataListener(javax.swing.event.ListDataListener)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler Handler(javax.swing.plaf.basic.BasicComboPopup)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler Handler(javax.swing.plaf.basic.BasicComboPopup, javax.swing.plaf.basic.BasicComboPopup.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler void itemStateChanged(java.awt.event.ItemEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler void mouseDragged(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.InvocationKeyHandler InvocationKeyHandler(javax.swing.plaf.basic.BasicComboPopup)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.InvocationKeyHandler void keyReleased(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.InvocationKeyHandler void keyReleased(java.awt.event.KeyEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.InvocationMouseHandler InvocationMouseHandler(javax.swing.plaf.basic.BasicComboPopup)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.InvocationMouseMotionHandler InvocationMouseMotionHandler(javax.swing.plaf.basic.BasicComboPopup)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ItemHandler ItemHandler(javax.swing.plaf.basic.BasicComboPopup)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListDataHandler ListDataHandler(javax.swing.plaf.basic.BasicComboPopup)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListDataHandler void contentsChanged(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListDataHandler void contentsChanged(javax.swing.event.ListDataEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListDataHandler void intervalAdded(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListDataHandler void intervalAdded(javax.swing.event.ListDataEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListDataHandler void intervalRemoved(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListDataHandler void intervalRemoved(javax.swing.event.ListDataEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListMouseHandler ListMouseHandler(javax.swing.plaf.basic.BasicComboPopup)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListMouseHandler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListMouseHandler void mousePressed(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListMouseMotionHandler ListMouseMotionHandler(javax.swing.plaf.basic.BasicComboPopup)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListSelectionHandler ListSelectionHandler(javax.swing.plaf.basic.BasicComboPopup)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListSelectionHandler void valueChanged(javax.swing.event.ListSelectionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.ListSelectionHandler void valueChanged(javax.swing.event.ListSelectionEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicComboPopup.PropertyChangeHandler PropertyChangeHandler(javax.swing.plaf.basic.BasicComboPopup)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI BasicDesktopIconUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI java.awt.Insets getInsets(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI javax.swing.event.MouseInputListener createMouseInputListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler MouseInputHandler(javax.swing.plaf.basic.BasicDesktopIconUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler void mouseDragged(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopIconUI.MouseInputHandler void moveAndRepaint(javax.swing.JComponent, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI BasicDesktopPaneUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI javax.swing.plaf.basic.BasicDesktopPaneUI.Actions access$2100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI void paint(java.awt.Graphics, javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI void registerKeyboardActions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI void uninstallDefaults()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI void unregisterKeyboardActions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions boolean isEnabled(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions boolean isEnabled(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$1000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$1100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$1200()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$1300()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$1400()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$1500()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$1600()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$1700()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$1800()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$1900()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$200()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$300()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$400()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$500()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$600()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$700()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$800()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions java.lang.String access$900()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions void access$2200(javax.swing.plaf.basic.BasicDesktopPaneUI.Actions, javax.swing.JDesktopPane, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions void access$2200(javax.swing.plaf.basic.BasicDesktopPaneUI.Actions, javax.swing.JDesktopPane, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Actions void setState(javax.swing.JDesktopPane, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.BasicDesktopManager BasicDesktopManager(javax.swing.plaf.basic.BasicDesktopPaneUI, javax.swing.plaf.basic.BasicDesktopPaneUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.CloseAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Handler Handler(javax.swing.plaf.basic.BasicDesktopPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Handler Handler(javax.swing.plaf.basic.BasicDesktopPaneUI, javax.swing.plaf.basic.BasicDesktopPaneUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.MaximizeAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.MinimizeAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.NavigateAction boolean isEnabled()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.NavigateAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.OpenAction boolean isEnabled()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDesktopPaneUI.OpenAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel boolean lt(java.io.File, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel boolean lt(java.io.File, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel boolean renameFile(java.io.File, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel int access$300(javax.swing.plaf.basic.BasicDirectoryModel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel int access$300(javax.swing.plaf.basic.BasicDirectoryModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel java.util.Vector access$200(javax.swing.plaf.basic.BasicDirectoryModel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel java.util.Vector access$200(javax.swing.plaf.basic.BasicDirectoryModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel java.util.Vector access$402(javax.swing.plaf.basic.BasicDirectoryModel, java.util.Vector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel java.util.Vector access$402(javax.swing.plaf.basic.BasicDirectoryModel, java.util.Vector)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel java.util.Vector access$502(javax.swing.plaf.basic.BasicDirectoryModel, java.util.Vector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel java.util.Vector access$502(javax.swing.plaf.basic.BasicDirectoryModel, java.util.Vector)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel javax.swing.JFileChooser access$100(javax.swing.plaf.basic.BasicDirectoryModel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel javax.swing.JFileChooser access$100(javax.swing.plaf.basic.BasicDirectoryModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel void access$000(javax.swing.plaf.basic.BasicDirectoryModel, boolean, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel void access$600(javax.swing.plaf.basic.BasicDirectoryModel, java.lang.Object, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel void access$700(javax.swing.plaf.basic.BasicDirectoryModel, java.lang.Object, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel void intervalAdded(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel void intervalAdded(javax.swing.event.ListDataEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel void intervalRemoved(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel void intervalRemoved(javax.swing.event.ListDataEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel void sort(java.util.Vector&lt;? extends java.io.File&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel.1 1(javax.swing.plaf.basic.BasicDirectoryModel, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel.DoChangeContents DoChangeContents(java.util.List&lt;java.io.File&gt;, int, java.util.List&lt;java.io.File&gt;, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel.DoChangeContents void cancel()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel.LoadFilesThread void cancelRunnables(java.util.Vector&lt;javax.swing.plaf.basic.BasicDirectoryModel.DoChangeContents&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicDirectoryModel.LoadFilesThread.1 1(javax.swing.plaf.basic.BasicDirectoryModel.LoadFilesThread, java.util.Vector)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI javax.swing.ActionMap getActionMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI javax.swing.text.EditorKit getEditorKit(javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI void addActions(javax.swing.ActionMap, javax.swing.Action[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI void removeActions(javax.swing.ActionMap, javax.swing.Action[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI void updateCSS(java.awt.Font, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI void updateDisplayProperties(java.awt.Font, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI void updateFont(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI void updateForeground(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI void updateStyle(java.awt.Font, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicEditorPaneUI void updateStyle(java.awt.Font, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI BasicFileChooserUI(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI boolean access$100(javax.swing.plaf.basic.BasicFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI boolean access$100(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI boolean access$300(javax.swing.plaf.basic.BasicFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI boolean access$300(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI boolean access$900(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI boolean isDirectorySelected()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI boolean isGlobPattern(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI int getApproveButtonMnemonic(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.awt.event.MouseListener createDoubleClickListener(javax.swing.JFileChooser, javax.swing.JList) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.awt.event.MouseListener createDoubleClickListener(javax.swing.JFileChooser, javax.swing.JList)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.io.File getDirectory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String access$1200(javax.swing.plaf.basic.BasicFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String access$1200(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String access$1300(javax.swing.plaf.basic.BasicFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String access$1300(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String access$400(javax.swing.plaf.basic.BasicFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String access$400(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String access$500(javax.swing.plaf.basic.BasicFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String access$500(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String access$600(javax.swing.plaf.basic.BasicFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String access$600(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String access$700(javax.swing.plaf.basic.BasicFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String access$700(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String getApproveButtonText(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String getApproveButtonToolTipText(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String getDialogTitle(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String getDirectoryName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI java.lang.String getFileName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.Action getApproveSelectionAction()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.Action getCancelSelectionAction()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.Action getChangeToParentDirectoryAction()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.Action getGoHomeAction()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.Action getUpdateAction()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.ActionMap createActionMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.JButton getApproveButton(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.JButton getApproveButton(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.JFileChooser getFileChooser()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.JPanel getAccessoryPanel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.event.ListSelectionListener createListSelectionListener(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.filechooser.FileFilter access$1102(javax.swing.plaf.basic.BasicFileChooserUI, javax.swing.filechooser.FileFilter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.filechooser.FileFilter access$1102(javax.swing.plaf.basic.BasicFileChooserUI, javax.swing.filechooser.FileFilter)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.filechooser.FileFilter getAcceptAllFileFilter(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.filechooser.FileFilter getAcceptAllFileFilter(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.filechooser.FileView getFileView(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.filechooser.FileView getFileView(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.plaf.basic.BasicDirectoryModel getModel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.plaf.basic.BasicFileChooserUI.GlobFilter access$1000(javax.swing.plaf.basic.BasicFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.plaf.basic.BasicFileChooserUI.GlobFilter access$1000(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.plaf.basic.BasicFileChooserUI.GlobFilter access$1002(javax.swing.plaf.basic.BasicFileChooserUI, javax.swing.plaf.basic.BasicFileChooserUI.GlobFilter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.plaf.basic.BasicFileChooserUI.GlobFilter access$1002(javax.swing.plaf.basic.BasicFileChooserUI, javax.swing.plaf.basic.BasicFileChooserUI.GlobFilter)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI javax.swing.plaf.basic.BasicFileChooserUI.Handler access$200(javax.swing.plaf.basic.BasicFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void access$000(javax.swing.plaf.basic.BasicFileChooserUI, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void access$800(javax.swing.plaf.basic.BasicFileChooserUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void ensureFileIsVisible(javax.swing.JFileChooser, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void ensureFileIsVisible(javax.swing.JFileChooser, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void ensureFileIsVisible(javax.swing.JFileChooser, java.io.File)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void installComponents(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void installComponents(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void installDefaults(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void installIcons(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void installListeners(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void installStrings(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void rescanCurrentDirectory(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void rescanCurrentDirectory(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void setDirectory(java.io.File)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void setDirectoryName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void setDirectoryName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void setDirectorySelected(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void setFileName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void setFileName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void uninstallComponents(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void uninstallComponents(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void uninstallDefaults(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void uninstallIcons(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void uninstallIcons(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void uninstallListeners(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void uninstallStrings(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void uninstallStrings(javax.swing.JFileChooser)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.1 void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.AcceptAllFileFilter AcceptAllFileFilter(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.AcceptAllFileFilter boolean accept(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.AcceptAllFileFilter boolean accept(java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.ApproveSelectionAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.BasicFileView java.lang.Boolean isHidden(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.BasicFileView java.lang.String getDescription(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.BasicFileView java.lang.String getName(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.BasicFileView java.lang.String getName(java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.BasicFileView void cacheIcon(java.io.File, javax.swing.Icon) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.BasicFileView void cacheIcon(java.io.File, javax.swing.Icon) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.CancelSelectionAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.ChangeToParentDirectoryAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.FileTransferHandler int getSourceActions(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.FileTransferHandler int getSourceActions(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.FileTransferHandler java.awt.datatransfer.Transferable createTransferable(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.FileTransferHandler.FileTransferable java.awt.datatransfer.DataFlavor[] getRicherFlavors()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.GlobFilter GlobFilter(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.GlobFilter boolean accept(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.GlobFilter boolean accept(java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.GlobFilter java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.GlobFilter void setPattern(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.GoHomeAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.Handler Handler(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.Handler Handler(javax.swing.plaf.basic.BasicFileChooserUI, javax.swing.JList)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.Handler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.Handler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.Handler void mousePressed(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.Handler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.Handler void mouseReleased(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.Handler void valueChanged(javax.swing.event.ListSelectionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.NewFolderAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.SelectionListener SelectionListener(javax.swing.plaf.basic.BasicFileChooserUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFileChooserUI.UpdateAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFormattedTextFieldUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFormattedTextFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicFormattedTextFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicGraphicsUtils BasicGraphicsUtils()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicGraphicsUtils boolean isLeftToRight(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicGraphicsUtils boolean isMenuShortcutKeyDown(java.awt.event.InputEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicGraphicsUtils java.awt.Dimension getPreferredButtonSize(javax.swing.AbstractButton, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicGraphicsUtils java.awt.Insets getEtchedInsets()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicGraphicsUtils java.awt.Insets getGrooveInsets()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicGraphicsUtils void drawBezel(java.awt.Graphics, int, int, int, int, boolean, boolean, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicGraphicsUtils void drawEtchedRect(java.awt.Graphics, int, int, int, int, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicGraphicsUtils void drawGroove(java.awt.Graphics, int, int, int, int, java.awt.Color, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicGraphicsUtils void drawLoweredBezel(java.awt.Graphics, int, int, int, int, java.awt.Color, java.awt.Color, java.awt.Color, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicGraphicsUtils void drawStringUnderlineCharAt(java.awt.Graphics, java.lang.String, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML BasicHTML()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML boolean hasParagraph(javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML boolean isHTMLString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML boolean isHTMLString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML int getBaseline(javax.swing.JComponent, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML int getBaseline(javax.swing.text.View, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML int getBaseline(javax.swing.text.View, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML int getHTMLBaseline(javax.swing.text.View, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML javax.swing.text.View createHTMLView(javax.swing.JComponent, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML javax.swing.text.View createHTMLView(javax.swing.JComponent, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML javax.swing.text.View createHTMLView(javax.swing.JComponent, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML javax.swing.text.ViewFactory access$000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML void updateRenderer(javax.swing.JComponent, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.BasicDocument BasicDocument(javax.swing.text.html.StyleSheet, java.awt.Font, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.BasicDocument BasicDocument(javax.swing.text.html.StyleSheet, java.awt.Font, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.BasicDocument BasicDocument(javax.swing.text.html.StyleSheet, java.awt.Font, java.awt.Color) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.BasicDocument void setFontAndColor(java.awt.Font, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.BasicDocument void setFontAndColor(java.awt.Font, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.BasicEditorKit javax.swing.text.Document createDefaultDocument(java.awt.Font, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.BasicEditorKit javax.swing.text.Document createDefaultDocument(java.awt.Font, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.BasicEditorKit javax.swing.text.Document createDefaultDocument(java.awt.Font, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.BasicEditorKit javax.swing.text.ViewFactory getViewFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.BasicHTMLViewFactory BasicHTMLViewFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.BasicHTMLViewFactory javax.swing.text.View create(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.BasicHTMLViewFactory javax.swing.text.View create(javax.swing.text.Element)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.Renderer float getMaximumSpan(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.Renderer int getViewCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.Renderer java.awt.Container getContainer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.Renderer javax.swing.text.AttributeSet getAttributes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.Renderer javax.swing.text.View getView(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.Renderer javax.swing.text.ViewFactory getViewFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.Renderer void paint(java.awt.Graphics, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.Renderer void preferenceChanged(javax.swing.text.View, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicHTML.Renderer void setParent(javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory BasicIconFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxIcon CheckBoxIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxIcon CheckBoxIcon(javax.swing.plaf.basic.BasicIconFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxIcon CheckBoxIcon(javax.swing.plaf.basic.BasicIconFactory.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxMenuItemIcon CheckBoxMenuItemIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxMenuItemIcon CheckBoxMenuItemIcon(javax.swing.plaf.basic.BasicIconFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxMenuItemIcon CheckBoxMenuItemIcon(javax.swing.plaf.basic.BasicIconFactory.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxMenuItemIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxMenuItemIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.CheckBoxMenuItemIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.EmptyFrameIcon EmptyFrameIcon()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.EmptyFrameIcon EmptyFrameIcon(javax.swing.plaf.basic.BasicIconFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.EmptyFrameIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.EmptyFrameIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.EmptyFrameIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.EmptyFrameIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.EmptyFrameIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuArrowIcon MenuArrowIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuArrowIcon MenuArrowIcon(javax.swing.plaf.basic.BasicIconFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuArrowIcon MenuArrowIcon(javax.swing.plaf.basic.BasicIconFactory.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuArrowIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuArrowIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemArrowIcon MenuItemArrowIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemArrowIcon MenuItemArrowIcon(javax.swing.plaf.basic.BasicIconFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemArrowIcon MenuItemArrowIcon(javax.swing.plaf.basic.BasicIconFactory.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemArrowIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemArrowIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemArrowIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemCheckIcon MenuItemCheckIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemCheckIcon MenuItemCheckIcon(javax.swing.plaf.basic.BasicIconFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemCheckIcon MenuItemCheckIcon(javax.swing.plaf.basic.BasicIconFactory.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemCheckIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemCheckIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemCheckIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemCheckIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.MenuItemCheckIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonIcon RadioButtonIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonIcon RadioButtonIcon(javax.swing.plaf.basic.BasicIconFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonIcon RadioButtonIcon(javax.swing.plaf.basic.BasicIconFactory.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonMenuItemIcon RadioButtonMenuItemIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonMenuItemIcon RadioButtonMenuItemIcon(javax.swing.plaf.basic.BasicIconFactory.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonMenuItemIcon RadioButtonMenuItemIcon(javax.swing.plaf.basic.BasicIconFactory.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonMenuItemIcon int getIconHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonMenuItemIcon int getIconWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicIconFactory.RadioButtonMenuItemIcon void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane java.lang.String getTitle(java.lang.String, java.awt.FontMetrics, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane java.lang.String getTitle(java.lang.String, java.awt.FontMetrics, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;null,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane javax.swing.ActionMap createActionMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane javax.swing.JMenu createSystemMenu()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane javax.swing.plaf.basic.BasicInternalFrameTitlePane.Handler access$100(javax.swing.plaf.basic.BasicInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane void addSystemMenuItems(javax.swing.JMenu) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane void paintTitleBackground(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane void postClosingEvent(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane void uninstallDefaults()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.CloseAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.Handler Handler(javax.swing.plaf.basic.BasicInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.Handler Handler(javax.swing.plaf.basic.BasicInternalFrameTitlePane, javax.swing.plaf.basic.BasicInternalFrameTitlePane.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.Handler java.awt.Dimension minimumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.Handler void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.Handler void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.Handler void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.Handler void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.Handler void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.Handler void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.IconifyAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.MaximizeAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.MoveAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.MoveAction void actionPerformed(java.awt.event.ActionEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.NoFocusButton boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.NoFocusButton void requestFocus()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.PropertyChangeHandler PropertyChangeHandler(javax.swing.plaf.basic.BasicInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.RestoreAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.ShowSystemMenuAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.SizeAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.SizeAction void actionPerformed(java.awt.event.ActionEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.SystemMenuBar boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.SystemMenuBar boolean isOpaque()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.SystemMenuBar void requestFocus()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameTitlePane.TitlePaneLayout TitlePaneLayout(javax.swing.plaf.basic.BasicInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI BasicInternalFrameUI(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI boolean access$200(javax.swing.plaf.basic.BasicInternalFrameUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI boolean access$200(javax.swing.plaf.basic.BasicInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI boolean access$202(javax.swing.plaf.basic.BasicInternalFrameUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI boolean access$202(javax.swing.plaf.basic.BasicInternalFrameUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI boolean access$402(javax.swing.plaf.basic.BasicInternalFrameUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI boolean access$402(javax.swing.plaf.basic.BasicInternalFrameUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI boolean access$700(javax.swing.plaf.basic.BasicInternalFrameUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI boolean access$700(javax.swing.plaf.basic.BasicInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI boolean access$702(javax.swing.plaf.basic.BasicInternalFrameUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI boolean access$702(javax.swing.plaf.basic.BasicInternalFrameUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI boolean isKeyBindingActive()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI boolean isKeyBindingRegistered()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI java.awt.Rectangle access$500(javax.swing.plaf.basic.BasicInternalFrameUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI java.awt.Rectangle access$500(javax.swing.plaf.basic.BasicInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI java.awt.Rectangle access$502(javax.swing.plaf.basic.BasicInternalFrameUI, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI java.awt.Rectangle access$502(javax.swing.plaf.basic.BasicInternalFrameUI, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI java.awt.event.WindowFocusListener access$300(javax.swing.plaf.basic.BasicInternalFrameUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.DesktopManager createDesktopManager()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.JComponent createEastPane(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.JComponent createEastPane(javax.swing.JInternalFrame)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.JComponent createSouthPane(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.JComponent createSouthPane(javax.swing.JInternalFrame)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.JComponent createWestPane(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.JComponent createWestPane(javax.swing.JInternalFrame)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.JComponent getEastPane()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.JComponent getNorthPane()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.JComponent getSouthPane()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.JComponent getWestPane()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.event.MouseInputAdapter createBorderListener(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.event.MouseInputAdapter createBorderListener(javax.swing.JInternalFrame)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.event.MouseInputListener createGlassPaneDispatcher()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI javax.swing.plaf.basic.BasicInternalFrameUI.Handler access$100(javax.swing.plaf.basic.BasicInternalFrameUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void access$600(javax.swing.plaf.basic.BasicInternalFrameUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void deiconifyFrame(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void deinstallMouseHandlers(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void installMouseHandlers(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void minimizeFrame(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void replacePane(javax.swing.JComponent, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void replacePane(javax.swing.JComponent, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void setEastPane(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void setKeyBindingActive(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void setKeyBindingRegistered(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void setSouthPane(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void setWestPane(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void setupMenuCloseKey()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.1 boolean isEnabled(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.1 boolean isEnabled(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.1 void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.BasicInternalFrameListener BasicInternalFrameListener(javax.swing.plaf.basic.BasicInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener BorderListener(javax.swing.plaf.basic.BasicInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.BorderListener void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.ComponentHandler ComponentHandler(javax.swing.plaf.basic.BasicInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.GlassPaneDispatcher GlassPaneDispatcher(javax.swing.plaf.basic.BasicInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler Handler(javax.swing.plaf.basic.BasicInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler Handler(javax.swing.plaf.basic.BasicInternalFrameUI, javax.swing.plaf.basic.BasicInternalFrameUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler java.awt.Dimension minimumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler java.awt.Dimension preferredLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void componentHidden(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void componentHidden(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void componentMoved(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void componentMoved(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void componentResized(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void componentShown(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void componentShown(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void internalFrameActivated(javax.swing.event.InternalFrameEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void internalFrameClosed(javax.swing.event.InternalFrameEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void internalFrameClosing(javax.swing.event.InternalFrameEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void internalFrameClosing(javax.swing.event.InternalFrameEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void internalFrameDeactivated(javax.swing.event.InternalFrameEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void internalFrameDeiconified(javax.swing.event.InternalFrameEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void internalFrameDeiconified(javax.swing.event.InternalFrameEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void internalFrameIconified(javax.swing.event.InternalFrameEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void internalFrameIconified(javax.swing.event.InternalFrameEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void internalFrameOpened(javax.swing.event.InternalFrameEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void internalFrameOpened(javax.swing.event.InternalFrameEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mouseDragged(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mouseDragged(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mousePressed(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void mouseReleased(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void windowGainedFocus(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void windowGainedFocus(java.awt.event.WindowEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.Handler void windowLostFocus(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.InternalFrameLayout InternalFrameLayout(javax.swing.plaf.basic.BasicInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicInternalFrameUI.InternalFramePropertyChangeListener InternalFramePropertyChangeListener(javax.swing.plaf.basic.BasicInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI int getBaseline(javax.swing.JComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI java.lang.String layout(javax.swing.JLabel, java.awt.FontMetrics, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI java.lang.String layoutCL(javax.swing.JLabel, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI java.lang.String layoutCL(javax.swing.JLabel, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI java.lang.String layoutCL(javax.swing.JLabel, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI java.lang.String layoutCL(javax.swing.JLabel, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI java.lang.String layoutCL(javax.swing.JLabel, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI java.lang.String layoutCL(javax.swing.JLabel, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void installComponents(javax.swing.JLabel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void installDefaults(javax.swing.JLabel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void installKeyboardActions(javax.swing.JLabel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void installListeners(javax.swing.JLabel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void paintDisabledText(javax.swing.JLabel, java.awt.Graphics, java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void paintDisabledText(javax.swing.JLabel, java.awt.Graphics, java.lang.String, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void paintDisabledText(javax.swing.JLabel, java.awt.Graphics, java.lang.String, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void paintEnabledText(javax.swing.JLabel, java.awt.Graphics, java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void paintEnabledText(javax.swing.JLabel, java.awt.Graphics, java.lang.String, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void paintEnabledText(javax.swing.JLabel, java.awt.Graphics, java.lang.String, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void uninstallComponents(javax.swing.JLabel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void uninstallDefaults(javax.swing.JLabel) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void uninstallDefaults(javax.swing.JLabel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void uninstallKeyboardActions(javax.swing.JLabel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI void uninstallListeners(javax.swing.JLabel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI.Actions void doPress(javax.swing.JLabel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLabelUI.Actions void doRelease(javax.swing.JLabel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI BasicListUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI boolean access$1102(javax.swing.plaf.basic.BasicListUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI boolean access$1102(javax.swing.plaf.basic.BasicListUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI boolean access$1500(javax.swing.plaf.basic.BasicListUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI boolean access$1500(javax.swing.plaf.basic.BasicListUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int access$1000(javax.swing.plaf.basic.BasicListUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int access$1000(javax.swing.plaf.basic.BasicListUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int access$1002(javax.swing.plaf.basic.BasicListUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int access$200(int, javax.swing.JList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int access$300(javax.swing.plaf.basic.BasicListUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int access$300(javax.swing.plaf.basic.BasicListUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int access$400(javax.swing.plaf.basic.BasicListUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int access$500(javax.swing.plaf.basic.BasicListUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int access$600(javax.swing.plaf.basic.BasicListUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int access$700(javax.swing.plaf.basic.BasicListUI, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int adjustIndex(int, javax.swing.JList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int locationToIndex(javax.swing.JList, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI int locationToIndex(javax.swing.JList, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI java.awt.Rectangle access$1300(javax.swing.plaf.basic.BasicListUI, javax.swing.JList.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI java.awt.Rectangle access$1300(javax.swing.plaf.basic.BasicListUI, javax.swing.JList.DropLocation)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI java.awt.Rectangle access$1400(javax.swing.plaf.basic.BasicListUI, javax.swing.JList, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI java.awt.Rectangle access$1400(javax.swing.plaf.basic.BasicListUI, javax.swing.JList, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI java.awt.Rectangle getCellBounds(javax.swing.JList, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI java.awt.Rectangle getCellBounds(javax.swing.JList, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI java.awt.Rectangle getDropLineRect(javax.swing.JList.DropLocation)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI javax.swing.plaf.basic.BasicListUI.Handler access$100(javax.swing.plaf.basic.BasicListUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI long access$800(javax.swing.plaf.basic.BasicListUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI long access$800(javax.swing.plaf.basic.BasicListUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI void access$1200(javax.swing.plaf.basic.BasicListUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI void access$900(javax.swing.plaf.basic.BasicListUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI void paintCell(java.awt.Graphics, int, java.awt.Rectangle, javax.swing.ListCellRenderer, javax.swing.ListModel, javax.swing.ListSelectionModel, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI void paintCell(java.awt.Graphics, int, java.awt.Rectangle, javax.swing.ListCellRenderer, javax.swing.ListModel, javax.swing.ListSelectionModel, int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI void paintCell(java.awt.Graphics, int, java.awt.Rectangle, javax.swing.ListCellRenderer, javax.swing.ListModel, javax.swing.ListSelectionModel, int) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI void paintCell(java.awt.Graphics, int, java.awt.Rectangle, javax.swing.ListCellRenderer, javax.swing.ListModel, javax.swing.ListSelectionModel, int) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Actions boolean isEnabled(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Actions int getNextColumnIndex(javax.swing.JList, javax.swing.plaf.basic.BasicListUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Actions int getNextColumnIndex(javax.swing.JList, javax.swing.plaf.basic.BasicListUI, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Actions int getNextIndex(javax.swing.JList, javax.swing.plaf.basic.BasicListUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Actions int getNextIndex(javax.swing.JList, javax.swing.plaf.basic.BasicListUI, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Actions int getNextPageIndex(javax.swing.JList, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Actions void clearSelection(javax.swing.JList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Actions void selectAll(javax.swing.JList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.FocusHandler FocusHandler(javax.swing.plaf.basic.BasicListUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler Handler(javax.swing.plaf.basic.BasicListUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler Handler(javax.swing.plaf.basic.BasicListUI, javax.swing.plaf.basic.BasicListUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void adjustSelection(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void contentsChanged(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void dragStarting(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void intervalAdded(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void keyReleased(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void keyReleased(java.awt.event.KeyEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void keyTyped(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void repaintDropLocation(javax.swing.JList.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.Handler void valueChanged(javax.swing.event.ListSelectionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.ListDataHandler ListDataHandler(javax.swing.plaf.basic.BasicListUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.ListSelectionHandler ListSelectionHandler(javax.swing.plaf.basic.BasicListUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.ListTransferHandler int getSourceActions(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.ListTransferHandler int getSourceActions(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.ListTransferHandler java.awt.datatransfer.Transferable createTransferable(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.ListTransferHandler java.awt.datatransfer.Transferable createTransferable(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.MouseInputHandler MouseInputHandler(javax.swing.plaf.basic.BasicListUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicListUI.PropertyChangeHandler PropertyChangeHandler(javax.swing.plaf.basic.BasicListUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel BasicLookAndFeel()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel byte[] access$000(javax.swing.plaf.basic.BasicLookAndFeel, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel byte[] access$000(javax.swing.plaf.basic.BasicLookAndFeel, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel byte[] access$000(javax.swing.plaf.basic.BasicLookAndFeel, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel byte[] loadAudioData(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel byte[] loadAudioData(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel java.lang.Object access$100(javax.swing.plaf.basic.BasicLookAndFeel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel java.lang.Object access$100(javax.swing.plaf.basic.BasicLookAndFeel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel java.lang.Object getUIOfType(javax.swing.plaf.ComponentUI, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel java.lang.Object getUIOfType(javax.swing.plaf.ComponentUI, java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel javax.sound.sampled.Clip access$200(javax.swing.plaf.basic.BasicLookAndFeel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel javax.sound.sampled.Clip access$200(javax.swing.plaf.basic.BasicLookAndFeel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel javax.sound.sampled.Clip access$202(javax.swing.plaf.basic.BasicLookAndFeel, javax.sound.sampled.Clip) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel javax.sound.sampled.Clip access$202(javax.swing.plaf.basic.BasicLookAndFeel, javax.sound.sampled.Clip)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel javax.swing.Action createAudioAction(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel javax.swing.Action createAudioAction(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel javax.swing.UIDefaults getDefaults()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel void initClassDefaults(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel void initComponentDefaults(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel void initResourceBundle(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel void loadSystemColors(javax.swing.UIDefaults, java.lang.String[], boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel void playSound(javax.swing.Action) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel.1 1(javax.swing.plaf.basic.BasicLookAndFeel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel.1 void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel.2 2(javax.swing.plaf.basic.BasicLookAndFeel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel.2 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel.2 java.lang.Object createValue(javax.swing.UIDefaults)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel.3 3(javax.swing.plaf.basic.BasicLookAndFeel, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel.AWTEventHelper void eventDispatched(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel.AudioAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicLookAndFeel.AudioAction void update(javax.sound.sampled.LineEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI BasicMenuBarUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI.Handler Handler(javax.swing.plaf.basic.BasicMenuBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI.Handler Handler(javax.swing.plaf.basic.BasicMenuBarUI, javax.swing.plaf.basic.BasicMenuBarUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI.Handler void componentAdded(java.awt.event.ContainerEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI.Handler void componentRemoved(java.awt.event.ContainerEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuBarUI.Handler void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI BasicMenuItemUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI javax.swing.MenuElement[] getPath()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI javax.swing.event.MenuDragMouseListener createMenuDragMouseListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI javax.swing.event.MenuKeyListener createMenuKeyListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI javax.swing.event.MenuKeyListener createMenuKeyListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void applyInsets(java.awt.Rectangle, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void doClick(javax.swing.MenuSelectionManager) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void installComponents(javax.swing.JMenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintAccText(java.awt.Graphics, sun.swing.MenuItemLayoutHelper, sun.swing.MenuItemLayoutHelper.LayoutResult) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintArrowIcon(java.awt.Graphics, sun.swing.MenuItemLayoutHelper, sun.swing.MenuItemLayoutHelper.LayoutResult, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintBackground(java.awt.Graphics, javax.swing.JMenuItem, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintBackground(java.awt.Graphics, javax.swing.JMenuItem, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintCheckIcon(java.awt.Graphics, sun.swing.MenuItemLayoutHelper, sun.swing.MenuItemLayoutHelper.LayoutResult, java.awt.Color, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintIcon(java.awt.Graphics, sun.swing.MenuItemLayoutHelper, sun.swing.MenuItemLayoutHelper.LayoutResult, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintMenuItem(java.awt.Graphics, javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, java.awt.Color, java.awt.Color, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintMenuItem(java.awt.Graphics, javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, java.awt.Color, java.awt.Color, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintText(java.awt.Graphics, javax.swing.JMenuItem, java.awt.Rectangle, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintText(java.awt.Graphics, javax.swing.JMenuItem, java.awt.Rectangle, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintText(java.awt.Graphics, javax.swing.JMenuItem, java.awt.Rectangle, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintText(java.awt.Graphics, javax.swing.JMenuItem, java.awt.Rectangle, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void paintText(java.awt.Graphics, sun.swing.MenuItemLayoutHelper, sun.swing.MenuItemLayoutHelper.LayoutResult) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void printMenuElementArray(javax.swing.MenuElement[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI void uninstallComponents(javax.swing.JMenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler Handler(javax.swing.plaf.basic.BasicMenuItemUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void menuDragMouseDragged(javax.swing.event.MenuDragMouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void menuDragMouseEntered(javax.swing.event.MenuDragMouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void menuDragMouseExited(javax.swing.event.MenuDragMouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void menuDragMouseExited(javax.swing.event.MenuDragMouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void mousePressed(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuItemUI.MouseInputHandler MouseInputHandler(javax.swing.plaf.basic.BasicMenuItemUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI boolean access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI javax.swing.event.MenuDragMouseListener createMenuDragMouseListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI javax.swing.event.MenuKeyListener createMenuKeyListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI javax.swing.event.MenuListener createMenuListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI javax.swing.event.MenuListener createMenuListener(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI void access$200(javax.swing.MenuElement[], javax.swing.MenuElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI void access$300(javax.swing.plaf.basic.BasicMenuUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI void appendPath(javax.swing.MenuElement[], javax.swing.MenuElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI void setupPostTimer(javax.swing.JMenu) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Actions boolean isEnabled(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Actions boolean isEnabled(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Actions javax.swing.JMenu getMenu(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.ChangeHandler ChangeHandler(javax.swing.plaf.basic.BasicMenuUI, javax.swing.JMenu, javax.swing.plaf.basic.BasicMenuUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.ChangeHandler void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.ChangeHandler void stateChanged(javax.swing.event.ChangeEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler Handler(javax.swing.plaf.basic.BasicMenuUI, javax.swing.plaf.basic.BasicMenuUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void menuDragMouseEntered(javax.swing.event.MenuDragMouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void menuDragMouseEntered(javax.swing.event.MenuDragMouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void menuDragMouseExited(javax.swing.event.MenuDragMouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void menuDragMouseExited(javax.swing.event.MenuDragMouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void menuDragMouseReleased(javax.swing.event.MenuDragMouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void menuDragMouseReleased(javax.swing.event.MenuDragMouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void menuKeyPressed(javax.swing.event.MenuKeyEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void menuKeyPressed(javax.swing.event.MenuKeyEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void menuKeyReleased(javax.swing.event.MenuKeyEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void menuKeyReleased(javax.swing.event.MenuKeyEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicMenuUI.MouseInputHandler MouseInputHandler(javax.swing.plaf.basic.BasicMenuUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI BasicOptionPaneUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI boolean containsCustomComponents(javax.swing.JOptionPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI boolean containsCustomComponents(javax.swing.JOptionPane)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI boolean getSizeButtonsToSameWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI java.awt.Container createButtonArea()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI java.awt.Container createMessageArea()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI java.awt.Container createSeparator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI java.awt.Dimension getMinimumOptionPaneSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI java.awt.LayoutManager createLayoutManager()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI java.awt.event.ActionListener createButtonActionListener(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI javax.swing.plaf.basic.BasicOptionPaneUI.Handler access$100(javax.swing.plaf.basic.BasicOptionPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI void addButtonComponents(java.awt.Container, java.lang.Object[], int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI void addMessageComponents(java.awt.Container, java.awt.GridBagConstraints, java.lang.Object, int, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI void burstStringInto(java.awt.Container, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI void selectInitialValue(javax.swing.JOptionPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.1 java.awt.Dimension getPreferredSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.2 2(javax.swing.plaf.basic.BasicOptionPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.2 void hierarchyChanged(java.awt.event.HierarchyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonActionListener ButtonActionListener(javax.swing.plaf.basic.BasicOptionPaneUI, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonActionListener void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout ButtonAreaLayout(boolean, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout boolean getCentersChildren()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout boolean getSyncAllWidths()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout int getPadding()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout java.awt.Dimension minimumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout void setCentersChildren(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout void setPadding(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout void setSyncAllWidths(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonFactory ButtonFactory(java.lang.String, int, javax.swing.Icon, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.ButtonFactory javax.swing.JButton createButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler Handler(javax.swing.plaf.basic.BasicOptionPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler Handler(javax.swing.plaf.basic.BasicOptionPaneUI, javax.swing.plaf.basic.BasicOptionPaneUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler void mouseReleased(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.MultiplexingTextField void setKeyStrokes(javax.swing.KeyStroke[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicOptionPaneUI.PropertyChangeHandler PropertyChangeHandler(javax.swing.plaf.basic.BasicOptionPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPanelUI BasicPanelUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPanelUI int getBaseline(javax.swing.JComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPanelUI java.awt.Component.BaselineResizeBehavior getBaselineResizeBehavior(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPanelUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPanelUI void installDefaults(javax.swing.JPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPanelUI void uninstallDefaults(javax.swing.JPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPasswordFieldUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPasswordFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPasswordFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPasswordFieldUI javax.swing.text.View create(javax.swing.text.Element)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuSeparatorUI BasicPopupMenuSeparatorUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuSeparatorUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuSeparatorUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuSeparatorUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuSeparatorUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI boolean access$300(javax.swing.MenuElement, javax.swing.MenuElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI boolean access$300(javax.swing.MenuElement, javax.swing.MenuElement) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI boolean checkInvokerEqual(javax.swing.MenuElement, javax.swing.MenuElement) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI boolean checkInvokerEqual(javax.swing.MenuElement, javax.swing.MenuElement) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI boolean isPopupTrigger(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI javax.swing.InputMap getInputMap(javax.swing.JPopupMenu, javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI javax.swing.MenuElement findEnabledChild(javax.swing.MenuElement[], int, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI javax.swing.MenuElement findEnabledChild(javax.swing.MenuElement[], javax.swing.MenuElement, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI javax.swing.MenuElement findEnabledChild(javax.swing.MenuElement[], javax.swing.MenuElement, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI javax.swing.MenuElement nextEnabledChild(javax.swing.MenuElement[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI javax.swing.MenuElement previousEnabledChild(javax.swing.MenuElement[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI void installKeyboardActions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.BasicMenuKeyListener BasicMenuKeyListener(javax.swing.plaf.basic.BasicPopupMenuUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.BasicMenuKeyListener BasicMenuKeyListener(javax.swing.plaf.basic.BasicPopupMenuUI, javax.swing.plaf.basic.BasicPopupMenuUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.BasicMenuKeyListener void menuKeyPressed(javax.swing.event.MenuKeyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.BasicMenuKeyListener void menuKeyReleased(javax.swing.event.MenuKeyEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.BasicMenuKeyListener void menuKeyReleased(javax.swing.event.MenuKeyEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.BasicPopupMenuListener BasicPopupMenuListener(javax.swing.plaf.basic.BasicPopupMenuUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.BasicPopupMenuListener BasicPopupMenuListener(javax.swing.plaf.basic.BasicPopupMenuUI, javax.swing.plaf.basic.BasicPopupMenuUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.BasicPopupMenuListener void popupMenuCanceled(javax.swing.event.PopupMenuEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.BasicPopupMenuListener void popupMenuCanceled(javax.swing.event.PopupMenuEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.BasicPopupMenuListener void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.BasicPopupMenuListener void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.BasicPopupMenuListener void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper java.awt.Component access$202(javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper java.awt.Component access$202(javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper javax.swing.JPopupMenu getActivePopup(javax.swing.MenuElement[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper javax.swing.JPopupMenu getActivePopup(javax.swing.MenuElement[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper void addUIActionMap(javax.swing.JComponent, javax.swing.ActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper void addUIActionMap(javax.swing.JComponent, javax.swing.ActionMap) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper void addUIInputMap(javax.swing.JComponent, javax.swing.InputMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper void addUIInputMap(javax.swing.JComponent, javax.swing.InputMap) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper void removeUIActionMap(javax.swing.JComponent, javax.swing.ActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper void removeUIInputMap(javax.swing.JComponent, javax.swing.InputMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper.1 1(javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MenuKeyboardHelper.1 void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber boolean isInPopup(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber boolean isInPopup(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void componentHidden(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void componentMoved(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void componentResized(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void componentShown(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void eventDispatched(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void grabWindow(javax.swing.MenuElement[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void windowActivated(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void windowActivated(java.awt.event.WindowEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void windowClosed(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void windowClosing(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void windowDeactivated(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void windowDeiconified(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void windowDeiconified(java.awt.event.WindowEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void windowIconified(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void windowOpened(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber void windowOpened(java.awt.event.WindowEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber.1 1(javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber, java.awt.Toolkit)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber.2 2(javax.swing.plaf.basic.BasicPopupMenuUI.MouseGrabber, java.awt.Toolkit)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI BasicProgressBarUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI boolean access$400()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI int access$500(javax.swing.plaf.basic.BasicProgressBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI int access$500(javax.swing.plaf.basic.BasicProgressBarUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI int access$700(javax.swing.plaf.basic.BasicProgressBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI int access$700(javax.swing.plaf.basic.BasicProgressBarUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI int getAmountFull(java.awt.Insets, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI int getAnimationIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI int getCachedPercent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI int getCycleTime()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI int getFrameCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI int getRepaintInterval()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI java.awt.Color getSelectionBackground()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI java.awt.Color getSelectionForeground()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI java.awt.Point getStringPlacement(java.awt.Graphics, java.lang.String, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI java.awt.Point getStringPlacement(java.awt.Graphics, java.lang.String, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI java.awt.Point getStringPlacement(java.awt.Graphics, java.lang.String, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI java.awt.Rectangle getBox(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI java.awt.Rectangle getGenericBox(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI javax.swing.plaf.basic.BasicProgressBarUI.Handler access$600(javax.swing.plaf.basic.BasicProgressBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void access$1000(javax.swing.plaf.basic.BasicProgressBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void access$800(javax.swing.plaf.basic.BasicProgressBarUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void access$900(javax.swing.plaf.basic.BasicProgressBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void paintDeterminate(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void paintIndeterminate(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void paintIndeterminate(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void paintString(java.awt.Graphics, int, int, int, int, int, int, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void paintString(java.awt.Graphics, int, int, int, int, int, int, java.awt.Insets) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void paintString(java.awt.Graphics, int, int, int, int, int, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void paintString(java.awt.Graphics, int, int, int, int, int, java.awt.Insets) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void setCachedPercent(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void setCellLength(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void setCellSpacing(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI.Animator Animator(javax.swing.plaf.basic.BasicProgressBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI.Animator Animator(javax.swing.plaf.basic.BasicProgressBarUI, javax.swing.plaf.basic.BasicProgressBarUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI.Animator void access$200(javax.swing.plaf.basic.BasicProgressBarUI.Animator, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI.Animator void access$300(javax.swing.plaf.basic.BasicProgressBarUI.Animator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI.Animator void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI.ChangeHandler ChangeHandler(javax.swing.plaf.basic.BasicProgressBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI.Handler Handler(javax.swing.plaf.basic.BasicProgressBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI.Handler Handler(javax.swing.plaf.basic.BasicProgressBarUI, javax.swing.plaf.basic.BasicProgressBarUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI.Handler void hierarchyChanged(java.awt.event.HierarchyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicProgressBarUI.Handler void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonMenuItemUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonMenuItemUI void processMouseEvent(javax.swing.JMenuItem, java.awt.event.MouseEvent, javax.swing.MenuElement[], javax.swing.MenuSelectionManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonMenuItemUI void processMouseEvent(javax.swing.JMenuItem, java.awt.event.MouseEvent, javax.swing.MenuElement[], javax.swing.MenuSelectionManager) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonUI javax.swing.Icon getDefaultIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonUI void paintFocus(java.awt.Graphics, java.awt.Rectangle, java.awt.Dimension) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonUI void paintFocus(java.awt.Graphics, java.awt.Rectangle, java.awt.Dimension) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonUI void paintFocus(java.awt.Graphics, java.awt.Rectangle, java.awt.Dimension) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRadioButtonUI void paintFocus(java.awt.Graphics, java.awt.Rectangle, java.awt.Dimension)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI BasicRootPaneUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI javax.swing.ComponentInputMap createInputMap(int, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI javax.swing.ComponentInputMap createInputMap(int, javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void installComponents(javax.swing.JRootPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void installComponents(javax.swing.JRootPane)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void installDefaults(javax.swing.JRootPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void installKeyboardActions(javax.swing.JRootPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void installListeners(javax.swing.JRootPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void uninstallComponents(javax.swing.JRootPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void uninstallComponents(javax.swing.JRootPane)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void uninstallDefaults(javax.swing.JRootPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void uninstallDefaults(javax.swing.JRootPane)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void uninstallKeyboardActions(javax.swing.JRootPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void uninstallListeners(javax.swing.JRootPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI void updateDefaultButtonBindings(javax.swing.JRootPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI.Actions boolean isEnabled(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicRootPaneUI.RootPaneInputMap RootPaneInputMap(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI BasicScrollBarUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI boolean access$100(javax.swing.plaf.basic.BasicScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI boolean access$100(javax.swing.plaf.basic.BasicScrollBarUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI boolean access$102(javax.swing.plaf.basic.BasicScrollBarUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI boolean access$102(javax.swing.plaf.basic.BasicScrollBarUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI boolean access$400(javax.swing.plaf.basic.BasicScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI boolean access$500(javax.swing.plaf.basic.BasicScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI boolean getSupportsAbsolutePositioning()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI boolean isThumbRollover()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI int access$200(javax.swing.plaf.basic.BasicScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI int access$200(javax.swing.plaf.basic.BasicScrollBarUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI int access$202(javax.swing.plaf.basic.BasicScrollBarUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI java.awt.Dimension getMaximumThumbSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI java.awt.Dimension getMinimumThumbSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI java.awt.Rectangle getThumbBounds()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI java.awt.Rectangle getTrackBounds()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI javax.swing.InputMap access$800(javax.swing.plaf.basic.BasicScrollBarUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI javax.swing.JButton createDecreaseButton(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI javax.swing.JButton createIncreaseButton(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI javax.swing.plaf.basic.BasicScrollBarUI.ArrowButtonListener createArrowButtonListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI javax.swing.plaf.basic.BasicScrollBarUI.Handler access$600(javax.swing.plaf.basic.BasicScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI javax.swing.plaf.basic.BasicScrollBarUI.ModelListener createModelListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI javax.swing.plaf.basic.BasicScrollBarUI.ScrollListener createScrollListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI javax.swing.plaf.basic.BasicScrollBarUI.TrackListener createTrackListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void access$300(javax.swing.plaf.basic.BasicScrollBarUI, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void access$700(javax.swing.plaf.basic.BasicScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void layoutHScrollbar(javax.swing.JScrollBar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void layoutVScrollbar(javax.swing.JScrollBar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void paintDecreaseHighlight(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void paintIncreaseHighlight(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void paintThumb(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void paintThumb(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void paintTrack(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void paintTrack(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void paintTrack(java.awt.Graphics, javax.swing.JComponent, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI void scrollByBlock(javax.swing.JScrollBar, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.ArrowButtonListener ArrowButtonListener(javax.swing.plaf.basic.BasicScrollBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.ArrowButtonListener void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.Handler Handler(javax.swing.plaf.basic.BasicScrollBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.Handler Handler(javax.swing.plaf.basic.BasicScrollBarUI, javax.swing.plaf.basic.BasicScrollBarUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.Handler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.Handler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.ModelListener ModelListener(javax.swing.plaf.basic.BasicScrollBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.ModelListener void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.PropertyChangeHandler PropertyChangeHandler(javax.swing.plaf.basic.BasicScrollBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.ScrollListener ScrollListener(javax.swing.plaf.basic.BasicScrollBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.ScrollListener ScrollListener(javax.swing.plaf.basic.BasicScrollBarUI, int, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.ScrollListener void setDirection(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.ScrollListener void setScrollByBlock(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.TrackListener TrackListener(javax.swing.plaf.basic.BasicScrollBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.TrackListener void mouseDragged(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.TrackListener void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.TrackListener void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.TrackListener void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollBarUI.TrackListener void setValueFrom(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI BasicScrollPaneUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI boolean access$102(javax.swing.plaf.basic.BasicScrollPaneUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI boolean access$102(javax.swing.plaf.basic.BasicScrollPaneUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI int getBaseline(javax.swing.JComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI javax.swing.plaf.basic.BasicScrollPaneUI.Handler access$000(javax.swing.plaf.basic.BasicScrollPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void access$200(javax.swing.plaf.basic.BasicScrollPaneUI, java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void access$200(javax.swing.plaf.basic.BasicScrollPaneUI, java.beans.PropertyChangeEvent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void access$300(javax.swing.plaf.basic.BasicScrollPaneUI, java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void access$300(javax.swing.plaf.basic.BasicScrollPaneUI, java.beans.PropertyChangeEvent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void installDefaults(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void installKeyboardActions(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void installListeners(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void uninstallDefaults(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void uninstallKeyboardActions(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void uninstallListeners(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void updateColumnHeader(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void updateHorizontalScrollBar(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void updateRowHeader(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void updateScrollBar(java.beans.PropertyChangeEvent, javax.swing.event.ChangeListener, java.beans.PropertyChangeListener) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void updateScrollBar(java.beans.PropertyChangeEvent, javax.swing.event.ChangeListener, java.beans.PropertyChangeListener) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void updateScrollBar(java.beans.PropertyChangeEvent, javax.swing.event.ChangeListener, java.beans.PropertyChangeListener) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void updateScrollBarDisplayPolicy(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void updateVerticalScrollBar(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI void updateViewport(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.Actions void scroll(javax.swing.JScrollPane, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.Actions void scrollEnd(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.Actions void scrollHome(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.HSBChangeListener HSBChangeListener(javax.swing.plaf.basic.BasicScrollPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.Handler Handler(javax.swing.plaf.basic.BasicScrollPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.Handler void hsbStateChanged(javax.swing.JViewport, javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.Handler void hsbStateChanged(javax.swing.JViewport, javax.swing.event.ChangeEvent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.Handler void sbPropertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.Handler void scrollPanePropertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.Handler void vsbStateChanged(javax.swing.JViewport, javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.Handler void vsbStateChanged(javax.swing.JViewport, javax.swing.event.ChangeEvent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.MouseWheelHandler MouseWheelHandler(javax.swing.plaf.basic.BasicScrollPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.PropertyChangeHandler PropertyChangeHandler(javax.swing.plaf.basic.BasicScrollPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.VSBChangeListener VSBChangeListener(javax.swing.plaf.basic.BasicScrollPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicScrollPaneUI.ViewportChangeHandler ViewportChangeHandler(javax.swing.plaf.basic.BasicScrollPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI BasicSeparatorUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI void installDefaults(javax.swing.JSeparator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI void installListeners(javax.swing.JSeparator) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI void installListeners(javax.swing.JSeparator)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI void uninstallDefaults(javax.swing.JSeparator) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI void uninstallDefaults(javax.swing.JSeparator)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI void uninstallListeners(javax.swing.JSeparator) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSeparatorUI void uninstallListeners(javax.swing.JSeparator)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI BasicSliderUI(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI BasicSliderUI(javax.swing.JSlider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI boolean access$200(javax.swing.plaf.basic.BasicSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI boolean access$200(javax.swing.plaf.basic.BasicSliderUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI boolean access$202(javax.swing.plaf.basic.BasicSliderUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI boolean access$202(javax.swing.plaf.basic.BasicSliderUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI boolean access$402(javax.swing.plaf.basic.BasicSliderUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI boolean access$402(javax.swing.plaf.basic.BasicSliderUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI boolean isDragging()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI int access$302(javax.swing.plaf.basic.BasicSliderUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI int getTickLength()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI java.awt.Color getFocusColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI java.awt.Color getHighlightColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI java.awt.Color getShadowColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI java.awt.Dimension getThumbSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI java.awt.event.ComponentListener createComponentListener(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI java.awt.event.FocusListener createFocusListener(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI javax.swing.InputMap getInputMap(int, javax.swing.JSlider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI javax.swing.event.ChangeListener createChangeListener(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI javax.swing.plaf.basic.BasicSliderUI.Actions access$500()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI javax.swing.plaf.basic.BasicSliderUI.Handler access$100(javax.swing.plaf.basic.BasicSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI javax.swing.plaf.basic.BasicSliderUI.ScrollListener createScrollListener(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI javax.swing.plaf.basic.BasicSliderUI.ScrollListener createScrollListener(javax.swing.JSlider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI javax.swing.plaf.basic.BasicSliderUI.TrackListener createTrackListener(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI javax.swing.plaf.basic.BasicSliderUI.TrackListener createTrackListener(javax.swing.JSlider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void installDefaults(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void installKeyboardActions(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void installListeners(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintFocus(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintHorizontalLabel(java.awt.Graphics, int, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintHorizontalLabel(java.awt.Graphics, int, java.awt.Component) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintMajorTickForHorizSlider(java.awt.Graphics, java.awt.Rectangle, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintMajorTickForHorizSlider(java.awt.Graphics, java.awt.Rectangle, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintMajorTickForVertSlider(java.awt.Graphics, java.awt.Rectangle, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintMajorTickForVertSlider(java.awt.Graphics, java.awt.Rectangle, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintMinorTickForHorizSlider(java.awt.Graphics, java.awt.Rectangle, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintMinorTickForHorizSlider(java.awt.Graphics, java.awt.Rectangle, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintMinorTickForVertSlider(java.awt.Graphics, java.awt.Rectangle, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintMinorTickForVertSlider(java.awt.Graphics, java.awt.Rectangle, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintThumb(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintTicks(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintTrack(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintVerticalLabel(java.awt.Graphics, int, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void paintVerticalLabel(java.awt.Graphics, int, java.awt.Component) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void uninstallDefaults(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void uninstallKeyboardActions(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void uninstallListeners(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.ActionScroller void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Actions void access$600(javax.swing.plaf.basic.BasicSliderUI.Actions, javax.swing.JSlider, javax.swing.plaf.basic.BasicSliderUI, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Actions void access$600(javax.swing.plaf.basic.BasicSliderUI.Actions, javax.swing.JSlider, javax.swing.plaf.basic.BasicSliderUI, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Actions void scroll(javax.swing.JSlider, javax.swing.plaf.basic.BasicSliderUI, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.ChangeHandler ChangeHandler(javax.swing.plaf.basic.BasicSliderUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.ComponentHandler ComponentHandler(javax.swing.plaf.basic.BasicSliderUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.FocusHandler FocusHandler(javax.swing.plaf.basic.BasicSliderUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler Handler(javax.swing.plaf.basic.BasicSliderUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler Handler(javax.swing.plaf.basic.BasicSliderUI, javax.swing.plaf.basic.BasicSliderUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler void componentHidden(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler void componentHidden(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler void componentMoved(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler void componentMoved(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler void componentResized(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler void componentShown(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler void componentShown(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.Handler void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.PropertyChangeHandler PropertyChangeHandler(javax.swing.plaf.basic.BasicSliderUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.ScrollListener ScrollListener(javax.swing.plaf.basic.BasicSliderUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.ScrollListener ScrollListener(javax.swing.plaf.basic.BasicSliderUI, int, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.ScrollListener void setDirection(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.ScrollListener void setScrollByBlock(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.SharedActionScroller void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.TrackListener TrackListener(javax.swing.plaf.basic.BasicSliderUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.TrackListener void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.TrackListener void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSliderUI.TrackListener void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI BasicSpinnerUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI java.awt.Component createArrowButton(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI java.awt.Component createNextButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI java.awt.Component createPreviousButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI java.awt.Dimension access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler access$300()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler access$400()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void access$200(javax.swing.plaf.basic.BasicSpinnerUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void access$500(javax.swing.plaf.basic.BasicSpinnerUI, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void access$500(javax.swing.plaf.basic.BasicSpinnerUI, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void installButtonListeners(java.awt.Component, javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void installEditorBorderListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void installNextButtonListeners(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void installPreviousButtonListeners(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void maybeAdd(java.awt.Component, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void maybeRemoveEditorBorder(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void removeEditorBorderListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void replaceEditor(javax.swing.JComponent, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void updateEditorAlignment(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI void updateEnabledState(java.awt.Container, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler boolean select(javax.swing.JFormattedTextField, java.text.AttributedCharacterIterator, java.text.DateFormat.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler boolean select(javax.swing.JFormattedTextField, java.text.AttributedCharacterIterator, java.text.DateFormat.Field) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler int getCalendarField(javax.swing.JSpinner) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler javax.swing.JSpinner eventToSpinner(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler void focusGained(java.awt.event.FocusEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.ArrowButtonHandler void select(javax.swing.JSpinner) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler Handler()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler Handler(javax.swing.plaf.basic.BasicSpinnerUI.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler java.awt.Dimension preferredLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler java.awt.Dimension preferredSize(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler void setBounds(java.awt.Component, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSpinnerUI.Handler void updateToolTipTextForChildren(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider BasicSplitPaneDivider(javax.swing.plaf.basic.BasicSplitPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider boolean access$100(javax.swing.plaf.basic.BasicSplitPaneDivider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider boolean access$100(javax.swing.plaf.basic.BasicSplitPaneDivider)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider boolean isMouseOver()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider int access$000(javax.swing.plaf.basic.BasicSplitPaneDivider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider int access$000(javax.swing.plaf.basic.BasicSplitPaneDivider)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider int access$200(javax.swing.plaf.basic.BasicSplitPaneDivider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider int access$200(javax.swing.plaf.basic.BasicSplitPaneDivider)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider int getDividerSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider java.awt.Dimension getPreferredSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider javax.swing.JButton createLeftOneTouchButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider javax.swing.JButton createRightOneTouchButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider javax.swing.border.Border getBorder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider javax.swing.plaf.basic.BasicSplitPaneUI getBasicSplitPaneUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider void setBorder(javax.swing.border.Border)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider void setDividerSize(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider void setMouseOver(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.1 boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.1 void setBorder(javax.swing.border.Border) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.1 void setBorder(javax.swing.border.Border)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.2 boolean isFocusTraversable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.2 void setBorder(javax.swing.border.Border) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.2 void setBorder(javax.swing.border.Border)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DividerLayout DividerLayout(javax.swing.plaf.basic.BasicSplitPaneDivider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DividerLayout java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DividerLayout java.awt.Dimension minimumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DividerLayout void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DividerLayout void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DividerLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DividerLayout void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DividerLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DragController DragController(javax.swing.plaf.basic.BasicSplitPaneDivider, java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DragController DragController(javax.swing.plaf.basic.BasicSplitPaneDivider, java.awt.event.MouseEvent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DragController boolean isValid()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DragController int getNeededLocation(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.DragController int positionForMouseEvent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler MouseHandler(javax.swing.plaf.basic.BasicSplitPaneDivider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.MouseHandler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.OneTouchActionHandler OneTouchActionHandler(javax.swing.plaf.basic.BasicSplitPaneDivider, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.OneTouchActionHandler void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.VerticalDragController VerticalDragController(javax.swing.plaf.basic.BasicSplitPaneDivider, java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.VerticalDragController VerticalDragController(javax.swing.plaf.basic.BasicSplitPaneDivider, java.awt.event.MouseEvent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.VerticalDragController int getNeededLocation(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneDivider.VerticalDragController int positionForMouseEvent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI BasicSplitPaneUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI boolean access$200(javax.swing.plaf.basic.BasicSplitPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI boolean access$200(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI boolean access$202(javax.swing.plaf.basic.BasicSplitPaneUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI boolean access$202(javax.swing.plaf.basic.BasicSplitPaneUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI boolean access$500(javax.swing.plaf.basic.BasicSplitPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI boolean access$500(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI boolean access$502(javax.swing.plaf.basic.BasicSplitPaneUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI boolean access$502(javax.swing.plaf.basic.BasicSplitPaneUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI boolean access$600(javax.swing.plaf.basic.BasicSplitPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI boolean access$600(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI boolean getKeepHidden()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI boolean isContinuousLayout()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI int access$300(javax.swing.plaf.basic.BasicSplitPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI int access$300(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI int access$302(javax.swing.plaf.basic.BasicSplitPaneUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI int getDividerBorderSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI int getDividerLocation(javax.swing.JSplitPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI int getKeyboardMoveIncrement()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI int getLastDragLocation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI int getMaximumDividerLocation(javax.swing.JSplitPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI int getMinimumDividerLocation(javax.swing.JSplitPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI int getOrientation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.Color access$400(javax.swing.plaf.basic.BasicSplitPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.Color access$400(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.Component createDefaultNonContinuousLayoutDivider()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.Component getNonContinuousLayoutDivider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.Insets getInsets(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.Insets getInsets(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.event.ActionListener createKeyboardDownRightListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.event.ActionListener createKeyboardEndListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.event.ActionListener createKeyboardHomeListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.event.ActionListener createKeyboardResizeToggleListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI java.awt.event.ActionListener createKeyboardUpLeftListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI javax.swing.JSplitPane getSplitPane()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI javax.swing.plaf.basic.BasicSplitPaneDivider createDefaultDivider()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI javax.swing.plaf.basic.BasicSplitPaneDivider getDivider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI javax.swing.plaf.basic.BasicSplitPaneUI.Handler access$100(javax.swing.plaf.basic.BasicSplitPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI void finishedPaintingChildren(javax.swing.JSplitPane, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI void resetToPreferredSizes(javax.swing.JSplitPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI void setContinuousLayout(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI void setDividerLocation(javax.swing.JSplitPane, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI void setKeepHidden(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI void setLastDragLocation(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI void setOrientation(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.Actions java.awt.Component getFirstAvailableComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.Actions java.awt.Component getNextSide(javax.swing.JSplitPane, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.Actions void moveFocus(javax.swing.JSplitPane, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.Actions void toggleFocus(javax.swing.JSplitPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager float getLayoutAlignmentX(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager float getLayoutAlignmentX(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager float getLayoutAlignmentY(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager float getLayoutAlignmentY(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getAvailableSize(java.awt.Dimension, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getInitialLocation(java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getMinimumSizeOfComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getPreferredSizeOfComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getSizeForPrimaryAxis(java.awt.Dimension) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getSizeForPrimaryAxis(java.awt.Dimension)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getSizeForPrimaryAxis(java.awt.Insets, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getSizeForPrimaryAxis(java.awt.Insets, boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getSizeForSecondaryAxis(java.awt.Dimension) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getSizeForSecondaryAxis(java.awt.Dimension)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getSizeForSecondaryAxis(java.awt.Insets, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getSizeForSecondaryAxis(java.awt.Insets, boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int getSizeOfComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager int[] getSizes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager java.awt.Dimension maximumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager java.awt.Dimension maximumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager java.awt.Dimension minimumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager java.awt.Dimension preferredLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager void invalidateLayout(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager void invalidateLayout(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager void resetToPreferredSizes()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager void setComponentToSize(java.awt.Component, int, int, java.awt.Insets, java.awt.Dimension) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager void setComponentToSize(java.awt.Component, int, int, java.awt.Insets, java.awt.Dimension) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.BasicHorizontalLayoutManager void setComponentToSize(java.awt.Component, int, int, java.awt.Insets, java.awt.Dimension) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.FocusHandler FocusHandler(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.Handler Handler(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.Handler Handler(javax.swing.plaf.basic.BasicSplitPaneUI, javax.swing.plaf.basic.BasicSplitPaneUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.Handler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.Handler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardDownRightHandler KeyboardDownRightHandler(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardDownRightHandler void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardEndHandler KeyboardEndHandler(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardEndHandler void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardHomeHandler KeyboardHomeHandler(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardHomeHandler void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardResizeToggleHandler KeyboardResizeToggleHandler(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardResizeToggleHandler void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardUpLeftHandler KeyboardUpLeftHandler(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.KeyboardUpLeftHandler void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicSplitPaneUI.PropertyHandler PropertyHandler(javax.swing.plaf.basic.BasicSplitPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI boolean access$1100(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI boolean access$1100(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI boolean access$1402(javax.swing.plaf.basic.BasicTabbedPaneUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI boolean access$1402(javax.swing.plaf.basic.BasicTabbedPaneUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI boolean access$400(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI boolean access$702(javax.swing.plaf.basic.BasicTabbedPaneUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI boolean access$702(javax.swing.plaf.basic.BasicTabbedPaneUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI boolean shouldPadTabRun(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI boolean shouldRotateTabRuns(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int access$1200(javax.swing.plaf.basic.BasicTabbedPaneUI, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int access$2100(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int access$2100(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int getFocusIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int getNextTabRun(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int getPreviousTabRun(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int getRolloverTab()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int getTabRunCount(javax.swing.JTabbedPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int getTabRunIndent(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int getTabRunOverlay(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int lastTabInRun(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int tabForCoordinate(javax.swing.JTabbedPane, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI int tabForCoordinate(javax.swing.JTabbedPane, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Color access$1600(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Color access$1600(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Component getVisibleComponent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Insets access$1000(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Insets access$1000(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Insets getContentBorderInsets(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Insets getTabInsets(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.LayoutManager createLayoutManager()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Point access$800(javax.swing.plaf.basic.BasicTabbedPaneUI, int, int, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Point access$800(javax.swing.plaf.basic.BasicTabbedPaneUI, int, int, java.awt.Point) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Point access$800(javax.swing.plaf.basic.BasicTabbedPaneUI, int, int, java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Point translatePointToTabPanel(int, int, java.awt.Point) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Point translatePointToTabPanel(int, int, java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Polygon access$2600(int, java.awt.Rectangle, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Polygon access$2600(int, java.awt.Rectangle, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Polygon createCroppedTabShape(int, java.awt.Rectangle, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Polygon createCroppedTabShape(int, java.awt.Rectangle, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Rectangle getTabBounds(int, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Rectangle getTabBounds(int, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.awt.Rectangle getTabBounds(javax.swing.JTabbedPane, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.util.Hashtable access$300(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.util.Hashtable access$300(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.util.Vector access$1500(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.util.Vector access$1500(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.util.Vector access$1502(javax.swing.plaf.basic.BasicTabbedPaneUI, java.util.Vector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.util.Vector access$1502(javax.swing.plaf.basic.BasicTabbedPaneUI, java.util.Vector)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI java.util.Vector access$1900(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI javax.swing.JButton createScrollButton(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI javax.swing.plaf.basic.BasicTabbedPaneUI.Handler access$2400(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI javax.swing.plaf.basic.BasicTabbedPaneUI.ScrollableTabSupport access$500(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI javax.swing.plaf.basic.BasicTabbedPaneUI.ScrollableTabSupport access$500(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI javax.swing.plaf.basic.BasicTabbedPaneUI.TabContainer access$600(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI javax.swing.plaf.basic.BasicTabbedPaneUI.TabContainer access$600(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void access$1300(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void access$1800(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void access$2000(javax.swing.plaf.basic.BasicTabbedPaneUI, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void access$2200(javax.swing.plaf.basic.BasicTabbedPaneUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void access$2300(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void access$2700(javax.swing.plaf.basic.BasicTabbedPaneUI, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void access$2700(javax.swing.plaf.basic.BasicTabbedPaneUI, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void expandTabRunsArray()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void layoutLabel(int, java.awt.FontMetrics, int, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, boolean) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void layoutLabel(int, java.awt.FontMetrics, int, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, boolean) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void layoutLabel(int, java.awt.FontMetrics, int, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, boolean) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void layoutLabel(int, java.awt.FontMetrics, int, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, boolean) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintContentBorderBottomEdge(java.awt.Graphics, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintContentBorderLeftEdge(java.awt.Graphics, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintContentBorderRightEdge(java.awt.Graphics, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintContentBorderTopEdge(java.awt.Graphics, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintCroppedTabEdge(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintFocusIndicator(java.awt.Graphics, int, java.awt.Rectangle[], int, java.awt.Rectangle, java.awt.Rectangle, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintFocusIndicator(java.awt.Graphics, int, java.awt.Rectangle[], int, java.awt.Rectangle, java.awt.Rectangle, boolean) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintFocusIndicator(java.awt.Graphics, int, java.awt.Rectangle[], int, java.awt.Rectangle, java.awt.Rectangle, boolean) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintIcon(java.awt.Graphics, int, int, javax.swing.Icon, java.awt.Rectangle, boolean) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintTab(java.awt.Graphics, int, java.awt.Rectangle[], int, java.awt.Rectangle, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintTabArea(java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintTabBackground(java.awt.Graphics, int, int, int, int, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintTabBorder(java.awt.Graphics, int, int, int, int, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintText(java.awt.Graphics, int, java.awt.Font, java.awt.FontMetrics, int, java.lang.String, java.awt.Rectangle, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void paintText(java.awt.Graphics, int, java.awt.Font, java.awt.FontMetrics, int, java.lang.String, java.awt.Rectangle, boolean) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void rotateInsets(java.awt.Insets, java.awt.Insets, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void rotateInsets(java.awt.Insets, java.awt.Insets, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void setRolloverTab(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void uninstallDefaults()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.CroppedEdge boolean isParamsSet()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.CroppedEdge int getCropline()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.CroppedEdge int getCroppedSideWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.CroppedEdge int getTabIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.FocusHandler FocusHandler(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler Handler(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler Handler(javax.swing.plaf.basic.BasicTabbedPaneUI, javax.swing.plaf.basic.BasicTabbedPaneUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void componentAdded(java.awt.event.ContainerEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void componentRemoved(java.awt.event.ContainerEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void mouseDragged(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void mouseDragged(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void mouseReleased(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.Handler void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.MouseHandler MouseHandler(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.PropertyChangeHandler PropertyChangeHandler(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.ScrollableTabPanel ScrollableTabPanel(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.ScrollableTabSupport ScrollableTabSupport(javax.swing.plaf.basic.BasicTabbedPaneUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.ScrollableTabSupport java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.ScrollableTabSupport void access$2500(javax.swing.plaf.basic.BasicTabbedPaneUI.ScrollableTabSupport) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.ScrollableTabSupport void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.ScrollableTabViewport ScrollableTabViewport(javax.swing.plaf.basic.BasicTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabContainer boolean access$102(javax.swing.plaf.basic.BasicTabbedPaneUI.TabContainer, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabContainer boolean access$102(javax.swing.plaf.basic.BasicTabbedPaneUI.TabContainer, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabContainer void access$1700(javax.swing.plaf.basic.BasicTabbedPaneUI.TabContainer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabSelectionHandler TabSelectionHandler(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout TabbedPaneLayout(javax.swing.plaf.basic.BasicTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout java.awt.Dimension calculateSize(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout void access$900(javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneScrollLayout TabbedPaneScrollLayout(javax.swing.plaf.basic.BasicTabbedPaneUI, javax.swing.plaf.basic.BasicTabbedPaneUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTabbedPaneUI.TabbedPaneScrollLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI BasicTableHeaderUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI boolean access$200(javax.swing.table.TableColumn, javax.swing.table.JTableHeader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI boolean access$200(javax.swing.table.TableColumn, javax.swing.table.JTableHeader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI boolean canResize(javax.swing.table.TableColumn, javax.swing.table.JTableHeader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI boolean canResize(javax.swing.table.TableColumn, javax.swing.table.JTableHeader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int access$000(javax.swing.plaf.basic.BasicTableHeaderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int access$300(javax.swing.plaf.basic.BasicTableHeaderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int access$300(javax.swing.plaf.basic.BasicTableHeaderUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int access$302(javax.swing.plaf.basic.BasicTableHeaderUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int access$500(javax.swing.plaf.basic.BasicTableHeaderUI, javax.swing.table.TableColumn, javax.swing.table.JTableHeader, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int access$500(javax.swing.plaf.basic.BasicTableHeaderUI, javax.swing.table.TableColumn, javax.swing.table.JTableHeader, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int access$500(javax.swing.plaf.basic.BasicTableHeaderUI, javax.swing.table.TableColumn, javax.swing.table.JTableHeader, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int access$600(javax.swing.plaf.basic.BasicTableHeaderUI, javax.swing.table.TableColumn) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int access$600(javax.swing.plaf.basic.BasicTableHeaderUI, javax.swing.table.TableColumn) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int access$700(javax.swing.plaf.basic.BasicTableHeaderUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int access$800(javax.swing.plaf.basic.BasicTableHeaderUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int changeColumnWidth(javax.swing.table.TableColumn, javax.swing.table.JTableHeader, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int changeColumnWidth(javax.swing.table.TableColumn, javax.swing.table.JTableHeader, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int getRolloverColumn()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI int viewIndexForColumn(javax.swing.table.TableColumn) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI java.awt.Cursor access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI java.awt.Dimension createHeaderSize(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI javax.swing.event.MouseInputListener createMouseInputListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI void access$400(javax.swing.plaf.basic.BasicTableHeaderUI, java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI void paintCell(java.awt.Graphics, java.awt.Rectangle, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI void rolloverColumnUpdated(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI void uninstallDefaults()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.1 void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.1 void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.1 void repaintHeader(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.Actions boolean isEnabled(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.Actions boolean isEnabled(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.Actions boolean maybeMoveColumn(boolean, javax.swing.table.JTableHeader, javax.swing.plaf.basic.BasicTableHeaderUI, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.Actions boolean maybeMoveColumn(boolean, javax.swing.table.JTableHeader, javax.swing.plaf.basic.BasicTableHeaderUI, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.Actions boolean maybeMoveColumn(boolean, javax.swing.table.JTableHeader, javax.swing.plaf.basic.BasicTableHeaderUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,true-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.Actions void moveColumn(boolean, javax.swing.table.JTableHeader, javax.swing.plaf.basic.BasicTableHeaderUI) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.Actions void moveColumn(boolean, javax.swing.table.JTableHeader, javax.swing.plaf.basic.BasicTableHeaderUI) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.Actions void resize(boolean, javax.swing.table.JTableHeader, javax.swing.plaf.basic.BasicTableHeaderUI) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.Actions void resize(boolean, javax.swing.table.JTableHeader, javax.swing.plaf.basic.BasicTableHeaderUI) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.MouseInputHandler MouseInputHandler(javax.swing.plaf.basic.BasicTableHeaderUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.MouseInputHandler javax.swing.table.TableColumn getResizingColumn(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.MouseInputHandler javax.swing.table.TableColumn getResizingColumn(java.awt.Point, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableHeaderUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI BasicTableUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI boolean access$300(javax.swing.plaf.basic.BasicTableUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI boolean access$300(javax.swing.plaf.basic.BasicTableUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI boolean access$302(javax.swing.plaf.basic.BasicTableUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI boolean access$302(javax.swing.plaf.basic.BasicTableUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI boolean access$400(javax.swing.plaf.basic.BasicTableUI, int, int, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI int access$000(javax.swing.JTable, boolean, javax.swing.ListSelectionModel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI int access$000(javax.swing.JTable, boolean, javax.swing.ListSelectionModel) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI int access$100(javax.swing.JTable, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI int getAdjustedLead(javax.swing.JTable, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI int getAdjustedLead(javax.swing.JTable, boolean, javax.swing.ListSelectionModel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI int getAdjustedLead(javax.swing.JTable, boolean, javax.swing.ListSelectionModel) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI int viewIndexForColumn(javax.swing.table.TableColumn) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Dimension createTableSize(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Rectangle access$500(javax.swing.plaf.basic.BasicTableUI, javax.swing.JTable.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Rectangle access$500(javax.swing.plaf.basic.BasicTableUI, javax.swing.JTable.DropLocation) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Rectangle access$600(javax.swing.plaf.basic.BasicTableUI, java.awt.Rectangle, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Rectangle access$600(javax.swing.plaf.basic.BasicTableUI, java.awt.Rectangle, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null;_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Rectangle access$700(javax.swing.plaf.basic.BasicTableUI, javax.swing.JTable.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Rectangle access$700(javax.swing.plaf.basic.BasicTableUI, javax.swing.JTable.DropLocation) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Rectangle extendRect(java.awt.Rectangle, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Rectangle getHDropLineRect(javax.swing.JTable.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.Rectangle getVDropLineRect(javax.swing.JTable.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI java.awt.event.KeyListener createKeyListener()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI javax.swing.plaf.basic.BasicTableUI.Handler access$200(javax.swing.plaf.basic.BasicTableUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI void paintDraggedArea(java.awt.Graphics, int, int, javax.swing.table.TableColumn, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI void paintDraggedArea(java.awt.Graphics, int, int, javax.swing.table.TableColumn, int) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI void paintGrid(java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Actions boolean isEnabled(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Actions boolean moveWithinSelectedRange(javax.swing.JTable, int, int, javax.swing.ListSelectionModel, javax.swing.ListSelectionModel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Actions int clipToRange(int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Actions int sign(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Actions void calcNextPos(int, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Actions void moveWithinTableRange(javax.swing.JTable, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.FocusHandler FocusHandler(javax.swing.plaf.basic.BasicTableUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler Handler(javax.swing.plaf.basic.BasicTableUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler Handler(javax.swing.plaf.basic.BasicTableUI, javax.swing.plaf.basic.BasicTableUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void dragStarting(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void keyPressed(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void keyPressed(java.awt.event.KeyEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void keyReleased(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void keyReleased(java.awt.event.KeyEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void keyTyped(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void repaintDropLocation(javax.swing.JTable.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void setDispatchComponent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.Handler void valueChanged(javax.swing.event.ListSelectionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.KeyHandler KeyHandler(javax.swing.plaf.basic.BasicTableUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.MouseInputHandler MouseInputHandler(javax.swing.plaf.basic.BasicTableUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.TableTransferHandler int getSourceActions(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.TableTransferHandler int getSourceActions(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.TableTransferHandler java.awt.datatransfer.Transferable createTransferable(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTableUI.TableTransferHandler java.awt.datatransfer.Transferable createTransferable(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI int getBaseline(javax.swing.JComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI javax.swing.text.View create(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI javax.swing.text.View createI18N(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph PlainParagraph(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph javax.swing.SizeRequirements calculateMinorAxisRequirements(int, javax.swing.SizeRequirements) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView boolean isAfter(int, int, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView boolean isAfter(int, int, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;false;_,_,null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView boolean isBefore(int, int, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView boolean isBefore(int, int, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;false;_,_,null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView boolean updateChildren(javax.swing.event.DocumentEvent.ElementChange, javax.swing.event.DocumentEvent, javax.swing.text.ViewFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView boolean updateChildren(javax.swing.event.DocumentEvent.ElementChange, javax.swing.event.DocumentEvent, javax.swing.text.ViewFactory) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView boolean updateChildren(javax.swing.event.DocumentEvent.ElementChange, javax.swing.event.DocumentEvent, javax.swing.text.ViewFactory) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView boolean updateChildren(javax.swing.event.DocumentEvent.ElementChange, javax.swing.event.DocumentEvent, javax.swing.text.ViewFactory)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;false;_,!null,_-&gt;false;_,_,!null-&gt;false;_,_,null-&gt;false;_,null,_-&gt;false;null,_,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView javax.swing.text.View getViewAtPoint(int, int, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView javax.swing.text.View getViewAtPoint(int, int, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;null;_,_,null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView void childAllocation(int, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView void childAllocation(int, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView void forwardUpdateToView(javax.swing.text.View, javax.swing.event.DocumentEvent, java.awt.Shape, javax.swing.text.ViewFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView void loadChildren(javax.swing.text.ViewFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView void paint(java.awt.Graphics, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView void paint(java.awt.Graphics, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextAreaUI.PlainParagraph.LogicalView void paint(java.awt.Graphics, java.awt.Shape)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI javax.swing.text.View create(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI javax.swing.text.View create(javax.swing.text.Element)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI.I18nFieldView I18nFieldView(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI.I18nFieldView boolean isLeftToRight(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI.I18nFieldView int getFlowSpan(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI.I18nFieldView int getResizeWeight(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI.I18nFieldView java.awt.Shape adjustAllocation(java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI.I18nFieldView java.awt.Shape adjustAllocation(java.awt.Shape)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI.I18nFieldView void paint(java.awt.Graphics, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI.I18nFieldView void paint(java.awt.Graphics, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextFieldUI.I18nFieldView void setJustification(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextPaneUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextPaneUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextPaneUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI int getNextVisualPositionFrom(javax.swing.text.JTextComponent, int, javax.swing.text.Position.Bias, int, javax.swing.text.Position.Bias[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI int viewToModel(javax.swing.text.JTextComponent, java.awt.Point, javax.swing.text.Position.Bias[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI java.awt.Rectangle modelToView(javax.swing.text.JTextComponent, int, javax.swing.text.Position.Bias) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI java.lang.String getToolTipText(javax.swing.text.JTextComponent, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI java.lang.String getToolTipText(javax.swing.text.JTextComponent, java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.ActionMap getActionMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.InputMap getInputMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.TransferHandler getTransferHandler()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.Caret createCaret()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.DefaultCaret access$100(javax.swing.plaf.basic.BasicTextUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.DefaultCaret access$100(javax.swing.plaf.basic.BasicTextUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.DefaultCaret access$102(javax.swing.plaf.basic.BasicTextUI, javax.swing.text.DefaultCaret) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.DefaultCaret access$102(javax.swing.plaf.basic.BasicTextUI, javax.swing.text.DefaultCaret)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.EditorKit getEditorKit(javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.EditorKit getEditorKit(javax.swing.text.JTextComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.Highlighter createHighlighter()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.JTextComponent getComponent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.View create(javax.swing.text.Element) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.View create(javax.swing.text.Element)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.View create(javax.swing.text.Element, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.View create(javax.swing.text.Element, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;null;null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.View getRootView(javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI javax.swing.text.View getRootView(javax.swing.text.JTextComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI void access$000(javax.swing.plaf.basic.BasicTextUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI void installListeners()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI void paintBackground(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI void uninstallListeners()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.DragListener DragListener()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.DragListener boolean isDragPossible(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.DragListener void dragStarting(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.DragListener void dragStarting(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.DragListener void mouseDragged(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.DragListener void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.DragListener void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.FocusAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.RootView float getMaximumSpan(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.RootView int getViewCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.RootView int getViewIndex(int, javax.swing.text.Position.Bias) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.RootView int getViewIndex(int, javax.swing.text.Position.Bias)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.RootView java.awt.Container getContainer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.RootView java.awt.Shape getChildAllocation(int, java.awt.Shape)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.RootView javax.swing.text.AttributeSet getAttributes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.RootView javax.swing.text.View breakView(int, float, java.awt.Shape) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.RootView javax.swing.text.View getView(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.RootView void preferenceChanged(javax.swing.text.View, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.RootView void setParent(javax.swing.text.View) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.TextActionWrapper TextActionWrapper(javax.swing.plaf.basic.BasicTextUI, javax.swing.text.TextAction) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.TextTransferHandler boolean canImport(javax.swing.JComponent, java.awt.datatransfer.DataFlavor[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.TextTransferHandler boolean importData(javax.swing.JComponent, java.awt.datatransfer.Transferable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.TextTransferHandler boolean importData(javax.swing.JComponent, java.awt.datatransfer.Transferable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.TextTransferHandler boolean importData(javax.swing.TransferHandler.TransferSupport) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.TextTransferHandler int getSourceActions(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.TextTransferHandler java.awt.datatransfer.DataFlavor getImportFlavor(java.awt.datatransfer.DataFlavor[], javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.TextTransferHandler java.awt.datatransfer.DataFlavor getImportFlavor(java.awt.datatransfer.DataFlavor[], javax.swing.text.JTextComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.TextTransferHandler void exportDone(javax.swing.JComponent, java.awt.datatransfer.Transferable, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.TextTransferHandler void handleReaderImport(java.io.Reader, javax.swing.text.JTextComponent, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.TextTransferHandler.TextTransferable TextTransferable(javax.swing.text.JTextComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.TextTransferHandler.TextTransferable java.lang.Object getRicherData(java.awt.datatransfer.DataFlavor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler UpdateHandler(javax.swing.plaf.basic.BasicTextUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler float getLayoutAlignmentX(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler float getLayoutAlignmentX(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler float getLayoutAlignmentY(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler float getLayoutAlignmentY(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler java.awt.Dimension maximumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler java.awt.Dimension maximumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler java.awt.Dimension minimumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler java.awt.Dimension preferredLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler java.awt.Shape calculateViewPosition(java.awt.Shape, javax.swing.text.View) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler void addLayoutComponent(java.awt.Component, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler void insertUpdate(javax.swing.event.DocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler void invalidateLayout(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler void invalidateLayout(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTextUI.UpdateHandler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToggleButtonUI int getTextShiftOffset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToggleButtonUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToggleButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToggleButtonUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToggleButtonUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToggleButtonUI void paintIcon(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToggleButtonUI void paintIcon(java.awt.Graphics, javax.swing.AbstractButton, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarSeparatorUI BasicToolBarSeparatorUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarSeparatorUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarSeparatorUI void installDefaults(javax.swing.JSeparator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarSeparatorUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarSeparatorUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarSeparatorUI void paint(java.awt.Graphics, javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI boolean access$302(javax.swing.plaf.basic.BasicToolBarUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI boolean access$302(javax.swing.plaf.basic.BasicToolBarUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI boolean canDock(java.awt.Component, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI boolean canDock(java.awt.Component, java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI boolean isBlocked(java.awt.Component, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI boolean isBlocked(java.awt.Component, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI boolean isFloating()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI boolean isRolloverBorders()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI int mapConstraintToOrientation(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI java.awt.Color getDockingColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI java.awt.Color getFloatingColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI java.awt.Container access$400(javax.swing.plaf.basic.BasicToolBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI java.awt.Container access$400(javax.swing.plaf.basic.BasicToolBarUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI java.awt.Container access$402(javax.swing.plaf.basic.BasicToolBarUI, java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI java.awt.Container access$402(javax.swing.plaf.basic.BasicToolBarUI, java.awt.Container)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI java.awt.event.WindowListener createFrameListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI java.lang.String access$200()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI java.lang.String getDockingConstraint(java.awt.Component, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.JFrame createFloatingFrame(javax.swing.JToolBar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.JFrame createFloatingFrame(javax.swing.JToolBar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.RootPaneContainer access$000(javax.swing.plaf.basic.BasicToolBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.RootPaneContainer access$000(javax.swing.plaf.basic.BasicToolBarUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.RootPaneContainer access$002(javax.swing.plaf.basic.BasicToolBarUI, javax.swing.RootPaneContainer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.RootPaneContainer access$002(javax.swing.plaf.basic.BasicToolBarUI, javax.swing.RootPaneContainer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.RootPaneContainer createFloatingWindow(javax.swing.JToolBar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.RootPaneContainer createFloatingWindow(javax.swing.JToolBar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.border.Border createNonRolloverToggleBorder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.border.Border getNonRolloverBorder(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.border.Border getNonRolloverBorder(javax.swing.AbstractButton)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.border.Border getRolloverBorder(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.border.Border getRolloverBorder(javax.swing.AbstractButton)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.plaf.basic.BasicToolBarUI.DragWindow createDragWindow(javax.swing.JToolBar) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.plaf.basic.BasicToolBarUI.DragWindow createDragWindow(javax.swing.JToolBar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI javax.swing.plaf.basic.BasicToolBarUI.Handler access$500(javax.swing.plaf.basic.BasicToolBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void installComponents()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void installNonRolloverBorders(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void installNormalBorders(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void installRolloverBorders(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void paintDragWindow(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void setBorderToNonRollover(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void setBorderToNormal(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void setBorderToRollover(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void setDockingColor(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void setFloating(boolean, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void setFloatingColor(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void setFloatingLocation(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void uninstallComponents()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.1 1(javax.swing.plaf.basic.BasicToolBarUI, java.lang.String, java.awt.GraphicsConfiguration) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.1 javax.swing.JRootPane createRootPane()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.1ToolBarDialog 1ToolBarDialog(javax.swing.plaf.basic.BasicToolBarUI, java.awt.Frame, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.1ToolBarDialog javax.swing.JRootPane createRootPane()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.2 2(javax.swing.plaf.basic.BasicToolBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.2 void windowOpened(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.DockingListener DockingListener(javax.swing.plaf.basic.BasicToolBarUI, javax.swing.JToolBar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.DragWindow int getOrientation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.DragWindow java.awt.Color getBorderColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.DragWindow java.awt.Insets getInsets()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.DragWindow java.awt.Point getOffset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.DragWindow void setOffset(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.FrameListener FrameListener(javax.swing.plaf.basic.BasicToolBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.FrameListener void windowClosing(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler Handler(javax.swing.plaf.basic.BasicToolBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler Handler(javax.swing.plaf.basic.BasicToolBarUI, javax.swing.plaf.basic.BasicToolBarUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void componentAdded(java.awt.event.ContainerEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void componentRemoved(java.awt.event.ContainerEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void focusLost(java.awt.event.FocusEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.PropertyListener PropertyListener(javax.swing.plaf.basic.BasicToolBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.ToolBarContListener ToolBarContListener(javax.swing.plaf.basic.BasicToolBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolBarUI.ToolBarFocusListener ToolBarFocusListener(javax.swing.plaf.basic.BasicToolBarUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI BasicToolTipUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void access$100(javax.swing.plaf.basic.BasicToolTipUI, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void access$100(javax.swing.plaf.basic.BasicToolTipUI, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void componentChanged(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void installComponents(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void installDefaults(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void installListeners(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void paint(java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void uninstallComponents(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void uninstallDefaults(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void uninstallListeners(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI.PropertyChangeHandler PropertyChangeHandler()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI.PropertyChangeHandler PropertyChangeHandler(javax.swing.plaf.basic.BasicToolTipUI.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI.PropertyChangeHandler PropertyChangeHandler(javax.swing.plaf.basic.BasicToolTipUI.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicToolTipUI.PropertyChangeHandler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTransferable BasicTransferable(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTransferable boolean isHTMLSupported()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTransferable boolean isPlainSupported()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTransferable java.awt.datatransfer.DataFlavor[] getRicherFlavors()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTransferable java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTransferable java.lang.Object getRicherData(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTransferable java.lang.Object getRicherData(java.awt.datatransfer.DataFlavor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTransferable java.lang.String getHTMLData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTransferable java.lang.String getPlainData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI BasicTreeUI()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean access$1000(javax.swing.plaf.basic.BasicTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean access$1000(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean access$1302(javax.swing.plaf.basic.BasicTreeUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean access$1302(javax.swing.plaf.basic.BasicTreeUI, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean access$1600(javax.swing.plaf.basic.BasicTreeUI, javax.swing.tree.TreePath, java.awt.event.MouseEvent, java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean isDropLine(javax.swing.JTree.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean isDropLine(javax.swing.JTree.DropLocation)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean isEditing(javax.swing.JTree) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean isEditing(javax.swing.JTree)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean isLargeModel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean isLocationInExpandControl(javax.swing.tree.TreePath, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean isLocationInExpandControl(javax.swing.tree.TreePath, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean isMultiSelectEvent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean isMultiSelectEvent(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean isToggleEvent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean isToggleEvent(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean isToggleSelectionEvent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean shouldPaintExpandControl(javax.swing.tree.TreePath, int, boolean, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,true-&gt;false;null,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean startEditing(javax.swing.tree.TreePath, java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI boolean stopEditing(javax.swing.JTree) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI int getHorizontalLegBuffer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI int getLeadSelectionRow()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI int getLeftChildIndent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI int getRightChildIndent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI int getRowCount(javax.swing.JTree) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI int getRowForPath(javax.swing.JTree, javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI int getRowX(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI int getVerticalLegBuffer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI java.awt.Color getHashColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI java.awt.Dimension getPreferredSize(javax.swing.JComponent, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI java.awt.Rectangle access$1700(javax.swing.plaf.basic.BasicTreeUI, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI java.awt.Rectangle access$1700(javax.swing.plaf.basic.BasicTreeUI, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI java.awt.Rectangle getDropLineRect(javax.swing.JTree.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI java.awt.Rectangle getPathBounds(javax.swing.JTree, javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI java.awt.Rectangle getPathBounds(javax.swing.JTree, javax.swing.tree.TreePath)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI java.awt.Rectangle getRepaintPathBounds(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI java.awt.event.ComponentListener createComponentListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.CellRendererPane createCellRendererPane()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.Icon getCollapsedIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.Icon getExpandedIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.plaf.basic.BasicTreeUI.Actions access$200()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.plaf.basic.BasicTreeUI.Handler access$100(javax.swing.plaf.basic.BasicTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.AbstractLayoutCache createLayoutCache()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.AbstractLayoutCache.NodeDimensions createNodeDimensions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreeCellEditor createDefaultCellEditor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreeCellRenderer createDefaultCellRenderer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreeCellRenderer getCellRenderer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreeModel getModel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreePath access$1800(javax.swing.plaf.basic.BasicTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreePath access$2100(javax.swing.plaf.basic.BasicTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreePath getClosestPathForLocation(javax.swing.JTree, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreePath getClosestPathForLocation(javax.swing.JTree, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreePath getEditingPath(javax.swing.JTree) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreePath getEditingPath(javax.swing.JTree)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreePath getLastChildPath(javax.swing.tree.TreePath)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreePath getPathForRow(javax.swing.JTree, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI javax.swing.tree.TreeSelectionModel getSelectionModel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI long access$900(javax.swing.plaf.basic.BasicTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI long access$900(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void access$1100(javax.swing.plaf.basic.BasicTreeUI, javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void access$1100(javax.swing.plaf.basic.BasicTreeUI, javax.swing.tree.TreePath) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void access$1200(javax.swing.plaf.basic.BasicTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void access$1400(javax.swing.plaf.basic.BasicTreeUI, javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void access$1500(javax.swing.plaf.basic.BasicTreeUI, javax.swing.tree.TreePath, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void access$1900(javax.swing.plaf.basic.BasicTreeUI, javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void access$2000(javax.swing.plaf.basic.BasicTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void access$2200(javax.swing.plaf.basic.BasicTreeUI, javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void cancelEditing(javax.swing.JTree) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void drawCentered(java.awt.Component, java.awt.Graphics, javax.swing.Icon, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void loadActionMap(javax.swing.plaf.basic.LazyActionMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void paint(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void paintExpandControl(java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void paintExpandControl(java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void paintExpandControl(java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void paintHorizontalLine(java.awt.Graphics, javax.swing.JComponent, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void paintHorizontalPartOfLeg(java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void paintRow(java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void paintRow(java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void paintVerticalLine(java.awt.Graphics, javax.swing.JComponent, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void prepareForUIUninstall()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void repaintPath(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void setCellEditor(javax.swing.tree.TreeCellEditor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void setCellRenderer(javax.swing.tree.TreeCellRenderer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void setCollapsedIcon(javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void setExpandedIcon(javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void setHashColor(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void setPreferredMinSize(java.awt.Dimension)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void startEditingAtPath(javax.swing.JTree, javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions boolean isEnabled(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions boolean isEnabled(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$300(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$300(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$400(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$400(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$500(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$500(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$600(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$600(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$700(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$700(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$800(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$800(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void access$800(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void cancelEditing(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void cancelEditing(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void collapse(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void collapse(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void expand(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void expand(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void extendSelection(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void home(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void increment(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void moveSelectionToParent(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void page(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void scroll(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void scroll(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void scrollChangeSelection(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void selectAll(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void startEditing(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void toggle(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions void traverse(javax.swing.JTree, javax.swing.plaf.basic.BasicTreeUI, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Actions.1 1(javax.swing.plaf.basic.BasicTreeUI.Actions, javax.swing.plaf.basic.BasicTreeUI, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.CellEditorHandler CellEditorHandler(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.ComponentHandler ComponentHandler(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.ComponentHandler void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.ComponentHandler void componentMoved(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.FocusHandler FocusHandler(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler Handler(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler Handler(javax.swing.plaf.basic.BasicTreeUI, javax.swing.plaf.basic.BasicTreeUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler boolean isActualPath(javax.swing.tree.TreePath, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler boolean isActualPath(javax.swing.tree.TreePath, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void dragStarting(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void editingCanceled(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void editingStopped(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void keyReleased(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void keyReleased(java.awt.event.KeyEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void mousePressedDND(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void repaintDropLocation(javax.swing.JTree.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void treeCollapsed(javax.swing.event.TreeExpansionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void treeExpanded(javax.swing.event.TreeExpansionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void treeNodesChanged(javax.swing.event.TreeModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void treeNodesInserted(javax.swing.event.TreeModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void treeNodesRemoved(javax.swing.event.TreeModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void treeStructureChanged(javax.swing.event.TreeModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.Handler void valueChanged(javax.swing.event.TreeSelectionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.KeyHandler KeyHandler(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.MouseHandler MouseHandler(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler MouseInputHandler(javax.swing.plaf.basic.BasicTreeUI, java.awt.Component, java.awt.Component, java.awt.event.MouseEvent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler MouseInputHandler(javax.swing.plaf.basic.BasicTreeUI, java.awt.Component, java.awt.Component, java.awt.event.MouseEvent) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler MouseInputHandler(javax.swing.plaf.basic.BasicTreeUI, java.awt.Component, java.awt.Component, java.awt.event.MouseEvent, java.awt.Component) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler MouseInputHandler(javax.swing.plaf.basic.BasicTreeUI, java.awt.Component, java.awt.Component, java.awt.event.MouseEvent, java.awt.Component) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.MouseInputHandler void mousePressed(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.NodeDimensionsHandler NodeDimensionsHandler(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.NodeDimensionsHandler java.awt.Rectangle getNodeDimensions(java.lang.Object, int, int, boolean, java.awt.Rectangle) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.PropertyChangeHandler PropertyChangeHandler(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.SelectionModelPropertyChangeHandler SelectionModelPropertyChangeHandler(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeCancelEditingAction TreeCancelEditingAction(javax.swing.plaf.basic.BasicTreeUI, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeCancelEditingAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeExpansionHandler TreeExpansionHandler(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeHomeAction TreeHomeAction(javax.swing.plaf.basic.BasicTreeUI, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeHomeAction TreeHomeAction(javax.swing.plaf.basic.BasicTreeUI, int, java.lang.String, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeHomeAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeIncrementAction TreeIncrementAction(javax.swing.plaf.basic.BasicTreeUI, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeIncrementAction TreeIncrementAction(javax.swing.plaf.basic.BasicTreeUI, int, java.lang.String, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeIncrementAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeModelHandler TreeModelHandler(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreePageAction TreePageAction(javax.swing.plaf.basic.BasicTreeUI, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreePageAction TreePageAction(javax.swing.plaf.basic.BasicTreeUI, int, java.lang.String, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreePageAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeSelectionHandler TreeSelectionHandler(javax.swing.plaf.basic.BasicTreeUI)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeToggleAction TreeToggleAction(javax.swing.plaf.basic.BasicTreeUI, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeToggleAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeTransferHandler int getSourceActions(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeTransferHandler int getSourceActions(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeTransferHandler java.awt.datatransfer.Transferable createTransferable(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeTransferHandler java.awt.datatransfer.Transferable createTransferable(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeTransferHandler java.lang.String getDisplayString(javax.swing.tree.TreePath, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeTransferHandler javax.swing.tree.TreePath[] getDisplayOrderPaths(javax.swing.tree.TreePath[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction TreeTraverseAction(javax.swing.plaf.basic.BasicTreeUI, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction TreeTraverseAction(javax.swing.plaf.basic.BasicTreeUI, int, java.lang.String, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicTreeUI.TreeTraverseAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicViewportUI BasicViewportUI()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicViewportUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicViewportUI void installDefaults(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicViewportUI void uninstallDefaults(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.BasicViewportUI void uninstallDefaults(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.CenterLayout CenterLayout()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.CenterLayout java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.CenterLayout java.awt.Dimension preferredLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.CenterLayout void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.CenterLayout void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.CenterLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.CenterLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.CenterLayout void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.CenterLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.DefaultMenuLayout java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.DefaultMenuLayout java.awt.Dimension preferredLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.DragRecognitionSupport DragRecognitionSupport()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.plaf.basic.DragRecognitionSupport boolean mouseDragged(java.awt.event.MouseEvent, javax.swing.plaf.basic.DragRecognitionSupport.BeforeDrag) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.DragRecognitionSupport boolean mouseDragged(java.awt.event.MouseEvent, javax.swing.plaf.basic.DragRecognitionSupport.BeforeDrag)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.DragRecognitionSupport boolean mouseDraggedImpl(java.awt.event.MouseEvent, javax.swing.plaf.basic.DragRecognitionSupport.BeforeDrag) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.DragRecognitionSupport boolean mouseDraggedImpl(java.awt.event.MouseEvent, javax.swing.plaf.basic.DragRecognitionSupport.BeforeDrag)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.DragRecognitionSupport boolean mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.DragRecognitionSupport boolean mousePressedImpl(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.DragRecognitionSupport int mapDragOperationFromModifiers(java.awt.event.MouseEvent, javax.swing.TransferHandler) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.basic.DragRecognitionSupport java.awt.event.MouseEvent mouseReleased(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.DragRecognitionSupport java.awt.event.MouseEvent mouseReleasedImpl(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.basic.DragRecognitionSupport void clearState()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.LazyActionMap LazyActionMap(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.plaf.basic.LazyActionMap void installLazyActionMap(javax.swing.JComponent, java.lang.Class, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.basic.LazyActionMap void put(javax.swing.Action) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
