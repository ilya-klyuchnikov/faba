<root>
  <item name="javax.swing.plaf.synth.ColorType ColorType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ColorType int getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ColorType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.DefaultSynthStyleFactory javax.swing.plaf.synth.SynthStyle getCachedStyle(java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.DefaultSynthStyleFactory javax.swing.plaf.synth.SynthStyle getCachedStyle(java.util.List)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.DefaultSynthStyleFactory javax.swing.plaf.synth.SynthStyle getStyle(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.DefaultSynthStyleFactory javax.swing.plaf.synth.SynthStyle getStyle(javax.swing.JComponent, javax.swing.plaf.synth.Region) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.DefaultSynthStyleFactory javax.swing.plaf.synth.SynthStyle mergeStyles(java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.DefaultSynthStyleFactory javax.swing.plaf.synth.SynthStyle mergeStyles(java.util.List)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.DefaultSynthStyleFactory void addStyle(sun.swing.plaf.synth.DefaultSynthStyle, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.DefaultSynthStyleFactory void cacheStyle(java.util.List, javax.swing.plaf.synth.SynthStyle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.DefaultSynthStyleFactory void getMatchingStyles(java.util.List, javax.swing.JComponent, javax.swing.plaf.synth.Region) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.DefaultSynthStyleFactory void getMatchingStyles(java.util.List, javax.swing.JComponent, javax.swing.plaf.synth.Region) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ImagePainter ImagePainter(boolean, boolean, java.awt.Insets, java.awt.Insets, java.net.URL, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ImagePainter ImagePainter(boolean, boolean, java.awt.Insets, java.awt.Insets, java.net.URL, boolean) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ImagePainter boolean getCenter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ImagePainter boolean getPaintsCenter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ImagePainter boolean getTiles()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ImagePainter java.awt.Insets getInsets(java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ImagePainter java.awt.Insets getInsets(java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle ParsedSynthStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle ParsedSynthStyle(sun.swing.plaf.synth.DefaultSynthStyle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[] access$100(javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[], javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[] mergePainterInfo(javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[], javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.SynthPainter access$200(javax.swing.plaf.synth.ParsedSynthStyle, javax.swing.plaf.synth.SynthContext, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.SynthPainter access$200(javax.swing.plaf.synth.ParsedSynthStyle, javax.swing.plaf.synth.SynthContext, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.SynthPainter access$200(javax.swing.plaf.synth.ParsedSynthStyle, javax.swing.plaf.synth.SynthContext, java.lang.String, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.SynthPainter getBestPainter(javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[], java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.SynthPainter getBestPainter(javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[], java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.SynthPainter getBestPainter(javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[], java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.SynthPainter getBestPainter(javax.swing.plaf.synth.SynthContext, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.SynthPainter getBestPainter(javax.swing.plaf.synth.SynthContext, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.SynthPainter getPainter(javax.swing.plaf.synth.SynthContext) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle javax.swing.plaf.synth.SynthPainter getPainter(javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle sun.swing.plaf.synth.DefaultSynthStyle addTo(sun.swing.plaf.synth.DefaultSynthStyle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.AggregatePainter void addPainter(javax.swing.plaf.synth.SynthPainter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter DelegatingPainter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter DelegatingPainter(javax.swing.plaf.synth.ParsedSynthStyle.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter DelegatingPainter(javax.swing.plaf.synth.ParsedSynthStyle.1)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter javax.swing.plaf.synth.SynthPainter getPainter(javax.swing.plaf.synth.SynthContext, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter javax.swing.plaf.synth.SynthPainter getPainter(javax.swing.plaf.synth.SynthContext, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintArrowButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintArrowButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintArrowButtonForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintCheckBoxBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintCheckBoxBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintCheckBoxMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintCheckBoxMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintColorChooserBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintColorChooserBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintComboBoxBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintComboBoxBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintDesktopIconBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintDesktopIconBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintDesktopPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintDesktopPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintEditorPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintEditorPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintFileChooserBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintFileChooserBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintFormattedTextFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintFormattedTextFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintInternalFrameBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintInternalFrameBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintInternalFrameTitlePaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintInternalFrameTitlePaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintLabelBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintLabelBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintListBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintListBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintMenuBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintMenuBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintMenuBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintMenuBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintOptionPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintOptionPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintPanelBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintPanelBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintPasswordFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintPasswordFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintPopupMenuBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintPopupMenuBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintProgressBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintProgressBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintProgressBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintProgressBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintProgressBarForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintRadioButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintRadioButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintRadioButtonMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintRadioButtonMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintRootPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintRootPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintScrollBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintScrollBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintScrollBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintScrollBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintScrollBarThumbBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintScrollBarThumbBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintScrollBarTrackBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintScrollBarTrackBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintScrollBarTrackBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintScrollBarTrackBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintScrollPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintScrollPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSeparatorBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSeparatorBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSeparatorBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSeparatorBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSeparatorForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSliderBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSliderBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSliderBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSliderBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSliderThumbBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSliderThumbBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSliderTrackBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSliderTrackBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSliderTrackBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSliderTrackBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSpinnerBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSpinnerBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSplitPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSplitPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSplitPaneDividerBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSplitPaneDividerBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSplitPaneDividerForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintSplitPaneDragDivider(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTabbedPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTabbedPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTabbedPaneContentBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTabbedPaneContentBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTabbedPaneTabAreaBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTabbedPaneTabAreaBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTabbedPaneTabAreaBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTabbedPaneTabAreaBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTabbedPaneTabBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTabbedPaneTabBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTabbedPaneTabBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTabbedPaneTabBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTableBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTableBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTableHeaderBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTableHeaderBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTextAreaBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTextAreaBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTextFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTextFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTextPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTextPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToggleButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToggleButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolBarContentBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolBarContentBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolBarContentBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolBarContentBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolBarDragWindowBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolBarDragWindowBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolBarDragWindowBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolBarDragWindowBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolTipBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintToolTipBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTreeBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTreeBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTreeCellBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTreeCellBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintTreeCellFocus(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintViewportBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.DelegatingPainter void paintViewportBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo PainterInfo(java.lang.String, javax.swing.plaf.synth.SynthPainter, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo boolean equalsPainter(javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo boolean equalsPainter(javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo int getDirection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo java.lang.String getMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo javax.swing.plaf.synth.SynthPainter getPainter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.StateInfo StateInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.StateInfo StateInfo(sun.swing.plaf.synth.DefaultSynthStyle.StateInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.StateInfo java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.StateInfo java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.StateInfo javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo[] getPainters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.StateInfo sun.swing.plaf.synth.DefaultSynthStyle.StateInfo addTo(sun.swing.plaf.synth.DefaultSynthStyle.StateInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.ParsedSynthStyle.StateInfo sun.swing.plaf.synth.DefaultSynthStyle.StateInfo addTo(sun.swing.plaf.synth.DefaultSynthStyle.StateInfo)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.Region Region(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.Region Region(java.lang.String, java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.Region Region(java.lang.String, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.Region boolean isSubregion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.Region java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.Region java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.Region javax.swing.plaf.synth.Region getRegion(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton int getDirection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton java.lang.String getUIClassID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton void setFocusable(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton.SynthArrowButtonUI SynthArrowButtonUI(javax.swing.plaf.synth.SynthArrowButton.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton.SynthArrowButtonUI java.awt.Dimension getMaximumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton.SynthArrowButtonUI java.awt.Dimension getMinimumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton.SynthArrowButtonUI void installDefaults(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton.SynthArrowButtonUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton.SynthArrowButtonUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton.SynthArrowButtonUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthArrowButton.SynthArrowButtonUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthBorder boolean isBorderOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI int getBaseline(javax.swing.JComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI int getTextShiftOffset(javax.swing.plaf.synth.SynthContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getEnabledIcon(javax.swing.AbstractButton, javax.swing.Icon) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getEnabledIcon(javax.swing.AbstractButton, javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getIcon(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getIcon(javax.swing.AbstractButton, javax.swing.Icon, javax.swing.Icon, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getIcon(javax.swing.AbstractButton, javax.swing.Icon, javax.swing.Icon, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_,_-&gt;!null;_,_,!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getPressedIcon(javax.swing.AbstractButton, javax.swing.Icon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getPressedIcon(javax.swing.AbstractButton, javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getRolloverIcon(javax.swing.AbstractButton, javax.swing.Icon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getRolloverIcon(javax.swing.AbstractButton, javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getSelectedIcon(javax.swing.AbstractButton, javax.swing.Icon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getSelectedIcon(javax.swing.AbstractButton, javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getSizingIcon(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getSynthDisabledIcon(javax.swing.AbstractButton, javax.swing.Icon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.Icon getSynthDisabledIcon(javax.swing.AbstractButton, javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI void installDefaults(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI void installListeners(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthButtonUI void uninstallListeners(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxMenuItemUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxMenuItemUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxMenuItemUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxMenuItemUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthCheckBoxUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthColorChooserUI void updateStyle(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI boolean access$1200(javax.swing.plaf.synth.SynthComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI boolean access$1200(javax.swing.plaf.synth.SynthComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI boolean access$500(javax.swing.plaf.synth.SynthComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI boolean access$500(javax.swing.plaf.synth.SynthComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI boolean access$900(javax.swing.plaf.synth.SynthComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI java.awt.Dimension getDefaultSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.ComboBoxEditor createEditor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JButton createArrowButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$1000(javax.swing.plaf.synth.SynthComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$1000(javax.swing.plaf.synth.SynthComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$1100(javax.swing.plaf.synth.SynthComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$1100(javax.swing.plaf.synth.SynthComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$1300(javax.swing.plaf.synth.SynthComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$1300(javax.swing.plaf.synth.SynthComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$1400(javax.swing.plaf.synth.SynthComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$1400(javax.swing.plaf.synth.SynthComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$1500(javax.swing.plaf.synth.SynthComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$1500(javax.swing.plaf.synth.SynthComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$600(javax.swing.plaf.synth.SynthComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$600(javax.swing.plaf.synth.SynthComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$700(javax.swing.plaf.synth.SynthComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$700(javax.swing.plaf.synth.SynthComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$800(javax.swing.plaf.synth.SynthComboBoxUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.JComboBox access$800(javax.swing.plaf.synth.SynthComboBoxUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.ListCellRenderer createRenderer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.plaf.basic.ComboPopup createPopup()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI void paintCurrentValue(java.awt.Graphics, java.awt.Rectangle, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI void updateStyle(javax.swing.JComboBox) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler ButtonHandler(javax.swing.plaf.synth.SynthComboBoxUI, javax.swing.plaf.synth.SynthComboBoxUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler boolean access$202(javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler boolean access$302(javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void popupMenuCanceled(javax.swing.event.PopupMenuEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.ButtonHandler void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.EditorFocusHandler EditorFocusHandler(javax.swing.JComboBox) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.EditorFocusHandler EditorFocusHandler(javax.swing.JComboBox, javax.swing.plaf.synth.SynthComboBoxUI.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.EditorFocusHandler EditorFocusHandler(javax.swing.JComboBox, javax.swing.plaf.synth.SynthComboBoxUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.EditorFocusHandler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.EditorFocusHandler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.EditorFocusHandler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.SynthComboBoxEditor SynthComboBoxEditor(javax.swing.plaf.synth.SynthComboBoxUI.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.SynthComboBoxEditor javax.swing.JTextField createEditorComponent()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.SynthComboBoxRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.SynthComboBoxRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.SynthComboBoxRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboBoxUI.SynthComboBoxRenderer java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthComboPopup java.awt.Rectangle computePopupBounds(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext SynthContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext SynthContext(javax.swing.JComponent, javax.swing.plaf.synth.Region, javax.swing.plaf.synth.SynthStyle, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext SynthContext(javax.swing.JComponent, javax.swing.plaf.synth.Region, javax.swing.plaf.synth.SynthStyle, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext SynthContext(javax.swing.JComponent, javax.swing.plaf.synth.Region, javax.swing.plaf.synth.SynthStyle, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext int getComponentState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext javax.swing.JComponent getComponent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext javax.swing.plaf.synth.Region getRegion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext javax.swing.plaf.synth.SynthStyle getStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthContext void releaseContext(javax.swing.plaf.synth.SynthContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDefaultLookup SynthDefaultLookup()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDefaultLookup java.lang.Object getDefault(javax.swing.JComponent, javax.swing.plaf.ComponentUI, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.JInternalFrame access$100(javax.swing.plaf.synth.SynthDesktopIconUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.JInternalFrame access$100(javax.swing.plaf.synth.SynthDesktopIconUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.JInternalFrame access$200(javax.swing.plaf.synth.SynthDesktopIconUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.JInternalFrame access$200(javax.swing.plaf.synth.SynthDesktopIconUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.JInternalFrame access$300(javax.swing.plaf.synth.SynthDesktopIconUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.JInternalFrame access$300(javax.swing.plaf.synth.SynthDesktopIconUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.JInternalFrame access$400(javax.swing.plaf.synth.SynthDesktopIconUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.JInternalFrame access$400(javax.swing.plaf.synth.SynthDesktopIconUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI void updateStyle(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI.Handler Handler(javax.swing.plaf.synth.SynthDesktopIconUI, javax.swing.plaf.synth.SynthDesktopIconUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopIconUI.Handler void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI SynthDesktopPaneUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI javax.swing.plaf.synth.SynthDesktopPaneUI.TaskBar access$000(javax.swing.plaf.synth.SynthDesktopPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI javax.swing.plaf.synth.SynthDesktopPaneUI.TaskBar access$000(javax.swing.plaf.synth.SynthDesktopPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI void updateStyle(javax.swing.JDesktopPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.SynthDesktopManager void deiconifyFrame(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.SynthDesktopManager void iconifyFrame(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.SynthDesktopManager void maximizeFrame(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.SynthDesktopManager void removeIconFor(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.SynthDesktopManager void setBoundsForFrame(javax.swing.JComponent, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.TaskBar void componentAdded(java.awt.event.ContainerEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.TaskBar void componentHidden(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.TaskBar void componentMoved(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.TaskBar void componentMoved(java.awt.event.ComponentEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.TaskBar void componentRemoved(java.awt.event.ContainerEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.TaskBar void componentResized(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.TaskBar void componentShown(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.TaskBar.1 void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthDesktopPaneUI.TaskBar.2 void paintRaisedBevel(java.awt.Component, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI void paintBackground(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI void paintBackground(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthEditorPaneUI void updateStyle(javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthFormattedTextFieldUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthFormattedTextFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthFormattedTextFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthFormattedTextFieldUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthFormattedTextFieldUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthFormattedTextFieldUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils int computeStringWidth(javax.swing.plaf.synth.SynthContext, java.awt.Font, java.awt.FontMetrics, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils int computeStringWidth(javax.swing.plaf.synth.SynthContext, java.awt.Font, java.awt.FontMetrics, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils int computeStringWidth(javax.swing.plaf.synth.SynthContext, java.awt.Font, java.awt.FontMetrics, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils int getMaximumCharHeight(javax.swing.plaf.synth.SynthContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.awt.Dimension getMaximumSize(javax.swing.plaf.synth.SynthContext, java.awt.Font, java.lang.String, javax.swing.Icon, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.awt.Dimension getMinimumSize(javax.swing.plaf.synth.SynthContext, java.awt.Font, java.lang.String, javax.swing.Icon, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.awt.Dimension getPreferredMenuItemSize(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, int, java.lang.String, boolean, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.awt.Dimension getPreferredMenuItemSize(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, int, java.lang.String, boolean, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.awt.Dimension getPreferredMenuItemSize(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, int, java.lang.String, boolean, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.awt.Dimension getPreferredMenuItemSize(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, int, java.lang.String, boolean, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.awt.Dimension getPreferredSize(javax.swing.plaf.synth.SynthContext, java.awt.Font, java.lang.String, javax.swing.Icon, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.awt.Dimension getPreferredSize(javax.swing.plaf.synth.SynthContext, java.awt.Font, java.lang.String, javax.swing.Icon, int, int, int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.awt.Dimension getPreferredSize(javax.swing.plaf.synth.SynthContext, java.awt.Font, java.lang.String, javax.swing.Icon, int, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.lang.String layoutText(javax.swing.plaf.synth.SynthContext, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.lang.String layoutText(javax.swing.plaf.synth.SynthContext, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int) 10">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.lang.String layoutText(javax.swing.plaf.synth.SynthContext, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.lang.String layoutText(javax.swing.plaf.synth.SynthContext, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int) 8">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.lang.String layoutText(javax.swing.plaf.synth.SynthContext, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int) 9">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils java.lang.String layoutText(javax.swing.plaf.synth.SynthContext, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null,_,_,_,_,_,_,_,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void applyInsets(java.awt.Rectangle, java.awt.Insets, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void drawLine(javax.swing.plaf.synth.SynthContext, java.lang.Object, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void drawLine(javax.swing.plaf.synth.SynthContext, java.lang.Object, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void drawLine(javax.swing.plaf.synth.SynthContext, java.lang.Object, java.awt.Graphics, int, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void drawLine(javax.swing.plaf.synth.SynthContext, java.lang.Object, java.awt.Graphics, int, int, int, int, java.lang.Object) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paint(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.Icon, javax.swing.Icon, java.lang.String, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paint(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.Icon, javax.swing.Icon, java.lang.String, int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paint(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.Icon, javax.swing.Icon, java.lang.String, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paintAccText(java.awt.Graphics, javax.swing.plaf.synth.SynthMenuItemLayoutHelper, sun.swing.MenuItemLayoutHelper.LayoutResult) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paintArrowIcon(java.awt.Graphics, javax.swing.plaf.synth.SynthMenuItemLayoutHelper, sun.swing.MenuItemLayoutHelper.LayoutResult) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paintBackground(java.awt.Graphics, javax.swing.plaf.synth.SynthMenuItemLayoutHelper) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paintCheckIcon(java.awt.Graphics, javax.swing.plaf.synth.SynthMenuItemLayoutHelper, sun.swing.MenuItemLayoutHelper.LayoutResult) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paintIcon(java.awt.Graphics, javax.swing.plaf.synth.SynthMenuItemLayoutHelper, sun.swing.MenuItemLayoutHelper.LayoutResult) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paintMenuItem(java.awt.Graphics, javax.swing.plaf.synth.SynthMenuItemLayoutHelper, sun.swing.MenuItemLayoutHelper.LayoutResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paintMenuItem(java.awt.Graphics, javax.swing.plaf.synth.SynthMenuItemLayoutHelper, sun.swing.MenuItemLayoutHelper.LayoutResult) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paintText(java.awt.Graphics, javax.swing.plaf.synth.SynthMenuItemLayoutHelper, sun.swing.MenuItemLayoutHelper.LayoutResult) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paintText(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.lang.String, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils void paintText(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.lang.String, java.awt.Rectangle, int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils.SynthIconWrapper void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils.SynthIconWrapper void paintIcon(java.awt.Component, java.awt.Graphics, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils.SynthIconWrapper void paintIcon(java.awt.Component, java.awt.Graphics, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthGraphicsUtils.SynthIconWrapper void release(javax.swing.plaf.synth.SynthGraphicsUtils.SynthIconWrapper) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane int access$1000(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane int access$1000(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane int access$800(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane int access$800(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane java.lang.String getUIClassID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$1300(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$1300(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$1500(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$1500(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$1700(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$1700(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$1900(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$1900(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$2100(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$2100(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$2300(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$2300(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$300(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$300(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$500(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$500(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$700(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton access$700(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JButton createNoFocusButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$100(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$100(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$1100(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$1100(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$1200(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$1200(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$1400(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$1400(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$1600(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$1600(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$1800(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$1800(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$200(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$200(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$2000(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$2000(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$2200(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$2200(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$400(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$400(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$600(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$600(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$900(javax.swing.plaf.synth.SynthInternalFrameTitlePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.JInternalFrame access$900(javax.swing.plaf.synth.SynthInternalFrameTitlePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.plaf.synth.Region getRegion(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane void addSystemMenuItems(javax.swing.JPopupMenu) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane void updateStyle(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.1 void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.JPopupMenuUIResource JPopupMenuUIResource(javax.swing.plaf.synth.SynthInternalFrameTitlePane.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout int center(java.awt.Component, java.awt.Insets, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout int center(java.awt.Component, java.awt.Insets, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout java.awt.Dimension minimumLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameTitlePane.SynthTitlePaneLayout void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI SynthInternalFrameUI(javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$000(javax.swing.plaf.synth.SynthInternalFrameUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$000(javax.swing.plaf.synth.SynthInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$100(javax.swing.plaf.synth.SynthInternalFrameUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$100(javax.swing.plaf.synth.SynthInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$200(javax.swing.plaf.synth.SynthInternalFrameUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$200(javax.swing.plaf.synth.SynthInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$300(javax.swing.plaf.synth.SynthInternalFrameUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$300(javax.swing.plaf.synth.SynthInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$400(javax.swing.plaf.synth.SynthInternalFrameUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$400(javax.swing.plaf.synth.SynthInternalFrameUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$502(javax.swing.plaf.synth.SynthInternalFrameUI, javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$502(javax.swing.plaf.synth.SynthInternalFrameUI, javax.swing.JInternalFrame)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$602(javax.swing.plaf.synth.SynthInternalFrameUI, javax.swing.JInternalFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.JInternalFrame access$602(javax.swing.plaf.synth.SynthInternalFrameUI, javax.swing.JInternalFrame)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthInternalFrameUI void updateStyle(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI int getBaseline(javax.swing.JComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI void uninstallDefaults(javax.swing.JLabel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLabelUI void updateStyle(javax.swing.JLabel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI boolean access$100(javax.swing.plaf.synth.SynthListUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI boolean access$100(javax.swing.plaf.synth.SynthListUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI boolean access$200(javax.swing.plaf.synth.SynthListUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI boolean access$200(javax.swing.plaf.synth.SynthListUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI void updateStyle(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI.SynthListCellRenderer SynthListCellRenderer(javax.swing.plaf.synth.SynthListUI, javax.swing.plaf.synth.SynthListUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI.SynthListCellRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthListUI.SynthListCellRenderer java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel boolean isLeftToRight(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel boolean isNativeLookAndFeel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel boolean isSupportedLookAndFeel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel boolean shouldUpdateStyleOnAncestorChanged()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel boolean shouldUpdateStyleOnEvent(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel int getComponentState(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel java.awt.Insets getPaintingInsets(javax.swing.plaf.synth.SynthContext, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel java.lang.Object access$200()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel java.lang.Object getAATextInfo()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel java.lang.Object getUIOfType(javax.swing.plaf.ComponentUI, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel java.lang.Object getUIOfType(javax.swing.plaf.ComponentUI, java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel java.lang.String getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel java.lang.ref.ReferenceQueue access$100()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel javax.swing.UIDefaults getDefaults()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel javax.swing.plaf.synth.Region getRegion(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel javax.swing.plaf.synth.SynthLookAndFeel.Handler access$500(javax.swing.plaf.synth.SynthLookAndFeel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel javax.swing.plaf.synth.SynthLookAndFeel.Handler access$500(javax.swing.plaf.synth.SynthLookAndFeel)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel javax.swing.plaf.synth.SynthStyle updateStyle(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel void load(java.io.InputStream, java.lang.Class&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel void load(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel void paintRegion(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel void paintRegion(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel void update(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel void updateStyles(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel void updateSubregion(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel void updateSubregion(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel.AATextListener boolean isUpdatePending()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel.AATextListener void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel.AATextListener void updateWindowUI(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel.Handler Handler(javax.swing.plaf.synth.SynthLookAndFeel, javax.swing.plaf.synth.SynthLookAndFeel.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel.Handler void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthLookAndFeel.Handler void repaintIfBackgroundsDiffer(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuBarUI void updateStyle(javax.swing.JMenuBar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper SynthMenuItemLayoutHelper(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, javax.swing.JMenuItem, javax.swing.Icon, javax.swing.Icon, java.awt.Rectangle, int, java.lang.String, boolean, boolean, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper SynthMenuItemLayoutHelper(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, javax.swing.JMenuItem, javax.swing.Icon, javax.swing.Icon, java.awt.Rectangle, int, java.lang.String, boolean, boolean, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper boolean alignAcceleratorText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper boolean getAlignAcceleratorText(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper int getMaxAccOrArrowWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper javax.swing.plaf.synth.SynthContext getAccContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper javax.swing.plaf.synth.SynthContext getContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper javax.swing.plaf.synth.SynthGraphicsUtils getAccGraphicsUtils()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper javax.swing.plaf.synth.SynthGraphicsUtils getGraphicsUtils()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper javax.swing.plaf.synth.SynthStyle getAccStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper javax.swing.plaf.synth.SynthStyle getStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper void layoutIconAndTextInLabelRect(sun.swing.MenuItemLayoutHelper.LayoutResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemLayoutHelper void prepareForLayout(sun.swing.MenuItemLayoutHelper.LayoutResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuItemUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuLayout java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuLayout java.awt.Dimension preferredLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI void uninstallUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthMenuUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI SynthOptionPaneUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI java.awt.Container createMessageArea()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI java.awt.Container createSeparator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthOptionPaneUI void updateStyle(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter SynthPainter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintArrowButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintArrowButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintArrowButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintArrowButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintArrowButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintArrowButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintArrowButtonForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintArrowButtonForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintArrowButtonForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintCheckBoxMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintColorChooserBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintColorChooserBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintColorChooserBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintColorChooserBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintColorChooserBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintColorChooserBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintComboBoxBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintComboBoxBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintComboBoxBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintComboBoxBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintComboBoxBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintComboBoxBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopIconBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopIconBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopIconBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopIconBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopIconBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopIconBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintDesktopPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintEditorPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintEditorPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintEditorPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintEditorPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintEditorPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintEditorPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFileChooserBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFileChooserBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFileChooserBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFileChooserBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFileChooserBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFileChooserBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFormattedTextFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFormattedTextFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFormattedTextFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFormattedTextFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFormattedTextFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintFormattedTextFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameTitlePaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameTitlePaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameTitlePaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameTitlePaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameTitlePaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintInternalFrameTitlePaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintLabelBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintLabelBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintLabelBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintLabelBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintLabelBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintLabelBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintListBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintListBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintListBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintListBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintListBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintListBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintOptionPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintOptionPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintOptionPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintOptionPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintOptionPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintOptionPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPanelBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPanelBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPanelBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPanelBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPanelBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPanelBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPasswordFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPasswordFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPasswordFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPasswordFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPasswordFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPasswordFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPopupMenuBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPopupMenuBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPopupMenuBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPopupMenuBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPopupMenuBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintPopupMenuBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintProgressBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintProgressBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintProgressBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintProgressBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintProgressBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintProgressBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintProgressBarForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintProgressBarForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintProgressBarForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonMenuItemBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRadioButtonMenuItemBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRootPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRootPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRootPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRootPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRootPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintRootPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarThumbBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarThumbBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarThumbBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarThumbBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarThumbBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarThumbBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarTrackBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarTrackBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarTrackBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarTrackBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarTrackBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollBarTrackBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintScrollPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSeparatorBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSeparatorBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSeparatorBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSeparatorBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSeparatorBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSeparatorBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSeparatorForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSeparatorForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSeparatorForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderThumbBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderThumbBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderThumbBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderThumbBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderThumbBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderThumbBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderTrackBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderTrackBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderTrackBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderTrackBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderTrackBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSliderTrackBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSpinnerBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSpinnerBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSpinnerBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSpinnerBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSpinnerBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSpinnerBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneDividerBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneDividerBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneDividerBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneDividerForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneDividerForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneDividerForeground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneDragDivider(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneDragDivider(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintSplitPaneDragDivider(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneContentBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneContentBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneContentBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneContentBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneContentBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneContentBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabAreaBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabAreaBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabAreaBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabAreaBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabAreaBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabAreaBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTabbedPaneTabBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableHeaderBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableHeaderBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableHeaderBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableHeaderBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableHeaderBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTableHeaderBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextAreaBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextAreaBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextAreaBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextAreaBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextAreaBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextAreaBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextFieldBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextFieldBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextPaneBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTextPaneBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToggleButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToggleButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToggleButtonBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToggleButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToggleButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToggleButtonBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarContentBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarContentBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarContentBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarContentBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarContentBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarContentBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarDragWindowBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarDragWindowBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarDragWindowBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarDragWindowBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarDragWindowBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolBarDragWindowBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolTipBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolTipBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolTipBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolTipBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolTipBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintToolTipBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeCellBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeCellBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeCellBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeCellBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeCellBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeCellBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeCellFocus(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeCellFocus(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintTreeCellFocus(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintViewportBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintViewportBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintViewportBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintViewportBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintViewportBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter void paintViewportBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPainter.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI SynthPanelUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI void installDefaults(javax.swing.JPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI void installListeners(javax.swing.JPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI void uninstallDefaults(javax.swing.JPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI void uninstallListeners(javax.swing.JPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPanelUI void updateStyle(javax.swing.JPanel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser boolean isForwarding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser int nextInt(java.util.StringTokenizer, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser java.awt.Insets parseInsets(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser java.awt.Insets parseInsets(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser java.lang.Object checkCast(java.lang.Object, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser java.lang.Object checkCast(java.lang.Object, java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser java.lang.Object lookup(java.lang.String, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser java.net.URL getResource(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser org.xml.sax.InputSource resolveEntity(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void addPainterOrMerge(java.util.List&lt;javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo&gt;, java.lang.String, javax.swing.plaf.synth.SynthPainter, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void addPainterOrMerge(java.util.List&lt;javax.swing.plaf.synth.ParsedSynthStyle.PainterInfo&gt;, java.lang.String, javax.swing.plaf.synth.SynthPainter, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void endElement(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void endElement(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void parse(java.io.InputStream, javax.swing.plaf.synth.DefaultSynthStyleFactory, java.net.URL, java.lang.Class&lt;?&gt;, java.util.Map&lt;java.lang.String,java.lang.Object&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void parse(java.io.InputStream, javax.swing.plaf.synth.DefaultSynthStyleFactory, java.net.URL, java.lang.Class&lt;?&gt;, java.util.Map&lt;java.lang.String,java.lang.Object&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void register(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startBind(org.xml.sax.Attributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startColor(org.xml.sax.Attributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startFont(org.xml.sax.Attributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startGraphics(org.xml.sax.Attributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startImageIcon(org.xml.sax.Attributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startInsets(org.xml.sax.Attributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startPainter(org.xml.sax.Attributes, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startPainter(org.xml.sax.Attributes, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startProperty(org.xml.sax.Attributes, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startProperty(org.xml.sax.Attributes, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startState(org.xml.sax.Attributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthParser void startStyle(org.xml.sax.Attributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPasswordFieldUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPasswordFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPasswordFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPasswordFieldUI javax.swing.text.View create(javax.swing.text.Element)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPasswordFieldUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPasswordFieldUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPasswordFieldUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPopupMenuUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPopupMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPopupMenuUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPopupMenuUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPopupMenuUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPopupMenuUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPopupMenuUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPopupMenuUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthPopupMenuUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPopupMenuUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthPopupMenuUI void updateStyle(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI java.awt.Rectangle getBox(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI java.awt.Rectangle getBox(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthProgressBarUI void updateStyle(javax.swing.JProgressBar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonMenuItemUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonMenuItemUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonMenuItemUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonMenuItemUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonMenuItemUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRadioButtonUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI SynthRootPaneUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI void installDefaults(javax.swing.JRootPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI void uninstallDefaults(javax.swing.JRootPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthRootPaneUI void updateStyle(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$000(javax.swing.plaf.synth.SynthScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$000(javax.swing.plaf.synth.SynthScrollBarUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$200(javax.swing.plaf.synth.SynthScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$200(javax.swing.plaf.synth.SynthScrollBarUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$300(javax.swing.plaf.synth.SynthScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$300(javax.swing.plaf.synth.SynthScrollBarUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$400(javax.swing.plaf.synth.SynthScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$400(javax.swing.plaf.synth.SynthScrollBarUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$600(javax.swing.plaf.synth.SynthScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$600(javax.swing.plaf.synth.SynthScrollBarUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$700(javax.swing.plaf.synth.SynthScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$700(javax.swing.plaf.synth.SynthScrollBarUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$800(javax.swing.plaf.synth.SynthScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$800(javax.swing.plaf.synth.SynthScrollBarUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$900(javax.swing.plaf.synth.SynthScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int access$900(javax.swing.plaf.synth.SynthScrollBarUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI javax.swing.JButton createDecreaseButton(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI javax.swing.JButton createIncreaseButton(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI javax.swing.JScrollBar access$100(javax.swing.plaf.synth.SynthScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI javax.swing.JScrollBar access$100(javax.swing.plaf.synth.SynthScrollBarUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI javax.swing.JScrollBar access$500(javax.swing.plaf.synth.SynthScrollBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI javax.swing.JScrollBar access$500(javax.swing.plaf.synth.SynthScrollBarUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI void configureScrollBarColors()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI void paintThumb(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI void paintThumb(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI void paintTrack(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI void paintTrack(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollBarUI void updateStyle(javax.swing.JScrollBar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI boolean access$102(javax.swing.plaf.synth.SynthScrollPaneUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI javax.swing.JScrollPane access$200(javax.swing.plaf.synth.SynthScrollPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI javax.swing.JScrollPane access$200(javax.swing.plaf.synth.SynthScrollPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI javax.swing.JScrollPane access$300(javax.swing.plaf.synth.SynthScrollPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI javax.swing.JScrollPane access$300(javax.swing.plaf.synth.SynthScrollPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI javax.swing.JScrollPane access$400(javax.swing.plaf.synth.SynthScrollPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI javax.swing.JScrollPane access$400(javax.swing.plaf.synth.SynthScrollPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI void installDefaults(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI void installListeners(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI void uninstallDefaults(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI void uninstallListeners(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI void updateStyle(javax.swing.JScrollPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportBorder ViewportBorder(javax.swing.plaf.synth.SynthScrollPaneUI, javax.swing.plaf.synth.SynthContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportBorder boolean isBorderOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportBorder java.awt.Insets getBorderInsets(java.awt.Component, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportViewFocusHandler ViewportViewFocusHandler(javax.swing.plaf.synth.SynthScrollPaneUI, javax.swing.plaf.synth.SynthScrollPaneUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportViewFocusHandler void componentAdded(java.awt.event.ContainerEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportViewFocusHandler void componentRemoved(java.awt.event.ContainerEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportViewFocusHandler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthScrollPaneUI.ViewportViewFocusHandler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI SynthSeparatorUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI java.awt.Dimension getMaximumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI java.awt.Dimension getMaximumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI void installDefaults(javax.swing.JSeparator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI void installListeners(javax.swing.JSeparator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI void uninstallDefaults(javax.swing.JSeparator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI void uninstallListeners(javax.swing.JSeparator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSeparatorUI void updateStyle(javax.swing.JSeparator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI SynthSliderUI(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI boolean access$1700(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI boolean access$2600(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI boolean access$600(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI int access$1300(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI int access$1300(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI int access$1600(javax.swing.plaf.synth.SynthSliderUI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI int getBaseline(javax.swing.JComponent, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Dimension getMinimumSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Dimension getMinimumSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Dimension getThumbSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$1000(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$1000(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$1100(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$1100(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$1200(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$1200(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$1800(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$1800(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$200(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$200(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$2000(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$2000(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$2100(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$2100(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$2200(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$2200(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$2300(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$2300(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$2700(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$2700(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$900(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI java.awt.Rectangle access$900(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$1400(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$1400(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$1500(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$1500(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$1900(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$1900(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$2400(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$2400(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$2500(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$2500(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$2800(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$2800(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$2900(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$2900(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$500(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$500(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$700(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$700(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$800(javax.swing.plaf.synth.SynthSliderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.JSlider access$800(javax.swing.plaf.synth.SynthSliderUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.plaf.basic.BasicSliderUI.TrackListener createTrackListener(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.plaf.basic.BasicSliderUI.TrackListener createTrackListener(javax.swing.JSlider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void access$100(javax.swing.plaf.synth.SynthSliderUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void access$300(javax.swing.plaf.synth.SynthSliderUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void access$3000(javax.swing.plaf.synth.SynthSliderUI, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void access$400(javax.swing.plaf.synth.SynthSliderUI, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void installDefaults(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void installListeners(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void paintThumb(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void paintThumb(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void paintTrack(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void paintTrack(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void uninstallDefaults(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void uninstallListeners(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI void updateStyle(javax.swing.JSlider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI.SynthTrackListener SynthTrackListener(javax.swing.plaf.synth.SynthSliderUI, javax.swing.plaf.synth.SynthSliderUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI.SynthTrackListener void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI.SynthTrackListener void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI.SynthTrackListener void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSliderUI.SynthTrackListener void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI java.awt.Component createNextButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI java.awt.Component createPreviousButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI java.awt.LayoutManager createLayout()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI javax.swing.JComponent createEditor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI javax.swing.JSpinner access$200(javax.swing.plaf.synth.SynthSpinnerUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI javax.swing.JSpinner access$200(javax.swing.plaf.synth.SynthSpinnerUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI javax.swing.JSpinner access$300(javax.swing.plaf.synth.SynthSpinnerUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI javax.swing.JSpinner access$300(javax.swing.plaf.synth.SynthSpinnerUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI void updateEditorAlignment(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI void updateStyle(javax.swing.JSpinner) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.EditorFocusHandler EditorFocusHandler(javax.swing.plaf.synth.SynthSpinnerUI, javax.swing.plaf.synth.SynthSpinnerUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.EditorFocusHandler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.EditorFocusHandler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.SpinnerLayout SpinnerLayout(javax.swing.plaf.synth.SynthSpinnerUI.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.SpinnerLayout java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.SpinnerLayout java.awt.Dimension preferredLayoutSize(java.awt.Container)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.SpinnerLayout java.awt.Dimension preferredSize(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.SpinnerLayout java.awt.Dimension preferredSize(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.SpinnerLayout void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.SpinnerLayout void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.SpinnerLayout void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSpinnerUI.SpinnerLayout void setBounds(java.awt.Component, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneDivider SynthSplitPaneDivider(javax.swing.plaf.basic.BasicSplitPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneDivider javax.swing.JButton createLeftOneTouchButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneDivider javax.swing.JButton createRightOneTouchButton()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneDivider void paint(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneDivider void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI java.awt.Component createDefaultNonContinuousLayoutDivider()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI javax.swing.plaf.basic.BasicSplitPaneDivider createDefaultDivider()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI void access$000(javax.swing.plaf.synth.SynthSplitPaneUI, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI void access$000(javax.swing.plaf.synth.SynthSplitPaneUI, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI void paintDragDivider(java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI void updateStyle(javax.swing.JSplitPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthSplitPaneUI.1 void paint(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle SynthStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle boolean isOpaque(javax.swing.plaf.synth.SynthContext) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle boolean isOpaque(javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;true;null-&gt;true&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle java.awt.Color getColor(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.ColorType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle java.awt.Font getFont(javax.swing.plaf.synth.SynthContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle java.awt.Insets getInsets(javax.swing.plaf.synth.SynthContext, java.awt.Insets) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle java.awt.Insets getInsets(javax.swing.plaf.synth.SynthContext, java.awt.Insets) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle java.awt.Insets getInsets(javax.swing.plaf.synth.SynthContext, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle java.lang.Object get(javax.swing.plaf.synth.SynthContext, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle javax.swing.Icon getIcon(javax.swing.plaf.synth.SynthContext, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle javax.swing.plaf.synth.SynthGraphicsUtils getGraphicsUtils(javax.swing.plaf.synth.SynthContext) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle javax.swing.plaf.synth.SynthGraphicsUtils getGraphicsUtils(javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle javax.swing.plaf.synth.SynthPainter getPainter(javax.swing.plaf.synth.SynthContext) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle javax.swing.plaf.synth.SynthPainter getPainter(javax.swing.plaf.synth.SynthContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;null;null-&gt;null&quot;,pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle void installDefaults(javax.swing.plaf.synth.SynthContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle void installDefaults(javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyle void uninstallDefaults(javax.swing.plaf.synth.SynthContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthStyleFactory SynthStyleFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI boolean access$400(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI boolean access$400(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI boolean access$402(javax.swing.plaf.synth.SynthTabbedPaneUI, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI int access$1000(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI int access$1000(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI int access$1300(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI int access$1300(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI int access$700(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI int access$700(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI int[] access$1100(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI int[] access$1100(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI int[] access$1200(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI int[] access$1200(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI java.awt.LayoutManager createLayoutManager()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI java.awt.Rectangle[] access$1500(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI java.awt.Rectangle[] access$1500(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI java.awt.Rectangle[] access$1600(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI java.awt.Rectangle[] access$1600(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI java.awt.Rectangle[] access$1700(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI java.awt.Rectangle[] access$1700(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI java.awt.Rectangle[] access$1800(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI java.awt.Rectangle[] access$1800(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI java.awt.event.MouseListener createMouseListener()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JButton createScrollButton(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$000(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$000(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$100(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$100(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$1400(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$1400(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$200(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$200(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$300(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$300(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$500(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$500(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$600(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$600(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$800(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$800(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$900(javax.swing.plaf.synth.SynthTabbedPaneUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.JTabbedPane access$900(javax.swing.plaf.synth.SynthTabbedPaneUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void layoutLabel(javax.swing.plaf.synth.SynthContext, int, java.awt.FontMetrics, int, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void layoutLabel(javax.swing.plaf.synth.SynthContext, int, java.awt.FontMetrics, int, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, boolean) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void layoutLabel(javax.swing.plaf.synth.SynthContext, int, java.awt.FontMetrics, int, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, boolean) 8">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void paintContentBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void paintTab(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, java.awt.Rectangle[], int, java.awt.Rectangle, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void paintTab(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, java.awt.Rectangle[], int, java.awt.Rectangle, java.awt.Rectangle) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void paintTabArea(java.awt.Graphics, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void paintTabArea(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void paintTabArea(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void paintTabArea(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, java.awt.Rectangle) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void paintText(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, java.awt.Font, java.awt.FontMetrics, int, java.lang.String, java.awt.Rectangle, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void paintText(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, java.awt.Font, java.awt.FontMetrics, int, java.lang.String, java.awt.Rectangle, boolean) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTabbedPaneUI void updateStyle(javax.swing.JTabbedPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI int access$000(javax.swing.plaf.synth.SynthTableHeaderUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI void updateStyle(javax.swing.table.JTableHeader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI.HeaderRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI.HeaderRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableHeaderUI.HeaderRenderer void setBorder(javax.swing.border.Border) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI boolean access$100(javax.swing.plaf.synth.SynthTableUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI boolean access$100(javax.swing.plaf.synth.SynthTableUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI boolean access$200(javax.swing.plaf.synth.SynthTableUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI boolean access$200(javax.swing.plaf.synth.SynthTableUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI int viewIndexForColumn(javax.swing.table.TableColumn) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI java.awt.Rectangle extendRect(java.awt.Rectangle, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI java.awt.Rectangle getHDropLineRect(javax.swing.JTable.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI java.awt.Rectangle getHDropLineRect(javax.swing.JTable.DropLocation)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI java.awt.Rectangle getVDropLineRect(javax.swing.JTable.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI java.awt.Rectangle getVDropLineRect(javax.swing.JTable.DropLocation)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI void paintCell(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI void paintDraggedArea(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, javax.swing.table.TableColumn, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI void paintDraggedArea(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, javax.swing.table.TableColumn, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI void paintDraggedArea(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, javax.swing.table.TableColumn, int) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI void paintGrid(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI void paintGrid(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI void updateStyle(javax.swing.JTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI.SynthBooleanTableCellRenderer java.awt.Color unwrap(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI.SynthBooleanTableCellRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI.SynthBooleanTableCellRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI.SynthBooleanTableCellRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI.SynthTableCellRenderer SynthTableCellRenderer(javax.swing.plaf.synth.SynthTableUI, javax.swing.plaf.synth.SynthTableUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI.SynthTableCellRenderer boolean isOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI.SynthTableCellRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI.SynthTableCellRenderer java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTableUI.SynthTableCellRenderer void configureValue(java.lang.Object, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI javax.swing.text.JTextComponent access$100(javax.swing.plaf.synth.SynthTextAreaUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI javax.swing.text.JTextComponent access$200(javax.swing.plaf.synth.SynthTextAreaUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI void paintBackground(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI void paintBackground(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI void updateStyle(javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI.Handler Handler(javax.swing.plaf.synth.SynthTextAreaUI, javax.swing.plaf.synth.SynthTextAreaUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI.Handler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextAreaUI.Handler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI javax.swing.text.JTextComponent access$100(javax.swing.plaf.synth.SynthTextFieldUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI javax.swing.text.JTextComponent access$200(javax.swing.plaf.synth.SynthTextFieldUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI void paintBackground(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI void paintBackground(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI void updateStyle(javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI void updateStyle(javax.swing.text.JTextComponent, javax.swing.plaf.synth.SynthContext, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI void updateStyle(javax.swing.text.JTextComponent, javax.swing.plaf.synth.SynthContext, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI void updateStyle(javax.swing.text.JTextComponent, javax.swing.plaf.synth.SynthContext, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI.Handler Handler(javax.swing.plaf.synth.SynthTextFieldUI, javax.swing.plaf.synth.SynthTextFieldUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI.Handler void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextFieldUI.Handler void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextPaneUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextPaneUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextPaneUI void installUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextPaneUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextPaneUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextPaneUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextPaneUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextPaneUI void updateFont(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTextPaneUI void updateForeground(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToggleButtonUI java.lang.String getPropertyPrefix()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToggleButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToggleButtonUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToggleButtonUI void paintBackground(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, javax.swing.JComponent) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToggleButtonUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI java.awt.LayoutManager createLayout()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI java.awt.Rectangle access$100(javax.swing.plaf.synth.SynthToolBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI java.awt.Rectangle access$100(javax.swing.plaf.synth.SynthToolBarUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI javax.swing.Icon access$000(javax.swing.plaf.synth.SynthToolBarUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI javax.swing.Icon access$000(javax.swing.plaf.synth.SynthToolBarUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, javax.swing.plaf.synth.Region, javax.swing.plaf.synth.SynthStyle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void installComponents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void paintContent(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void paintContent(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void setBorderToNonRollover(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void setBorderToNonRollover(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void setBorderToNormal(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void setBorderToNormal(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void setBorderToRollover(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void setBorderToRollover(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void uninstallComponents()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI void updateStyle(javax.swing.JToolBar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI.SynthToolBarLayoutManager boolean isGlue(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI.SynthToolBarLayoutManager java.awt.Dimension minimumLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI.SynthToolBarLayoutManager java.awt.Dimension preferredLayoutSize(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI.SynthToolBarLayoutManager void addLayoutComponent(java.lang.String, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI.SynthToolBarLayoutManager void addLayoutComponent(java.lang.String, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI.SynthToolBarLayoutManager void addLayoutComponent(java.lang.String, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI.SynthToolBarLayoutManager void layoutContainer(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI.SynthToolBarLayoutManager void removeLayoutComponent(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolBarUI.SynthToolBarLayoutManager void removeLayoutComponent(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI SynthToolTipUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI int getComponentState(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI java.awt.Dimension getPreferredSize(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI java.awt.Dimension getPreferredSize(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI void installDefaults(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI void installListeners(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI void uninstallDefaults(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI void uninstallListeners(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthToolTipUI void updateStyle(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI boolean access$100(javax.swing.plaf.synth.SynthTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI boolean access$100(javax.swing.plaf.synth.SynthTreeUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI int getComponentState(javax.swing.JComponent, javax.swing.plaf.synth.Region)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI int getRowX(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon access$1100(javax.swing.plaf.synth.SynthTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon access$1100(javax.swing.plaf.synth.SynthTreeUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon access$1200(javax.swing.plaf.synth.SynthTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon access$1200(javax.swing.plaf.synth.SynthTreeUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon access$500(javax.swing.plaf.synth.SynthTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon access$500(javax.swing.plaf.synth.SynthTreeUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon access$600(javax.swing.plaf.synth.SynthTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon access$600(javax.swing.plaf.synth.SynthTreeUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon access$800(javax.swing.plaf.synth.SynthTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon access$800(javax.swing.plaf.synth.SynthTreeUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon access$900(javax.swing.plaf.synth.SynthTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon access$900(javax.swing.plaf.synth.SynthTreeUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.Icon getExpandedIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.JTree access$1000(javax.swing.plaf.synth.SynthTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.JTree access$1000(javax.swing.plaf.synth.SynthTreeUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.JTree access$200(javax.swing.plaf.synth.SynthTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.JTree access$200(javax.swing.plaf.synth.SynthTreeUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.JTree access$400(javax.swing.plaf.synth.SynthTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.JTree access$400(javax.swing.plaf.synth.SynthTreeUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.JTree access$700(javax.swing.plaf.synth.SynthTreeUI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.JTree access$700(javax.swing.plaf.synth.SynthTreeUI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.plaf.synth.SynthContext access$300(javax.swing.plaf.synth.SynthTreeUI, javax.swing.JComponent, javax.swing.plaf.synth.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.tree.TreeCellEditor createDefaultCellEditor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI javax.swing.tree.TreeCellRenderer createDefaultCellRenderer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void drawCentered(java.awt.Component, java.awt.Graphics, javax.swing.Icon, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void drawCentered(java.awt.Component, java.awt.Graphics, javax.swing.Icon, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintExpandControl(java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintExpandControl(java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintExpandControl(java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintHorizontalLine(java.awt.Graphics, javax.swing.JComponent, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintHorizontalPartOfLeg(java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintRow(javax.swing.tree.TreeCellRenderer, javax.swing.tree.DefaultTreeCellRenderer, javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintRow(javax.swing.tree.TreeCellRenderer, javax.swing.tree.DefaultTreeCellRenderer, javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintRow(javax.swing.tree.TreeCellRenderer, javax.swing.tree.DefaultTreeCellRenderer, javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintRow(javax.swing.tree.TreeCellRenderer, javax.swing.tree.DefaultTreeCellRenderer, javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintRow(javax.swing.tree.TreeCellRenderer, javax.swing.tree.DefaultTreeCellRenderer, javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintRow(javax.swing.tree.TreeCellRenderer, javax.swing.tree.DefaultTreeCellRenderer, javax.swing.plaf.synth.SynthContext, javax.swing.plaf.synth.SynthContext, java.awt.Graphics, java.awt.Rectangle, java.awt.Insets, java.awt.Rectangle, java.awt.Rectangle, javax.swing.tree.TreePath, int, boolean, boolean, boolean) 8">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void paintVerticalLine(java.awt.Graphics, javax.swing.JComponent, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void repaintDropLocation(javax.swing.JTree.DropLocation) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI void updateStyle(javax.swing.JTree) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI.ExpandedIconWrapper ExpandedIconWrapper(javax.swing.plaf.synth.SynthTreeUI, javax.swing.plaf.synth.SynthTreeUI.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI.ExpandedIconWrapper int getIconHeight(javax.swing.plaf.synth.SynthContext) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI.ExpandedIconWrapper int getIconWidth(javax.swing.plaf.synth.SynthContext) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI.ExpandedIconWrapper void paintIcon(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI.SynthTreeCellEditor javax.swing.tree.TreeCellEditor createTreeCellEditor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI.SynthTreeCellEditor.1 java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI.SynthTreeCellRenderer java.awt.Component getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI.SynthTreeCellRenderer java.awt.Component getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthTreeUI.SynthTreeCellRenderer java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI SynthViewportUI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI javax.swing.plaf.synth.Region getRegion(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI javax.swing.plaf.synth.SynthContext getContext(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void installDefaults(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void installListeners(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void paint(javax.swing.plaf.synth.SynthContext, java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void paintBorder(javax.swing.plaf.synth.SynthContext, java.awt.Graphics, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void uninstallDefaults(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void uninstallListeners(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void update(java.awt.Graphics, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.plaf.synth.SynthViewportUI void updateStyle(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
