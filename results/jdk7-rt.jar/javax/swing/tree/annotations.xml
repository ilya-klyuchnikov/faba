<root>
  <item name="javax.swing.tree.AbstractLayoutCache AbstractLayoutCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache boolean isFixedRowHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache boolean isRootVisible()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache int getPreferredWidth(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache int getRowHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache int[] getRowsForPaths(javax.swing.tree.TreePath[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache int[] getRowsForPaths(javax.swing.tree.TreePath[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache javax.swing.tree.AbstractLayoutCache.NodeDimensions getNodeDimensions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache javax.swing.tree.TreeModel getModel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache javax.swing.tree.TreeSelectionModel getSelectionModel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache void setModel(javax.swing.tree.TreeModel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache void setNodeDimensions(javax.swing.tree.AbstractLayoutCache.NodeDimensions)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache void setRootVisible(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache void setRowHeight(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.AbstractLayoutCache.NodeDimensions NodeDimensions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode DefaultMutableTreeNode()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode DefaultMutableTreeNode(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode DefaultMutableTreeNode(java.lang.Object, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean getAllowsChildren()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeAncestor(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeAncestor(javax.swing.tree.TreeNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeChild(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeChild(javax.swing.tree.TreeNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeDescendant(javax.swing.tree.DefaultMutableTreeNode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeDescendant(javax.swing.tree.DefaultMutableTreeNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeRelated(javax.swing.tree.DefaultMutableTreeNode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeRelated(javax.swing.tree.DefaultMutableTreeNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeSibling(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode boolean isNodeSibling(javax.swing.tree.TreeNode)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode int getIndex(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode java.lang.Object getUserObject()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode java.util.Enumeration breadthFirstEnumeration()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode java.util.Enumeration pathFromAncestorEnumeration(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode java.util.Enumeration pathFromAncestorEnumeration(javax.swing.tree.TreeNode)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode java.util.Enumeration postorderEnumeration()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode java.util.Enumeration preorderEnumeration()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode javax.swing.tree.TreeNode getChildAfter(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode javax.swing.tree.TreeNode getChildBefore(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode javax.swing.tree.TreeNode getParent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode javax.swing.tree.TreeNode getSharedAncestor(javax.swing.tree.DefaultMutableTreeNode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode javax.swing.tree.TreeNode[] getPathToRoot(javax.swing.tree.TreeNode, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode void insert(javax.swing.tree.MutableTreeNode, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode void remove(javax.swing.tree.MutableTreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode void setParent(javax.swing.tree.MutableTreeNode)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode void setUserObject(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode.BreadthFirstEnumeration.Queue Queue(javax.swing.tree.DefaultMutableTreeNode.BreadthFirstEnumeration)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode.BreadthFirstEnumeration.Queue boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode.BreadthFirstEnumeration.Queue.QNode QNode(javax.swing.tree.DefaultMutableTreeNode.BreadthFirstEnumeration.Queue, java.lang.Object, javax.swing.tree.DefaultMutableTreeNode.BreadthFirstEnumeration.Queue.QNode)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode.PathBetweenNodesEnumeration PathBetweenNodesEnumeration(javax.swing.tree.DefaultMutableTreeNode, javax.swing.tree.TreeNode, javax.swing.tree.TreeNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode.PathBetweenNodesEnumeration PathBetweenNodesEnumeration(javax.swing.tree.DefaultMutableTreeNode, javax.swing.tree.TreeNode, javax.swing.tree.TreeNode) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultMutableTreeNode.PostorderEnumeration boolean hasMoreElements()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor boolean canEditImmediately(java.util.EventObject) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor boolean canEditImmediately(java.util.EventObject)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor boolean shouldStartEditingTimer(java.util.EventObject) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor boolean shouldStartEditingTimer(java.util.EventObject)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor java.awt.Color getBorderSelectionColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor java.awt.Component getTreeCellEditorComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor java.awt.Container createContainer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor java.awt.Font getFont()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor javax.swing.tree.TreeCellEditor createTreeCellEditor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor void determineOffset(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor void determineOffset(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor void setBorderSelectionColor(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor void setFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor void valueChanged(javax.swing.event.TreeSelectionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor.1 1(javax.swing.tree.DefaultTreeCellEditor, javax.swing.JTextField) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor.DefaultTextField javax.swing.border.Border getBorder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellEditor.EditorContainer int calculateIconY(javax.swing.Icon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer java.awt.Color getBackgroundNonSelectionColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer java.awt.Color getBackgroundSelectionColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer java.awt.Color getBorderSelectionColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer java.awt.Color getTextNonSelectionColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer java.awt.Color getTextSelectionColor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer java.awt.Component getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer java.awt.Component getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer javax.swing.Icon getClosedIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer javax.swing.Icon getLeafIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer javax.swing.Icon getOpenIcon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, byte, byte) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, byte, byte)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, char, char) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, char, char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, double, double) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, float, float) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, float, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, long, long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, long, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, short, short) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void firePropertyChange(java.lang.String, short, short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void invalidate()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void paintFocus(java.awt.Graphics, int, int, int, int, java.awt.Color) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void repaint()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void repaint(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void repaint(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void repaint(long, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void revalidate()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void setBackgroundNonSelectionColor(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void setBackgroundSelectionColor(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void setBorderSelectionColor(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void setClosedIcon(javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void setLeafIcon(javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void setOpenIcon(javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void setTextNonSelectionColor(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void setTextSelectionColor(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeCellRenderer void validate()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel DefaultTreeModel(javax.swing.tree.TreeNode)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel DefaultTreeModel(javax.swing.tree.TreeNode, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel boolean asksAllowsChildren()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel boolean isLeaf(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel int getChildCount(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel int getIndexOfChild(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel int getIndexOfChild(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel java.lang.Object getChild(java.lang.Object, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel java.lang.Object getRoot()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel javax.swing.tree.TreeNode[] getPathToRoot(javax.swing.tree.TreeNode, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void insertNodeInto(javax.swing.tree.MutableTreeNode, javax.swing.tree.MutableTreeNode, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void nodeChanged(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void nodeStructureChanged(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void nodesChanged(javax.swing.tree.TreeNode, int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void nodesChanged(javax.swing.tree.TreeNode, int[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void nodesWereInserted(javax.swing.tree.TreeNode, int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void nodesWereInserted(javax.swing.tree.TreeNode, int[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void nodesWereRemoved(javax.swing.tree.TreeNode, int[], java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void nodesWereRemoved(javax.swing.tree.TreeNode, int[], java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void reload(javax.swing.tree.TreeNode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void removeNodeFromParent(javax.swing.tree.MutableTreeNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void setAsksAllowsChildren(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeModel void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel boolean arePathsContiguous(javax.swing.tree.TreePath[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel boolean canPathsBeAdded(javax.swing.tree.TreePath[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel boolean canPathsBeAdded(javax.swing.tree.TreePath[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel boolean canPathsBeRemoved(javax.swing.tree.TreePath[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel boolean isPathSelected(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel boolean isPathSelected(javax.swing.tree.TreePath)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel boolean isSelectionEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel int getLeadSelectionRow()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel int getSelectionCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel int getSelectionMode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel javax.swing.tree.RowMapper getRowMapper()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel javax.swing.tree.TreePath getLeadSelectionPath()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel javax.swing.tree.TreePath getSelectionPath()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel javax.swing.tree.TreePath[] getSelectionPaths()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel void addSelectionPath(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel void insureUniqueness()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel void notifyPathChange(java.util.Vector, javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel void removeSelectionPath(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel void removeSelectionPaths(javax.swing.tree.TreePath[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel void setSelectionPath(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel void updateLeadIndex()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.DefaultTreeSelectionModel void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache boolean ensurePathIsExpanded(javax.swing.tree.TreePath, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache boolean ensurePathIsExpanded(javax.swing.tree.TreePath, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache boolean getExpandedState(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache boolean isExpanded(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache boolean isExpanded(javax.swing.tree.TreePath)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache int access$502(javax.swing.tree.FixedHeightLayoutCache, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache int getRowCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache int getRowForPath(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache int getVisibleChildCount(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache java.awt.Rectangle getBounds(javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode, int, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache java.awt.Rectangle getBounds(javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode, int, java.awt.Rectangle) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache java.awt.Rectangle getBounds(javax.swing.tree.TreePath, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache java.awt.Rectangle getBounds(javax.swing.tree.TreePath, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache java.awt.Rectangle getBounds(javax.swing.tree.TreePath, java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache java.util.Enumeration&lt;javax.swing.tree.TreePath&gt; getVisiblePathsFrom(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache java.util.Enumeration&lt;javax.swing.tree.TreePath&gt; getVisiblePathsFrom(javax.swing.tree.TreePath)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode access$300(javax.swing.tree.FixedHeightLayoutCache, java.lang.Object, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode access$300(javax.swing.tree.FixedHeightLayoutCache, java.lang.Object, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode access$600(javax.swing.tree.FixedHeightLayoutCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode access$600(javax.swing.tree.FixedHeightLayoutCache)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode createNodeForValue(java.lang.Object, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode getNodeForPath(javax.swing.tree.TreePath, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode getNodeForPath(javax.swing.tree.TreePath, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void access$100(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void access$100(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void access$200(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void access$200(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void access$400(javax.swing.tree.FixedHeightLayoutCache, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void addMapping(javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void adjustRowCountBy(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void invalidatePathBounds(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void invalidatePathBounds(javax.swing.tree.TreePath)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void invalidateSizes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void removeMapping(javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void setExpandedState(javax.swing.tree.TreePath, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void treeNodesChanged(javax.swing.event.TreeModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void treeNodesInserted(javax.swing.event.TreeModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void treeNodesRemoved(javax.swing.event.TreeModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void treeStructureChanged(javax.swing.event.TreeModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache void visibleNodesChanged()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode FHTreeStateNode(javax.swing.tree.FixedHeightLayoutCache, java.lang.Object, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode boolean isExpanded()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode int getChildIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode int getRow()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode javax.swing.tree.TreePath getTreePath()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode void addNode(javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode void didAdjustTree()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode void resetChildrenPaths(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.SearchInfo SearchInfo(javax.swing.tree.FixedHeightLayoutCache)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.SearchInfo SearchInfo(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.SearchInfo SearchInfo(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.1)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.VisibleFHTreeStateNodeEnumeration VisibleFHTreeStateNodeEnumeration(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.VisibleFHTreeStateNodeEnumeration VisibleFHTreeStateNodeEnumeration(javax.swing.tree.FixedHeightLayoutCache, javax.swing.tree.FixedHeightLayoutCache.FHTreeStateNode, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.FixedHeightLayoutCache.VisibleFHTreeStateNodeEnumeration boolean hasMoreElements()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.PathPlaceHolder PathPlaceHolder(javax.swing.tree.TreePath, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.TreePath TreePath()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.TreePath TreePath(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath TreePath(java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath TreePath(java.lang.Object[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath TreePath(javax.swing.tree.TreePath, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.TreePath boolean isDescendant(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.TreePath java.lang.Object getLastPathComponent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.TreePath java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath javax.swing.tree.TreePath getParentPath()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.TreePath javax.swing.tree.TreePath pathByAddingChild(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.TreePath javax.swing.tree.TreePath pathByAddingChild(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache boolean access$500(javax.swing.tree.VariableHeightLayoutCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache boolean access$500(javax.swing.tree.VariableHeightLayoutCache)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache boolean access$502(javax.swing.tree.VariableHeightLayoutCache, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache boolean access$502(javax.swing.tree.VariableHeightLayoutCache, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache boolean getExpandedState(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache boolean isExpanded(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache boolean isExpanded(javax.swing.tree.TreePath)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache int getPreferredWidth(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache int getRowForPath(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache int getVisibleChildCount(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache java.awt.Rectangle access$400(javax.swing.tree.VariableHeightLayoutCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache java.awt.Rectangle access$400(javax.swing.tree.VariableHeightLayoutCache)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache java.awt.Rectangle getBounds(javax.swing.tree.TreePath, java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache java.util.Enumeration&lt;javax.swing.tree.TreePath&gt; getVisiblePathsFrom(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache java.util.Vector access$100(javax.swing.tree.VariableHeightLayoutCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache java.util.Vector access$100(javax.swing.tree.VariableHeightLayoutCache)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode access$200(javax.swing.tree.VariableHeightLayoutCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode access$200(javax.swing.tree.VariableHeightLayoutCache)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode access$600(javax.swing.tree.VariableHeightLayoutCache, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode access$600(javax.swing.tree.VariableHeightLayoutCache, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode createNodeAt(javax.swing.tree.VariableHeightLayoutCache.TreeStateNode, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode createNodeAt(javax.swing.tree.VariableHeightLayoutCache.TreeStateNode, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode createNodeForValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode getNodeForPath(javax.swing.tree.TreePath, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache javax.swing.tree.VariableHeightLayoutCache.TreeStateNode getNodeForPath(javax.swing.tree.TreePath, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void access$000(javax.swing.tree.VariableHeightLayoutCache, javax.swing.tree.VariableHeightLayoutCache.TreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void access$000(javax.swing.tree.VariableHeightLayoutCache, javax.swing.tree.VariableHeightLayoutCache.TreeStateNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void access$300(javax.swing.tree.VariableHeightLayoutCache, javax.swing.tree.VariableHeightLayoutCache.TreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void access$300(javax.swing.tree.VariableHeightLayoutCache, javax.swing.tree.VariableHeightLayoutCache.TreeStateNode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void access$700(javax.swing.tree.VariableHeightLayoutCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void access$700(javax.swing.tree.VariableHeightLayoutCache)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void addMapping(javax.swing.tree.VariableHeightLayoutCache.TreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void ensurePathIsExpanded(javax.swing.tree.TreePath, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void invalidatePathBounds(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void removeMapping(javax.swing.tree.VariableHeightLayoutCache.TreeStateNode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void setExpandedState(javax.swing.tree.TreePath, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void treeNodesChanged(javax.swing.event.TreeModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void treeNodesInserted(javax.swing.event.TreeModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void treeNodesRemoved(javax.swing.event.TreeModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void treeStructureChanged(javax.swing.event.TreeModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache void visibleNodesChanged()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode TreeStateNode(javax.swing.tree.VariableHeightLayoutCache, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode boolean hasBeenExpanded()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode boolean hasValidSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode boolean isExpanded()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode java.awt.Rectangle getNodeBounds(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode java.awt.Rectangle getNodeBounds(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode javax.swing.tree.TreePath getTreePath()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode void didAdjustTree()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode void markSizeInvalid()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode void resetChildrenPaths(javax.swing.tree.TreePath) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode void setYOrigin(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.TreeStateNode void shiftYOriginBy(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.swing.tree.VariableHeightLayoutCache.VisibleTreeStateNodeEnumeration boolean hasMoreElements()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
</root>
