<root>
  <item name="javax.swing.undo.AbstractUndoableEdit boolean addEdit(javax.swing.undo.UndoableEdit) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.undo.AbstractUndoableEdit boolean addEdit(javax.swing.undo.UndoableEdit)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;false;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.undo.AbstractUndoableEdit boolean canRedo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.undo.AbstractUndoableEdit boolean canUndo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.undo.AbstractUndoableEdit boolean isSignificant()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.undo.AbstractUndoableEdit boolean replaceEdit(javax.swing.undo.UndoableEdit) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.undo.AbstractUndoableEdit boolean replaceEdit(javax.swing.undo.UndoableEdit)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;false;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.undo.AbstractUndoableEdit java.lang.String getPresentationName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.undo.AbstractUndoableEdit java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.undo.CompoundEdit boolean isInProgress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.undo.CompoundEdit java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.undo.CompoundEdit javax.swing.undo.UndoableEdit lastEdit()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.undo.StateEdit java.lang.String getPresentationName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.undo.UndoManager int getLimit()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.undo.UndoManager java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.undo.UndoManager javax.swing.undo.UndoableEdit editToBeRedone()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.undo.UndoManager javax.swing.undo.UndoableEdit editToBeUndone()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.undo.UndoManager void redoTo(javax.swing.undo.UndoableEdit) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.undo.UndoManager void undoTo(javax.swing.undo.UndoableEdit) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.undo.UndoManager void undoableEditHappened(javax.swing.event.UndoableEditEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.undo.UndoableEditSupport UndoableEditSupport(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.swing.undo.UndoableEditSupport int getUpdateLevel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.swing.undo.UndoableEditSupport java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.swing.undo.UndoableEditSupport javax.swing.undo.CompoundEdit createCompoundEdit()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
