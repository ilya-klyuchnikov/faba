<root>
  <item name="javax.sound.sampled.spi.AudioFileReader AudioFileReader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.sound.sampled.spi.AudioFileWriter AudioFileWriter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.sound.sampled.spi.AudioFileWriter boolean isFileTypeSupported(javax.sound.sampled.AudioFileFormat.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.spi.AudioFileWriter boolean isFileTypeSupported(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.spi.FormatConversionProvider FormatConversionProvider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.sound.sampled.spi.FormatConversionProvider boolean isConversionSupported(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.spi.FormatConversionProvider boolean isConversionSupported(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.spi.FormatConversionProvider boolean isSourceEncodingSupported(javax.sound.sampled.AudioFormat.Encoding)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.spi.FormatConversionProvider boolean isTargetEncodingSupported(javax.sound.sampled.AudioFormat.Encoding)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.spi.MixerProvider MixerProvider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.sound.sampled.spi.MixerProvider boolean isMixerSupported(javax.sound.sampled.Mixer.Info)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
</root>
