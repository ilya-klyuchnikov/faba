<root>
  <item name="javax.sound.sampled.AudioFileFormat AudioFileFormat(javax.sound.sampled.AudioFileFormat.Type, javax.sound.sampled.AudioFormat, int, java.util.Map&lt;java.lang.String,java.lang.Object&gt;) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioFileFormat int getByteLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFileFormat int getFrameLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFileFormat java.lang.Object getProperty(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioFileFormat java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioFileFormat java.util.Map&lt;java.lang.String,java.lang.Object&gt; properties()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioFileFormat javax.sound.sampled.AudioFileFormat.Type getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFileFormat javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFileFormat.Type boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioFileFormat.Type boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFileFormat.Type java.lang.String getExtension()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFileFormat.Type java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFormat AudioFormat(javax.sound.sampled.AudioFormat.Encoding, float, int, int, int, float, boolean, java.util.Map&lt;java.lang.String,java.lang.Object&gt;) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioFormat boolean isBigEndian()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFormat boolean matches(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioFormat float getFrameRate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFormat float getSampleRate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFormat int getChannels()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFormat int getFrameSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFormat int getSampleSizeInBits()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFormat java.lang.Object getProperty(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioFormat java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioFormat java.util.Map&lt;java.lang.String,java.lang.Object&gt; properties()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioFormat javax.sound.sampled.AudioFormat.Encoding getEncoding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFormat.Encoding boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioFormat.Encoding boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioFormat.Encoding java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioInputStream AudioInputStream(java.io.InputStream, javax.sound.sampled.AudioFormat, long) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioInputStream AudioInputStream(javax.sound.sampled.TargetDataLine) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioInputStream int read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioInputStream javax.sound.sampled.AudioFormat getFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioInputStream long getFrameLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioPermission AudioPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioPermission AudioPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioPermission AudioPermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem AudioSystem()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.AudioSystem boolean isAppropriateMixer(javax.sound.sampled.Mixer, javax.sound.sampled.Line.Info, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem java.util.List getMixerInfoList()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem java.util.List getMixerInfoList(java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem java.util.List getMixerInfoList(java.util.List)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.AudioFileFormat getAudioFileFormat(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.AudioFormat.Encoding[] getTargetEncodings(javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.AudioFormat[] getTargetFormats(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioFormat)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.AudioInputStream getAudioInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.AudioInputStream getAudioInputStream(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.AudioInputStream getAudioInputStream(javax.sound.sampled.AudioFormat.Encoding, javax.sound.sampled.AudioInputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.Line.Info[] getSourceLineInfo(javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.Line.Info[] getTargetLineInfo(javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.Mixer getDefaultMixer(java.util.List, javax.sound.sampled.Line.Info) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.Mixer getDefaultMixer(java.util.List, javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.Mixer getFirstMixer(javax.sound.sampled.spi.MixerProvider, javax.sound.sampled.Line.Info, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.Mixer getFirstMixer(javax.sound.sampled.spi.MixerProvider, javax.sound.sampled.Line.Info, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.Mixer getNamedMixer(java.lang.String, java.util.List, javax.sound.sampled.Line.Info) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.Mixer getNamedMixer(java.lang.String, java.util.List, javax.sound.sampled.Line.Info) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.Mixer getNamedMixer(java.lang.String, java.util.List, javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.Mixer getNamedMixer(java.lang.String, javax.sound.sampled.spi.MixerProvider, javax.sound.sampled.Line.Info) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.Mixer getNamedMixer(java.lang.String, javax.sound.sampled.spi.MixerProvider, javax.sound.sampled.Line.Info) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.Mixer getNamedMixer(java.lang.String, javax.sound.sampled.spi.MixerProvider, javax.sound.sampled.Line.Info)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.SourceDataLine getSourceDataLine(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.SourceDataLine getSourceDataLine(javax.sound.sampled.AudioFormat, javax.sound.sampled.Mixer.Info) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.TargetDataLine getTargetDataLine(javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.TargetDataLine getTargetDataLine(javax.sound.sampled.AudioFormat, javax.sound.sampled.Mixer.Info) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.spi.MixerProvider getNamedProvider(java.lang.String, java.util.List) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.spi.MixerProvider getNamedProvider(java.lang.String, java.util.List) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.AudioSystem javax.sound.sampled.spi.MixerProvider getNamedProvider(java.lang.String, java.util.List)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.BooleanControl boolean getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.BooleanControl java.lang.String getStateLabel(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.BooleanControl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.CompoundControl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.CompoundControl javax.sound.sampled.Control[] getMemberControls()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.Control java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.Control javax.sound.sampled.Control.Type getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.Control.Type boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.Control.Type boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.Control.Type java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.DataLine.Info Info(java.lang.Class&lt;?&gt;, javax.sound.sampled.AudioFormat) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.DataLine.Info Info(java.lang.Class&lt;?&gt;, javax.sound.sampled.AudioFormat) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.DataLine.Info Info(java.lang.Class&lt;?&gt;, javax.sound.sampled.AudioFormat, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.DataLine.Info Info(java.lang.Class&lt;?&gt;, javax.sound.sampled.AudioFormat, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.DataLine.Info Info(java.lang.Class&lt;?&gt;, javax.sound.sampled.AudioFormat[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.DataLine.Info Info(java.lang.Class&lt;?&gt;, javax.sound.sampled.AudioFormat[], int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.DataLine.Info int getMaxBufferSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.DataLine.Info int getMinBufferSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.DataLine.Info java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.DataLine.Info javax.sound.sampled.AudioFormat[] getFormats()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.EnumControl java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.EnumControl java.lang.Object[] getValues()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.EnumControl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.FloatControl FloatControl(javax.sound.sampled.FloatControl.Type, float, float, float, int, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.FloatControl FloatControl(javax.sound.sampled.FloatControl.Type, float, float, float, int, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 8">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.FloatControl FloatControl(javax.sound.sampled.FloatControl.Type, float, float, float, int, float, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 9">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.FloatControl float getMaximum()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.FloatControl float getMinimum()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.FloatControl float getPrecision()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.FloatControl float getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.FloatControl int getUpdatePeriod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.FloatControl java.lang.String getMaxLabel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.FloatControl java.lang.String getMidLabel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.FloatControl java.lang.String getMinLabel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.FloatControl java.lang.String getUnits()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.FloatControl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.Line.Info Info(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.Line.Info java.lang.Class&lt;?&gt; getLineClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.Line.Info java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.LineEvent LineEvent(javax.sound.sampled.Line, javax.sound.sampled.LineEvent.Type, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.LineEvent java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.LineEvent javax.sound.sampled.LineEvent.Type getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.LineEvent long getFramePosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.LineEvent.Type boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.LineEvent.Type boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.LineEvent.Type java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.Mixer.Info boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.Mixer.Info boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.Mixer.Info java.lang.String getDescription()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.Mixer.Info java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.Mixer.Info java.lang.String getVendor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.Mixer.Info java.lang.String getVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.Mixer.Info java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.Port.Info Info(java.lang.Class&lt;?&gt;, java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.Port.Info boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.Port.Info boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.Port.Info boolean isSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.Port.Info java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.Port.Info java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.sound.sampled.ReverbType boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.sound.sampled.ReverbType boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.ReverbType float getEarlyReflectionIntensity()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.ReverbType float getLateReflectionIntensity()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.ReverbType int getDecayTime()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.ReverbType int getEarlyReflectionDelay()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.ReverbType int getLateReflectionDelay()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.ReverbType java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="javax.sound.sampled.ReverbType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
