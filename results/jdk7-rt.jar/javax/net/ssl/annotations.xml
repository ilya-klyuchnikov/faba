<root>
  <item name="javax.net.ssl.CertPathTrustManagerParameters CertPathTrustManagerParameters(java.security.cert.CertPathParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLServerSocketFactory java.lang.String[] getDefaultCipherSuites()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLServerSocketFactory java.lang.String[] getSupportedCipherSuites()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLServerSocketFactory java.net.ServerSocket createServerSocket(int, int, java.net.InetAddress) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory java.lang.String[] getDefaultCipherSuites()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory java.lang.String[] getSupportedCipherSuites()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory java.net.Socket createSocket(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory java.net.Socket createSocket(java.lang.String, int, java.net.InetAddress, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory java.net.Socket createSocket(java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory java.net.Socket createSocket(java.net.InetAddress, int, java.net.InetAddress, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.DefaultSSLSocketFactory java.net.Socket createSocket(java.net.Socket, java.lang.String, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.HandshakeCompletedEvent HandshakeCompletedEvent(javax.net.ssl.SSLSocket, javax.net.ssl.SSLSession) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection void setDefaultHostnameVerifier(javax.net.ssl.HostnameVerifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection void setDefaultSSLSocketFactory(javax.net.ssl.SSLSocketFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection void setHostnameVerifier(javax.net.ssl.HostnameVerifier) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection.DefaultHostnameVerifier DefaultHostnameVerifier(javax.net.ssl.HttpsURLConnection.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection.DefaultHostnameVerifier boolean verify(java.lang.String, javax.net.ssl.SSLSession) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection.DefaultHostnameVerifier boolean verify(java.lang.String, javax.net.ssl.SSLSession) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.HttpsURLConnection.DefaultHostnameVerifier boolean verify(java.lang.String, javax.net.ssl.SSLSession)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;false;_,!null-&gt;false;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.KeyManagerFactory java.lang.String getDefaultAlgorithm()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.KeyManagerFactory javax.net.ssl.KeyManagerFactory getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.KeyStoreBuilderParameters KeyStoreBuilderParameters(java.security.KeyStore.Builder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.KeyStoreBuilderParameters KeyStoreBuilderParameters(java.util.List&lt;java.security.KeyStore.Builder&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLContext javax.net.ssl.SSLContext getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLContext void setDefault(javax.net.ssl.SSLContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLContextSpi javax.net.ssl.SSLParameters engineGetSupportedSSLParameters()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLEngine javax.net.ssl.SSLEngineResult unwrap(java.nio.ByteBuffer, java.nio.ByteBuffer[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLEngine javax.net.ssl.SSLEngineResult wrap(java.nio.ByteBuffer[], java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLEngine javax.net.ssl.SSLParameters getSSLParameters()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLEngine void setSSLParameters(javax.net.ssl.SSLParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLEngineResult SSLEngineResult(javax.net.ssl.SSLEngineResult.Status, javax.net.ssl.SSLEngineResult.HandshakeStatus, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLEngineResult SSLEngineResult(javax.net.ssl.SSLEngineResult.Status, javax.net.ssl.SSLEngineResult.HandshakeStatus, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLEngineResult java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLParameters java.lang.String[] clone(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.SSLParameters java.lang.String[] clone(java.lang.String[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.SSLParameters void setCipherSuites(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.SSLParameters void setProtocols(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.SSLPermission SSLPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLPermission SSLPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLPermission SSLPermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.SSLServerSocket SSLServerSocket(int, int, java.net.InetAddress) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.SSLServerSocket javax.net.ssl.SSLParameters getSSLParameters()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLServerSocket void setSSLParameters(javax.net.ssl.SSLParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLSessionBindingEvent SSLSessionBindingEvent(javax.net.ssl.SSLSession, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLSocket SSLSocket(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.SSLSocket SSLSocket(java.lang.String, int, java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.SSLSocket SSLSocket(java.lang.String, int, java.net.InetAddress, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.SSLSocket SSLSocket(java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.SSLSocket SSLSocket(java.net.InetAddress, int, java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.SSLSocket SSLSocket(java.net.InetAddress, int, java.net.InetAddress, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.SSLSocket javax.net.ssl.SSLParameters getSSLParameters()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.SSLSocket void setSSLParameters(javax.net.ssl.SSLParameters) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.TrustManagerFactory java.lang.String getDefaultAlgorithm()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.TrustManagerFactory javax.net.ssl.TrustManagerFactory getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.net.ssl.X509ExtendedKeyManager java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.X509ExtendedKeyManager java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.X509ExtendedKeyManager java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.X509ExtendedKeyManager java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;null;_,!null,_-&gt;null;_,_,!null-&gt;null;_,_,null-&gt;null;_,null,_-&gt;null;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.net.ssl.X509ExtendedKeyManager java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.X509ExtendedKeyManager java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.X509ExtendedKeyManager java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.net.ssl.X509ExtendedKeyManager java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;null;_,!null,_-&gt;null;_,_,!null-&gt;null;_,_,null-&gt;null;_,null,_-&gt;null;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
</root>
