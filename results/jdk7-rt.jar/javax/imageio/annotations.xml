<root>
  <item name="javax.imageio.IIOImage IIOImage(java.awt.image.Raster, java.util.List&lt;? extends java.awt.image.BufferedImage&gt;, javax.imageio.metadata.IIOMetadata) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.IIOImage IIOImage(java.awt.image.RenderedImage, java.util.List&lt;? extends java.awt.image.BufferedImage&gt;, javax.imageio.metadata.IIOMetadata) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.IIOImage boolean hasRaster()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOImage java.awt.image.Raster getRaster()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOImage java.awt.image.RenderedImage getRenderedImage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOImage java.util.List&lt;? extends java.awt.image.BufferedImage&gt; getThumbnails()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOImage javax.imageio.metadata.IIOMetadata getMetadata()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOImage void setMetadata(javax.imageio.metadata.IIOMetadata)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.IIOImage void setRaster(java.awt.image.Raster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.IIOImage void setRenderedImage(java.awt.image.RenderedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.IIOImage void setThumbnails(java.util.List&lt;? extends java.awt.image.BufferedImage&gt;)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.IIOParam IIOParam()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.IIOParam boolean hasController()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOParam int getSourceXSubsampling()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOParam int getSourceYSubsampling()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOParam int getSubsamplingXOffset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOParam int getSubsamplingYOffset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOParam javax.imageio.IIOParamController getController()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOParam javax.imageio.IIOParamController getDefaultController()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOParam javax.imageio.ImageTypeSpecifier getDestinationType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.IIOParam void setController(javax.imageio.IIOParamController)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.IIOParam void setDestinationOffset(java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.IIOParam void setDestinationType(javax.imageio.ImageTypeSpecifier)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.IIOParam void setSourceBands(int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.IIOParam void setSourceRegion(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageIO ImageIO()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageIO boolean access$200(java.lang.String[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO boolean access$200(java.lang.String[], java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.imageio.ImageIO boolean contains(java.lang.String[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO boolean contains(java.lang.String[], java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.imageio.ImageIO boolean doWrite(java.awt.image.RenderedImage, javax.imageio.ImageWriter, javax.imageio.stream.ImageOutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageIO boolean doWrite(java.awt.image.RenderedImage, javax.imageio.ImageWriter, javax.imageio.stream.ImageOutputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;true;_,_,null-&gt;false;_,null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.imageio.ImageIO boolean write(java.awt.image.RenderedImage, java.lang.String, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO boolean write(java.awt.image.RenderedImage, java.lang.String, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO boolean write(java.awt.image.RenderedImage, java.lang.String, java.io.File) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO boolean write(java.awt.image.RenderedImage, java.lang.String, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO boolean write(java.awt.image.RenderedImage, java.lang.String, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO boolean write(java.awt.image.RenderedImage, java.lang.String, java.io.OutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO boolean write(java.awt.image.RenderedImage, java.lang.String, javax.imageio.stream.ImageOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO boolean write(java.awt.image.RenderedImage, java.lang.String, javax.imageio.stream.ImageOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO boolean write(java.awt.image.RenderedImage, java.lang.String, javax.imageio.stream.ImageOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.awt.image.BufferedImage read(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.awt.image.BufferedImage read(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.awt.image.BufferedImage read(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.awt.image.BufferedImage read(javax.imageio.stream.ImageInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.util.Iterator&lt;javax.imageio.ImageReader&gt; getImageReaders(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.util.Iterator&lt;javax.imageio.ImageReader&gt; getImageReadersByFormatName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.util.Iterator&lt;javax.imageio.ImageReader&gt; getImageReadersByMIMEType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.util.Iterator&lt;javax.imageio.ImageReader&gt; getImageReadersBySuffix(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.util.Iterator&lt;javax.imageio.ImageTranscoder&gt; getImageTranscoders(javax.imageio.ImageReader, javax.imageio.ImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.util.Iterator&lt;javax.imageio.ImageTranscoder&gt; getImageTranscoders(javax.imageio.ImageReader, javax.imageio.ImageWriter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.util.Iterator&lt;javax.imageio.ImageWriter&gt; getImageWriters(javax.imageio.ImageTypeSpecifier, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.util.Iterator&lt;javax.imageio.ImageWriter&gt; getImageWriters(javax.imageio.ImageTypeSpecifier, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.util.Iterator&lt;javax.imageio.ImageWriter&gt; getImageWritersByFormatName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.util.Iterator&lt;javax.imageio.ImageWriter&gt; getImageWritersByMIMEType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO java.util.Iterator&lt;javax.imageio.ImageWriter&gt; getImageWritersBySuffix(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO javax.imageio.ImageReader getImageReader(javax.imageio.ImageWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO javax.imageio.ImageWriter getImageWriter(javax.imageio.ImageReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO javax.imageio.ImageWriter getWriter(java.awt.image.RenderedImage, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO javax.imageio.ImageWriter getWriter(java.awt.image.RenderedImage, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO javax.imageio.spi.IIORegistry access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageIO javax.imageio.stream.ImageInputStream createImageInputStream(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO javax.imageio.stream.ImageOutputStream createImageOutputStream(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO.CacheInfo CacheInfo()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.CacheInfo boolean getUseCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageIO.CacheInfo java.io.File getCacheDirectory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageIO.CacheInfo java.lang.Boolean getHasPermission()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageIO.CacheInfo void setCacheDirectory(java.io.File)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.CacheInfo void setHasPermission(java.lang.Boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.CacheInfo void setUseCache(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.CanDecodeInputFilter CanDecodeInputFilter(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.CanDecodeInputFilter boolean filter(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.imageio.ImageIO.CanEncodeImageAndFormatFilter CanEncodeImageAndFormatFilter(javax.imageio.ImageTypeSpecifier, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.CanEncodeImageAndFormatFilter boolean filter(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO.ContainsFilter ContainsFilter(java.lang.reflect.Method, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.ImageReaderIterator ImageReaderIterator(java.util.Iterator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.ImageTranscoderIterator ImageTranscoderIterator(java.util.Iterator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.ImageWriterIterator ImageWriterIterator(java.util.Iterator)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.SpiInfo SpiInfo(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.SpiInfo SpiInfo(java.lang.String, int, javax.imageio.ImageIO.1) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageIO.SpiInfo SpiInfo(java.lang.String, int, javax.imageio.ImageIO.1)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.SpiInfo.1 1(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.SpiInfo.1 java.lang.String[] info(javax.imageio.spi.ImageReaderWriterSpi) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO.SpiInfo.2 2(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.SpiInfo.2 java.lang.String[] info(javax.imageio.spi.ImageReaderWriterSpi) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO.SpiInfo.3 3(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageIO.SpiInfo.3 java.lang.String[] info(javax.imageio.spi.ImageReaderWriterSpi) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO.TranscoderFilter TranscoderFilter(javax.imageio.spi.ImageReaderSpi, javax.imageio.spi.ImageWriterSpi) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO.TranscoderFilter TranscoderFilter(javax.imageio.spi.ImageReaderSpi, javax.imageio.spi.ImageWriterSpi) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageIO.TranscoderFilter boolean filter(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageReadParam ImageReadParam()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageReadParam boolean canSetSourceRenderSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReadParam int getSourceMaxProgressivePass()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReadParam int getSourceMinProgressivePass()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReadParam int getSourceNumProgressivePasses()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReadParam java.awt.image.BufferedImage getDestination()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReadParam void setDestination(java.awt.image.BufferedImage)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageReadParam void setDestinationBands(int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageReadParam void setSourceRenderSize(java.awt.Dimension) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageReader ImageReader(javax.imageio.spi.ImageReaderSpi)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageReader boolean abortRequested()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader boolean canReadRaster()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader boolean isIgnoringMetadata()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader boolean isImageTiled(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader boolean isRandomAccessEasy(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader boolean isSeekForwardOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader boolean readerSupportsThumbnails()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader int getMinIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader int getNumThumbnails(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader int getTileGridXOffset(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader int getTileGridYOffset(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader java.awt.Rectangle getSourceRegion(javax.imageio.ImageReadParam, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageReader java.awt.Rectangle getSourceRegion(javax.imageio.ImageReadParam, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.imageio.ImageReader java.awt.image.BufferedImage getDestination(javax.imageio.ImageReadParam, java.util.Iterator&lt;javax.imageio.ImageTypeSpecifier&gt;, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageReader java.awt.image.Raster readRaster(int, javax.imageio.ImageReadParam) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageReader java.lang.Object getInput()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader java.util.Iterator&lt;javax.imageio.IIOImage&gt; readAll(java.util.Iterator&lt;? extends javax.imageio.ImageReadParam&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageReader java.util.List addToList(java.util.List, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageReader java.util.List addToList(java.util.List, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="javax.imageio.ImageReader java.util.List removeFromList(java.util.List, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="javax.imageio.ImageReader java.util.Locale getLocale()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader javax.imageio.IIOImage readAll(int, javax.imageio.ImageReadParam)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageReader javax.imageio.ImageReadParam getDefaultReadParam()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader javax.imageio.metadata.IIOMetadata getImageMetadata(int, java.lang.String, java.util.Set&lt;java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageReader javax.imageio.metadata.IIOMetadata getImageMetadata(int, java.lang.String, java.util.Set&lt;java.lang.String&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageReader javax.imageio.metadata.IIOMetadata getMetadata(java.lang.String, java.util.Set, boolean, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageReader javax.imageio.metadata.IIOMetadata getMetadata(java.lang.String, java.util.Set, boolean, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageReader javax.imageio.metadata.IIOMetadata getStreamMetadata(java.lang.String, java.util.Set&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageReader javax.imageio.metadata.IIOMetadata getStreamMetadata(java.lang.String, java.util.Set&lt;java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageReader javax.imageio.spi.ImageReaderSpi getOriginatingProvider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader void abort()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageReader void addIIOReadProgressListener(javax.imageio.event.IIOReadProgressListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageReader void addIIOReadUpdateListener(javax.imageio.event.IIOReadUpdateListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageReader void addIIOReadWarningListener(javax.imageio.event.IIOReadWarningListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageReader void clearAbortRequest()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageReader void computeRegions(javax.imageio.ImageReadParam, int, int, java.awt.image.BufferedImage, java.awt.Rectangle, java.awt.Rectangle) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageReader void computeRegions(javax.imageio.ImageReadParam, int, int, java.awt.image.BufferedImage, java.awt.Rectangle, java.awt.Rectangle) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageReader void dispose()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageReader void removeAllIIOReadProgressListeners()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageReader void removeAllIIOReadUpdateListeners()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageReader void removeAllIIOReadWarningListeners()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageReader void removeIIOReadProgressListener(javax.imageio.event.IIOReadProgressListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageReader void removeIIOReadUpdateListener(javax.imageio.event.IIOReadUpdateListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageReader void removeIIOReadWarningListener(javax.imageio.event.IIOReadWarningListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageReader.1 1(javax.imageio.ImageReader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier ImageTypeSpecifier()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier ImageTypeSpecifier(java.awt.image.ColorModel, java.awt.image.SampleModel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier ImageTypeSpecifier(java.awt.image.ColorModel, java.awt.image.SampleModel) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier ImageTypeSpecifier(java.awt.image.RenderedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier ImageTypeSpecifier(javax.imageio.ImageTypeSpecifier.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier ImageTypeSpecifier(javax.imageio.ImageTypeSpecifier.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier int getNumBands()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier java.awt.image.BufferedImage createBufferedImage(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier java.awt.image.ColorModel createComponentCM(java.awt.color.ColorSpace, int, int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier java.awt.image.ColorModel createComponentCM(java.awt.color.ColorSpace, int, int, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier java.awt.image.ColorModel getColorModel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier java.awt.image.SampleModel getSampleModel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createBanded(java.awt.color.ColorSpace, int[], int[], int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createBanded(java.awt.color.ColorSpace, int[], int[], int, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createBanded(java.awt.color.ColorSpace, int[], int[], int, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createBanded(java.awt.color.ColorSpace, int[], int[], int, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createFromRenderedImage(java.awt.image.RenderedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createGrayscale(int, int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createGrayscale(int, int, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createIndexed(byte[], byte[], byte[], byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createIndexed(byte[], byte[], byte[], byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createIndexed(byte[], byte[], byte[], byte[], int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createIndexed(byte[], byte[], byte[], byte[], int, int) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createIndexed(byte[], byte[], byte[], byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createInterleaved(java.awt.color.ColorSpace, int[], int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createInterleaved(java.awt.color.ColorSpace, int[], int, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createInterleaved(java.awt.color.ColorSpace, int[], int, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createPacked(java.awt.color.ColorSpace, int, int, int, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createPacked(java.awt.color.ColorSpace, int, int, int, int, int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier javax.imageio.ImageTypeSpecifier createSpecifier(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Banded Banded(java.awt.color.ColorSpace, int[], int[], int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Banded Banded(java.awt.color.ColorSpace, int[], int[], int, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Banded Banded(java.awt.color.ColorSpace, int[], int[], int, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Banded boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Banded boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Indexed Indexed(byte[], byte[], byte[], byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Indexed Indexed(byte[], byte[], byte[], byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Indexed Indexed(byte[], byte[], byte[], byte[], int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Indexed Indexed(byte[], byte[], byte[], byte[], int, int) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Interleaved Interleaved(java.awt.color.ColorSpace, int[], int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Interleaved Interleaved(java.awt.color.ColorSpace, int[], int, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Interleaved boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Interleaved boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="javax.imageio.ImageTypeSpecifier.Packed Packed(java.awt.color.ColorSpace, int, int, int, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageWriteParam ImageWriteParam()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageWriteParam ImageWriteParam(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageWriteParam boolean canOffsetTiles()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriteParam boolean canWriteCompressed()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriteParam boolean canWriteProgressive()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriteParam boolean canWriteTiles()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriteParam java.awt.Dimension[] clonePreferredTileSizes(java.awt.Dimension[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriteParam java.awt.Dimension[] clonePreferredTileSizes(java.awt.Dimension[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriteParam java.util.Locale getLocale()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriter ImageWriter(javax.imageio.spi.ImageWriterSpi)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageWriter boolean abortRequested()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriter boolean canWriteRasters()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriter boolean canWriteSequence()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriter int getNumThumbnailsSupported(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam, javax.imageio.metadata.IIOMetadata, javax.imageio.metadata.IIOMetadata) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter int getNumThumbnailsSupported(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam, javax.imageio.metadata.IIOMetadata, javax.imageio.metadata.IIOMetadata) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter int getNumThumbnailsSupported(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam, javax.imageio.metadata.IIOMetadata, javax.imageio.metadata.IIOMetadata) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter int getNumThumbnailsSupported(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam, javax.imageio.metadata.IIOMetadata, javax.imageio.metadata.IIOMetadata) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter int getNumThumbnailsSupported(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam, javax.imageio.metadata.IIOMetadata, javax.imageio.metadata.IIOMetadata)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriter java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam, javax.imageio.metadata.IIOMetadata, javax.imageio.metadata.IIOMetadata) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam, javax.imageio.metadata.IIOMetadata, javax.imageio.metadata.IIOMetadata) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam, javax.imageio.metadata.IIOMetadata, javax.imageio.metadata.IIOMetadata) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam, javax.imageio.metadata.IIOMetadata, javax.imageio.metadata.IIOMetadata) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter java.awt.Dimension[] getPreferredThumbnailSizes(javax.imageio.ImageTypeSpecifier, javax.imageio.ImageWriteParam, javax.imageio.metadata.IIOMetadata, javax.imageio.metadata.IIOMetadata)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_-&gt;null;_,!null,_,_-&gt;null;_,_,!null,_-&gt;null;_,_,_,!null-&gt;null;_,_,_,null-&gt;null;_,_,null,_-&gt;null;_,null,_,_-&gt;null;null,_,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriter java.lang.Object getOutput()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriter java.util.Locale getLocale()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriter javax.imageio.ImageWriteParam getDefaultWriteParam()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageWriter javax.imageio.spi.ImageWriterSpi getOriginatingProvider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriter void abort()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageWriter void addIIOWriteProgressListener(javax.imageio.event.IIOWriteProgressListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void addIIOWriteWarningListener(javax.imageio.event.IIOWriteWarningListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void clearAbortRequest()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageWriter void dispose()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="javax.imageio.ImageWriter void prepareInsertEmpty(int, javax.imageio.ImageTypeSpecifier, int, int, javax.imageio.metadata.IIOMetadata, java.util.List&lt;? extends java.awt.image.BufferedImage&gt;, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void prepareInsertEmpty(int, javax.imageio.ImageTypeSpecifier, int, int, javax.imageio.metadata.IIOMetadata, java.util.List&lt;? extends java.awt.image.BufferedImage&gt;, javax.imageio.ImageWriteParam) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void prepareInsertEmpty(int, javax.imageio.ImageTypeSpecifier, int, int, javax.imageio.metadata.IIOMetadata, java.util.List&lt;? extends java.awt.image.BufferedImage&gt;, javax.imageio.ImageWriteParam) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void prepareInsertEmpty(int, javax.imageio.ImageTypeSpecifier, int, int, javax.imageio.metadata.IIOMetadata, java.util.List&lt;? extends java.awt.image.BufferedImage&gt;, javax.imageio.ImageWriteParam) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void prepareReplacePixels(int, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void prepareWriteEmpty(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, int, int, javax.imageio.metadata.IIOMetadata, java.util.List&lt;? extends java.awt.image.BufferedImage&gt;, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void prepareWriteEmpty(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, int, int, javax.imageio.metadata.IIOMetadata, java.util.List&lt;? extends java.awt.image.BufferedImage&gt;, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void prepareWriteEmpty(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, int, int, javax.imageio.metadata.IIOMetadata, java.util.List&lt;? extends java.awt.image.BufferedImage&gt;, javax.imageio.ImageWriteParam) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void prepareWriteEmpty(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, int, int, javax.imageio.metadata.IIOMetadata, java.util.List&lt;? extends java.awt.image.BufferedImage&gt;, javax.imageio.ImageWriteParam) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void prepareWriteEmpty(javax.imageio.metadata.IIOMetadata, javax.imageio.ImageTypeSpecifier, int, int, javax.imageio.metadata.IIOMetadata, java.util.List&lt;? extends java.awt.image.BufferedImage&gt;, javax.imageio.ImageWriteParam) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void prepareWriteSequence(javax.imageio.metadata.IIOMetadata) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void removeAllIIOWriteProgressListeners()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageWriter void removeAllIIOWriteWarningListeners()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="javax.imageio.ImageWriter void removeIIOWriteProgressListener(javax.imageio.event.IIOWriteProgressListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void removeIIOWriteWarningListener(javax.imageio.event.IIOWriteWarningListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void replaceImageMetadata(int, javax.imageio.metadata.IIOMetadata) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void replacePixels(java.awt.image.Raster, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void replacePixels(java.awt.image.Raster, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void replacePixels(java.awt.image.RenderedImage, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void replacePixels(java.awt.image.RenderedImage, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void replaceStreamMetadata(javax.imageio.metadata.IIOMetadata) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void write(java.awt.image.RenderedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="javax.imageio.ImageWriter void writeInsert(int, javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void writeInsert(int, javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void writeToSequence(javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter void writeToSequence(javax.imageio.IIOImage, javax.imageio.ImageWriteParam) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="javax.imageio.ImageWriter.1 1(javax.imageio.ImageWriter)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
