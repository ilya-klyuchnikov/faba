<root>
  <item name="sun.reflect.generics.parser.SignatureParser boolean matches(char, char...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser boolean matches(char, char...)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser java.lang.Error error(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser java.lang.Error error(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser java.lang.String parseIdentifier()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser java.lang.String remainder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.parser.SignatureParser make()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.ArrayTypeSignature parseArrayTypeSignature()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.ClassSignature parseClassSig(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.ClassSignature parseClassSig(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.ClassSignature parseClassSignature()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.ClassTypeSignature parseClassTypeSignature()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.FieldTypeSignature parseFieldTypeSignature()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.FieldTypeSignature parseFieldTypeSignature(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.FieldTypeSignature parseThrowsSignature()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.FormalTypeParameter parseFormalTypeParameter()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.MethodTypeSignature parseMethodSig(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.MethodTypeSignature parseMethodSig(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.MethodTypeSignature parseMethodTypeSignature()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.SimpleClassTypeSignature parsePackageNameAndSimpleClassTypeSignature()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.SimpleClassTypeSignature parseSimpleClassTypeSignature(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.TypeArgument parseTypeArgument()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.TypeSignature parseTypeSig(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.parser.SignatureParser sun.reflect.generics.tree.TypeVariableSignature parseTypeVariableSignature()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
