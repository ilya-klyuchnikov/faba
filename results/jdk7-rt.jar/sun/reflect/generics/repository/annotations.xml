<root>
  <item name="sun.reflect.generics.repository.AbstractRepository T getTree()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.reflect.generics.repository.AbstractRepository sun.reflect.generics.factory.GenericsFactory getFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.reflect.generics.repository.AbstractRepository sun.reflect.generics.visitor.Reifier getReifier()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.reflect.generics.repository.ClassRepository sun.reflect.generics.repository.ClassRepository make(java.lang.String, sun.reflect.generics.factory.GenericsFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.ConstructorRepository sun.reflect.generics.repository.ConstructorRepository make(java.lang.String, sun.reflect.generics.factory.GenericsFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.FieldRepository sun.reflect.generics.repository.FieldRepository make(java.lang.String, sun.reflect.generics.factory.GenericsFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.reflect.generics.repository.MethodRepository sun.reflect.generics.repository.MethodRepository make(java.lang.String, sun.reflect.generics.factory.GenericsFactory)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
