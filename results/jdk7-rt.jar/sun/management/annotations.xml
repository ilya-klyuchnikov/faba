<root>
  <item name="sun.management.Agent java.util.Properties loadManagementProperties()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Agent java.util.Properties parseString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.Agent java.util.Properties parseString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.Agent void agentmain(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.Agent void error(java.lang.Exception) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Agent void error(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.Agent void error(java.lang.String, java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.Agent void premain(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.Agent void startAgent(java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Agent void startDiscoveryService(java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Agent void startRemoteManagementAgent(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.Agent void warning(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.AgentConfigurationError AgentConfigurationError(java.lang.String, java.lang.String...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.AgentConfigurationError AgentConfigurationError(java.lang.String, java.lang.Throwable, java.lang.String...) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ClassLoadingImpl javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.CompilationImpl javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.CompilerThreadStat java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ConnectorAddressLink void export(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ConnectorAddressLink void exportRemote(java.util.Map&lt;java.lang.String,java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.FileSystemImpl boolean isAccessUserOnly(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.FileSystemImpl boolean supportsFileSecurity(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.FileSystemImpl boolean supportsFileSecurity(java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.Flag Flag(java.lang.String, java.lang.Object, boolean, boolean, com.sun.management.VMOption.Origin) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.Flag com.sun.management.VMOption getVMOption()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData com.sun.management.GarbageCollectionNotificationInfo access$000(sun.management.GarbageCollectionNotifInfoCompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData com.sun.management.GcInfo getGcInfo(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData java.lang.String getGcAction(javax.management.openmbean.CompositeData)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData java.lang.String getGcCause(javax.management.openmbean.CompositeData)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData java.lang.String getGcName(javax.management.openmbean.CompositeData)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData javax.management.openmbean.CompositeData getCompositeData()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData javax.management.openmbean.CompositeType getCompositeTypeByBuilder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectionNotifInfoCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GarbageCollectorImpl javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GcInfoCompositeData java.util.Map&lt;java.lang.String,java.lang.management.MemoryUsage&gt; cast(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.GcInfoCompositeData java.util.Map&lt;java.lang.String,java.lang.management.MemoryUsage&gt; getMemoryUsageAfterGc(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GcInfoCompositeData java.util.Map&lt;java.lang.String,java.lang.management.MemoryUsage&gt; getMemoryUsageBeforeGc(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GcInfoCompositeData javax.management.openmbean.CompositeData getCompositeData()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.GcInfoCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotSpotDiagnostic com.sun.management.VMOption getVMOption(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotSpotDiagnostic javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotSpotDiagnostic void setVMOption(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotSpotDiagnostic void setVMOption(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotspotCompilation sun.management.MethodInfo getFailedCompile()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotspotCompilation sun.management.MethodInfo getInvalidatedCompile()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotspotCompilation sun.management.MethodInfo getLastCompile()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotspotCompilation sun.management.counter.Counter access$000(sun.management.HotspotCompilation, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotspotCompilation sun.management.counter.Counter access$000(sun.management.HotspotCompilation, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.HotspotCompilation sun.management.counter.Counter lookup(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.HotspotCompilation.CompilerThreadInfo CompilerThreadInfo(sun.management.HotspotCompilation, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotspotCompilation.CompilerThreadInfo CompilerThreadInfo(sun.management.HotspotCompilation, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotspotCompilation.CompilerThreadInfo CompilerThreadInfo(sun.management.HotspotCompilation, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.HotspotCompilation.CompilerThreadInfo sun.management.CompilerThreadStat getCompilerThreadStat()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.HotspotInternal javax.management.ObjectName preRegister(javax.management.MBeanServer, javax.management.ObjectName) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.HotspotInternal void postRegister(java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.LazyCompositeData boolean getBoolean(javax.management.openmbean.CompositeData, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LazyCompositeData boolean isTypeMatched(javax.management.openmbean.CompositeType, javax.management.openmbean.CompositeType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;true;null,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.LazyCompositeData boolean isTypeMatched(javax.management.openmbean.TabularType, javax.management.openmbean.TabularType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;true;null,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.LazyCompositeData int getInt(javax.management.openmbean.CompositeData, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LazyCompositeData java.lang.String getString(javax.management.openmbean.CompositeData, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LazyCompositeData long getLong(javax.management.openmbean.CompositeData, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LockDataConverter LockDataConverter(java.lang.management.ThreadInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LockDataConverter LockDataConverter(sun.management.LockDataConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.LockDataConverter sun.management.LockDataConverter newLockDataConverter(java.lang.management.ThreadInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LockDataConverter.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.LockDataConverter.1 sun.management.LockDataConverter run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ManagementFactory java.lang.management.GarbageCollectorMXBean createGarbageCollector(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.ManagementFactory java.lang.management.GarbageCollectorMXBean createGarbageCollector(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ManagementFactory java.lang.management.MemoryManagerMXBean createMemoryManager(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ManagementFactory java.lang.management.MemoryPoolMXBean createMemoryPool(java.lang.String, boolean, long, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ManagementFactoryHelper java.lang.management.BufferPoolMXBean createBufferPoolMXBean(sun.misc.JavaNioAccess.BufferPool)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ManagementFactoryHelper void addMBean(javax.management.MBeanServer, java.lang.Object, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ManagementFactoryHelper void unregisterMBean(javax.management.MBeanServer, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ManagementFactoryHelper.1 javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ManagementFactoryHelper.PlatformLoggingImpl javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType java.lang.Object toJavaTypeData(java.lang.Object, java.lang.reflect.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.MappedMXBeanType java.lang.Object toJavaTypeData(java.lang.Object, java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType java.lang.Object toOpenTypeData(java.lang.Object, java.lang.reflect.Type) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.MappedMXBeanType java.lang.Object toOpenTypeData(java.lang.Object, java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType java.lang.String access$300(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType java.lang.String decapitalize(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType sun.management.MappedMXBeanType getMappedType(java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType sun.management.MappedMXBeanType newBasicType(java.lang.Class, javax.management.openmbean.OpenType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType sun.management.MappedMXBeanType newMappedType(java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.ArrayMXBeanType ArrayMXBeanType(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.ArrayMXBeanType java.lang.Object toJavaTypeData(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.ArrayMXBeanType java.lang.Object toOpenTypeData(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.BasicMXBeanType java.lang.Object toJavaTypeData(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.BasicMXBeanType java.lang.Object toOpenTypeData(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.CompositeDataMXBeanType java.lang.Object toOpenTypeData(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.CompositeDataMXBeanType.1 java.lang.reflect.Method run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.EnumMXBeanType java.lang.Object toJavaTypeData(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.EnumMXBeanType java.lang.Object toOpenTypeData(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.GenericArrayMXBeanType GenericArrayMXBeanType(java.lang.reflect.GenericArrayType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.InProgress boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.MappedMXBeanType.InProgress boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.InProgress boolean isValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.MappedMXBeanType.InProgress boolean isValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.MappedMXBeanType.InProgress java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.ListMXBeanType ListMXBeanType(java.lang.reflect.ParameterizedType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.ListMXBeanType java.lang.Object toJavaTypeData(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.ListMXBeanType java.lang.Object toOpenTypeData(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.MapMXBeanType MapMXBeanType(java.lang.reflect.ParameterizedType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.MapMXBeanType java.lang.Object toJavaTypeData(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MappedMXBeanType.MapMXBeanType java.lang.Object toOpenTypeData(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryImpl java.lang.String getNotifMsg(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.MemoryImpl javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryManagerImpl javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryNotifInfoCompositeData java.lang.String getPoolName(javax.management.openmbean.CompositeData)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryNotifInfoCompositeData java.lang.management.MemoryUsage getUsage(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryNotifInfoCompositeData javax.management.openmbean.CompositeData getCompositeData()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryNotifInfoCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryPoolImpl javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryPoolImpl sun.management.Sensor access$000(sun.management.MemoryPoolImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryUsageCompositeData javax.management.openmbean.CompositeData getCompositeData()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MemoryUsageCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MethodInfo java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MonitorInfoCompositeData java.lang.StackTraceElement getLockedStackFrame(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MonitorInfoCompositeData javax.management.openmbean.CompositeData getCompositeData()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.MonitorInfoCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.NotificationEmitterSupport void addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.NotificationEmitterSupport void removeNotificationListener(javax.management.NotificationListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.NotificationEmitterSupport void removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.NotificationEmitterSupport void removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.NotificationEmitterSupport void removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.NotificationEmitterSupport void sendNotification(javax.management.Notification) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.OperatingSystemImpl javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.RuntimeImpl javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Sensor java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.StackTraceElementCompositeData java.lang.StackTraceElement from(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.StackTraceElementCompositeData java.lang.StackTraceElement from(javax.management.openmbean.CompositeData)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.StackTraceElementCompositeData javax.management.openmbean.CompositeData getCompositeData()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.StackTraceElementCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl boolean verifyThreadAllocatedMemory(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl boolean verifyThreadCpuTime(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl java.lang.management.ThreadInfo[] getThreadInfo(long[], boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl java.lang.management.ThreadInfo[] getThreadInfo(long[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl java.lang.management.ThreadInfo[] getThreadInfo(long[], int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl javax.management.ObjectName getObjectName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl long[] getThreadAllocatedBytes(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl long[] getThreadAllocatedBytes(long[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl long[] getThreadCpuTime(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl long[] getThreadCpuTime(long[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl long[] getThreadUserTime(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl long[] getThreadUserTime(long[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadImpl void verifyThreadIds(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadInfoCompositeData ThreadInfoCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadInfoCompositeData boolean isCurrentVersion(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadInfoCompositeData boolean isV5Attribute(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.management.ThreadInfoCompositeData java.lang.String threadName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadInfoCompositeData javax.management.openmbean.CompositeData getCompositeData()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadInfoCompositeData sun.management.ThreadInfoCompositeData getInstance(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadInfoCompositeData sun.management.ThreadInfoCompositeData getInstance(javax.management.openmbean.CompositeData)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.ThreadInfoCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Util java.lang.String[] toStringArray(java.util.List&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Util javax.management.ObjectName newObjectName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Util javax.management.ObjectName newObjectName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.Util javax.management.ObjectName newObjectName(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.Util javax.management.ObjectName newObjectName(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.management.Util javax.management.ObjectName newObjectName(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.VMManagementImpl java.lang.String getVmId()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.VMOptionCompositeData javax.management.openmbean.CompositeData getCompositeData()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.management.VMOptionCompositeData void validateCompositeData(javax.management.openmbean.CompositeData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
