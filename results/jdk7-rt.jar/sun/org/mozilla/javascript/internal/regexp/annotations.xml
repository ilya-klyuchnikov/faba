<root>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp NativeRegExp(sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean backrefMatcher(sun.org.mozilla.javascript.internal.regexp.REGlobalData, int, char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean calculateBitmapSize(sun.org.mozilla.javascript.internal.regexp.CompilerState, sun.org.mozilla.javascript.internal.regexp.RENode, char[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean classMatcher(sun.org.mozilla.javascript.internal.regexp.REGlobalData, sun.org.mozilla.javascript.internal.regexp.RECharSet, char) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean executeREBytecode(sun.org.mozilla.javascript.internal.regexp.REGlobalData, char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean flatNIMatcher(sun.org.mozilla.javascript.internal.regexp.REGlobalData, int, int, char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean flatNMatcher(sun.org.mozilla.javascript.internal.regexp.REGlobalData, int, int, char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean isDigit(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean isLineTerm(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean matchRegExp(sun.org.mozilla.javascript.internal.regexp.REGlobalData, sun.org.mozilla.javascript.internal.regexp.RECompiled, char[], int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean matchRegExp(sun.org.mozilla.javascript.internal.regexp.REGlobalData, sun.org.mozilla.javascript.internal.regexp.RECompiled, char[], int, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean parseAlternative(sun.org.mozilla.javascript.internal.regexp.CompilerState) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean parseDisjunction(sun.org.mozilla.javascript.internal.regexp.CompilerState) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp boolean parseTerm(sun.org.mozilla.javascript.internal.regexp.CompilerState) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int addIndex(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int emitREBytecode(sun.org.mozilla.javascript.internal.regexp.CompilerState, sun.org.mozilla.javascript.internal.regexp.RECompiled, int, sun.org.mozilla.javascript.internal.regexp.RENode) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int emitREBytecode(sun.org.mozilla.javascript.internal.regexp.CompilerState, sun.org.mozilla.javascript.internal.regexp.RECompiled, int, sun.org.mozilla.javascript.internal.regexp.RENode) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int findInstanceIdInfo(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int findPrototypeId(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int getDecimalValue(char, sun.org.mozilla.javascript.internal.regexp.CompilerState, int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int getFlags()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int getIndex(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int getIndex(byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int getMaxInstanceId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int getOffset(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int getOffset(byte[], int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp int toASCIIHexDigit(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object call(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object call(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object call(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object call(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object compileRE(sun.org.mozilla.javascript.internal.Context, java.lang.String, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object compileRE(sun.org.mozilla.javascript.internal.Context, java.lang.String, java.lang.String, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object compileRE(sun.org.mozilla.javascript.internal.Context, java.lang.String, java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object execIdCall(sun.org.mozilla.javascript.internal.IdFunctionObject, sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object execIdCall(sun.org.mozilla.javascript.internal.IdFunctionObject, sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object execSub(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object execSub(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[], int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object execSub(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[], int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object executeRegExp(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.regexp.RegExpImpl, java.lang.String, int[], int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object executeRegExp(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.regexp.RegExpImpl, java.lang.String, int[], int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object executeRegExp(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.regexp.RegExpImpl, java.lang.String, int[], int) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.Object executeRegExp(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.regexp.RegExpImpl, java.lang.String, int[], int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.String getInstanceIdName(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.String getTypeOf()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp sun.org.mozilla.javascript.internal.Scriptable compile(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp sun.org.mozilla.javascript.internal.Scriptable compile(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp sun.org.mozilla.javascript.internal.Scriptable compile(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp sun.org.mozilla.javascript.internal.Scriptable construct(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp sun.org.mozilla.javascript.internal.Scriptable construct(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp sun.org.mozilla.javascript.internal.regexp.NativeRegExp realThis(sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.IdFunctionObject) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp sun.org.mozilla.javascript.internal.regexp.NativeRegExp realThis(sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.IdFunctionObject)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp sun.org.mozilla.javascript.internal.regexp.REProgState popProgState(sun.org.mozilla.javascript.internal.regexp.REGlobalData) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp sun.org.mozilla.javascript.internal.regexp.REProgState popProgState(sun.org.mozilla.javascript.internal.regexp.REGlobalData)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp sun.org.mozilla.javascript.internal.regexp.RegExpImpl getImpl(sun.org.mozilla.javascript.internal.Context) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp void addCharacterRangeToCharSet(sun.org.mozilla.javascript.internal.regexp.RECharSet, char, char) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp void addCharacterToCharSet(sun.org.mozilla.javascript.internal.regexp.RECharSet, char) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp void doFlat(sun.org.mozilla.javascript.internal.regexp.CompilerState, char) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp void init(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp void processCharSet(sun.org.mozilla.javascript.internal.regexp.REGlobalData, sun.org.mozilla.javascript.internal.regexp.RECharSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp void processCharSetImpl(sun.org.mozilla.javascript.internal.regexp.REGlobalData, sun.org.mozilla.javascript.internal.regexp.RECharSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp void pushBackTrackState(sun.org.mozilla.javascript.internal.regexp.REGlobalData, byte, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp void pushProgState(sun.org.mozilla.javascript.internal.regexp.REGlobalData, int, int, sun.org.mozilla.javascript.internal.regexp.REBackTrackData, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp void reportWarning(sun.org.mozilla.javascript.internal.Context, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp void resolveForwardJump(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExp void setInstanceIdValue(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor int findInstanceIdInfo(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor int getMaxInstanceId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor java.lang.Object call(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor java.lang.Object call(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor java.lang.Object getInstanceIdValue(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor java.lang.String getFunctionName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor java.lang.String getInstanceIdName(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor sun.org.mozilla.javascript.internal.Scriptable construct(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.NativeRegExpCtor sun.org.mozilla.javascript.internal.Scriptable construct(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.REBackTrackData REBackTrackData(sun.org.mozilla.javascript.internal.regexp.REGlobalData, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.REGlobalData REGlobalData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.REGlobalData int parens_index(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.REGlobalData int parens_length(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl RegExpImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl boolean isRegExp(sun.org.mozilla.javascript.internal.Scriptable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl boolean isRegExp(sun.org.mozilla.javascript.internal.Scriptable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl int find_split(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.String, java.lang.String, int, sun.org.mozilla.javascript.internal.RegExpProxy, sun.org.mozilla.javascript.internal.Scriptable, int[], int[], boolean[], java.lang.String[][]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl int find_split(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.String, java.lang.String, int, sun.org.mozilla.javascript.internal.RegExpProxy, sun.org.mozilla.javascript.internal.Scriptable, int[], int[], boolean[], java.lang.String[][]) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl int find_split(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.String, java.lang.String, int, sun.org.mozilla.javascript.internal.RegExpProxy, sun.org.mozilla.javascript.internal.Scriptable, int[], int[], boolean[], java.lang.String[][]) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl int find_split(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.String, java.lang.String, sun.org.mozilla.javascript.internal.Scriptable, int[], int[], boolean[], java.lang.String[][]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl int find_split(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.String, java.lang.String, sun.org.mozilla.javascript.internal.Scriptable, int[], int[], boolean[], java.lang.String[][]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl int find_split(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.String, java.lang.String, sun.org.mozilla.javascript.internal.Scriptable, int[], int[], boolean[], java.lang.String[][]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl int find_split(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.String, java.lang.String, sun.org.mozilla.javascript.internal.Scriptable, int[], int[], boolean[], java.lang.String[][]) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl int find_split(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.String, java.lang.String, sun.org.mozilla.javascript.internal.Scriptable, int[], int[], boolean[], java.lang.String[][]) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl int find_split(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.String, java.lang.String, sun.org.mozilla.javascript.internal.Scriptable, int[], int[], boolean[], java.lang.String[][]) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl int find_split(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.String, java.lang.String, sun.org.mozilla.javascript.internal.Scriptable, int[], int[], boolean[], java.lang.String[][]) 7">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object action(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object action(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[], int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object action(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[], int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object action(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[], int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object compileRegExp(sun.org.mozilla.javascript.internal.Context, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object compileRegExp(sun.org.mozilla.javascript.internal.Context, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object compileRegExp(sun.org.mozilla.javascript.internal.Context, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object js_split(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.String, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object js_split(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.String, java.lang.Object[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object matchOrReplace(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[], sun.org.mozilla.javascript.internal.regexp.RegExpImpl, sun.org.mozilla.javascript.internal.regexp.GlobData, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object matchOrReplace(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[], sun.org.mozilla.javascript.internal.regexp.RegExpImpl, sun.org.mozilla.javascript.internal.regexp.GlobData, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object matchOrReplace(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[], sun.org.mozilla.javascript.internal.regexp.RegExpImpl, sun.org.mozilla.javascript.internal.regexp.GlobData, boolean) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object matchOrReplace(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[], sun.org.mozilla.javascript.internal.regexp.RegExpImpl, sun.org.mozilla.javascript.internal.regexp.GlobData, boolean) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl java.lang.Object matchOrReplace(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object[], sun.org.mozilla.javascript.internal.regexp.RegExpImpl, sun.org.mozilla.javascript.internal.regexp.GlobData, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl sun.org.mozilla.javascript.internal.Scriptable wrapRegExp(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl sun.org.mozilla.javascript.internal.Scriptable wrapRegExp(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl sun.org.mozilla.javascript.internal.Scriptable wrapRegExp(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl sun.org.mozilla.javascript.internal.regexp.SubString getParenSubString(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl sun.org.mozilla.javascript.internal.regexp.SubString interpretDollar(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.regexp.RegExpImpl, java.lang.String, int, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl sun.org.mozilla.javascript.internal.regexp.SubString interpretDollar(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.regexp.RegExpImpl, java.lang.String, int, int[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl sun.org.mozilla.javascript.internal.regexp.SubString interpretDollar(sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.regexp.RegExpImpl, java.lang.String, int, int[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl void do_replace(sun.org.mozilla.javascript.internal.regexp.GlobData, sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.regexp.RegExpImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl void match_glob(sun.org.mozilla.javascript.internal.regexp.GlobData, sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, int, sun.org.mozilla.javascript.internal.regexp.RegExpImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl void match_glob(sun.org.mozilla.javascript.internal.regexp.GlobData, sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, int, sun.org.mozilla.javascript.internal.regexp.RegExpImpl) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl void replace_glob(sun.org.mozilla.javascript.internal.regexp.GlobData, sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.regexp.RegExpImpl, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.RegExpImpl void replace_glob(sun.org.mozilla.javascript.internal.regexp.GlobData, sun.org.mozilla.javascript.internal.Context, sun.org.mozilla.javascript.internal.Scriptable, sun.org.mozilla.javascript.internal.regexp.RegExpImpl, int, int) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.SubString SubString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.SubString SubString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.org.mozilla.javascript.internal.regexp.SubString java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
