<root>
  <item name="sun.print.AttributeClass AttributeClass(java.lang.String, int, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.AttributeClass AttributeClass(java.lang.String, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.AttributeClass boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.AttributeClass boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.AttributeClass byte getByteValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.AttributeClass byte getType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.AttributeClass char[] getLenChars()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.AttributeClass int convertToInt(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.AttributeClass int convertToInt(byte[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.AttributeClass int getIntValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.AttributeClass int unsignedByteToInt(byte)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.AttributeClass int[] getIntRangeValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.AttributeClass java.lang.Object getObjectValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.AttributeClass java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.AttributeClass java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.CUPSPrinter CUPSPrinter(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.CUPSPrinter int getPort()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.CUPSPrinter java.lang.String getServer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.CUPSPrinter.1 1(java.net.HttpURLConnection)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.CUPSPrinter.2 2(java.net.HttpURLConnection)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.CustomMediaSizeName CustomMediaSizeName(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.CustomMediaSizeName java.lang.String getChoiceName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.CustomMediaSizeName javax.print.attribute.standard.MediaSizeName findMedia(javax.print.attribute.standard.Media[], float, float, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.CustomMediaSizeName javax.print.attribute.standard.MediaSizeName getStandardMedia()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.CustomMediaTray CustomMediaTray(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.CustomMediaTray java.lang.String getChoiceName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.DialogOwner DialogOwner(java.awt.Frame)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.DialogOwner java.awt.Frame getOwner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.DialogOwner java.lang.Class getCategory()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.DialogOwner java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.IPPPrintService IPPPrintService(java.lang.String, java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService IPPPrintService(java.lang.String, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService IPPPrintService(java.lang.String, java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService IPPPrintService(java.lang.String, java.net.URL) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService T getAttribute(java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.IPPPrintService boolean isAttributeCategorySupported(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService boolean isAttributeValueSupported(javax.print.attribute.Attribute, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService boolean isAutoSense(javax.print.DocFlavor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService boolean isDestinationSupported(javax.print.DocFlavor, javax.print.attribute.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.IPPPrintService boolean isDestinationSupported(javax.print.DocFlavor, javax.print.attribute.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.IPPPrintService boolean isDestinationSupported(javax.print.DocFlavor, javax.print.attribute.AttributeSet)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;true;null,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.IPPPrintService boolean isDocFlavorSupported(javax.print.DocFlavor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.IPPPrintService boolean isIPPSupportedImages(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService boolean isSupportedCopies(javax.print.attribute.standard.Copies) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService boolean isSupportedMedia(javax.print.attribute.standard.MediaSizeName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService boolean isSupportedMediaTray(javax.print.attribute.standard.MediaTray)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.IPPPrintService boolean usesClass(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.IPPPrintService boolean usesClass(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.IPPPrintService boolean writeIPPRequest(java.io.OutputStream, java.lang.String, sun.print.AttributeClass[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null-&gt;false;_,null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.IPPPrintService java.lang.Object getDefaultAttributeValue(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService java.lang.Object getSupportedAttributeValues(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService java.lang.Object getSupportedAttributeValues(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.IPPPrintService java.lang.Object getSupportedAttributeValues(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.IPPPrintService java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.IPPPrintService java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService java.net.HttpURLConnection access$000(sun.print.IPPPrintService) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService java.net.HttpURLConnection access$000(sun.print.IPPPrintService)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.IPPPrintService java.net.HttpURLConnection getIPPConnection(java.net.URL)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.IPPPrintService java.util.HashMap[] readIPPResponse(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.IPPPrintService java.util.HashMap[] readIPPResponse(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.IPPPrintService javax.print.DocPrintJob createPrintJob()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService javax.print.ServiceUIFactory getServiceUIFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.IPPPrintService javax.print.attribute.AttributeSet getUnsupportedAttributes(javax.print.DocFlavor, javax.print.attribute.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.IPPPrintService javax.print.attribute.AttributeSet getUnsupportedAttributes(javax.print.DocFlavor, javax.print.attribute.AttributeSet)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.IPPPrintService javax.print.attribute.PrintServiceAttributeSet getAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.IPPPrintService javax.print.attribute.standard.Media getIPPMedia(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.IPPPrintService sun.print.CustomMediaSizeName findCustomMedia(javax.print.attribute.standard.MediaSizeName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.IPPPrintService.1 1(sun.print.IPPPrintService)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.IPPPrintService.ExtFinishing ExtFinishing(sun.print.IPPPrintService, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.OpenBook OpenBook(java.awt.print.PageFormat, java.awt.print.Printable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.OpenBook int getNumberOfPages()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.OpenBook java.awt.print.PageFormat getPageFormat(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.OpenBook java.awt.print.Printable getPrintable(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPathGraphics PSPathGraphics(java.awt.Graphics2D, java.awt.print.PrinterJob, java.awt.print.Printable, java.awt.print.PageFormat, int, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPathGraphics boolean canDrawStringToWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPathGraphics boolean drawImageToPlatform(java.awt.Image, java.awt.geom.AffineTransform, java.awt.Color, int, int, int, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPathGraphics boolean drawImageToPlatform(java.awt.Image, java.awt.geom.AffineTransform, java.awt.Color, int, int, int, int, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_,_,_-&gt;true;_,!null,_,_,_,_,_,_-&gt;true;_,_,!null,_,_,_,_,_-&gt;true;_,_,_,_,_,_,_,false-&gt;true;_,_,_,_,_,_,_,true-&gt;true;_,_,null,_,_,_,_,_-&gt;true;_,null,_,_,_,_,_,_-&gt;true;null,_,_,_,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PSPathGraphics java.awt.Graphics create()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPathGraphics void deviceClip(java.awt.geom.PathIterator) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPathGraphics void deviceClip(java.awt.geom.PathIterator)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPathGraphics void deviceDrawLine(int, int, int, int, java.awt.Color) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPathGraphics void deviceFillRect(int, int, int, int, java.awt.Color) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPathGraphics void deviceFrameRect(int, int, int, int, java.awt.Color) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPathGraphics void drawString(java.lang.String, float, float, java.awt.Font, java.awt.font.FontRenderContext, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPathGraphics void fill(java.awt.Shape, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPathGraphics void redrawRegion(java.awt.geom.Rectangle2D, double, double, java.awt.Shape, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPathGraphics void redrawRegion(java.awt.geom.Rectangle2D, double, double, java.awt.Shape, java.awt.geom.AffineTransform) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob boolean access$500(sun.print.PSPrinterJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob boolean access$500(sun.print.PSPrinterJob)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob boolean setFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob boolean textOut(java.awt.Graphics, java.lang.String, float, float, java.awt.Font, java.awt.font.FontRenderContext, float) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob byte[] ascii85Encode(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob byte[] ascii85Encode(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob byte[] rlEncode(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob byte[] rlEncode(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob double getPhysicalPageHeight(java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob double getPhysicalPageWidth(java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob double getPhysicalPrintableHeight(java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob double getPhysicalPrintableWidth(java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob double getPhysicalPrintableX(java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob double getPhysicalPrintableX(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob double getPhysicalPrintableY(java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob double getPhysicalPrintableY(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob double getXRes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob double getYRes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob float getPenX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob float getPenY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob int access$1102(sun.print.PSPrinterJob, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob int getCollatedCopies()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob int getNoncollatedCopies()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob int swapBGRtoRGB(byte[], int, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob int[] getPSFontIndexArray(java.awt.Font, sun.awt.CharsetString[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.awt.Graphics2D createPathGraphics(sun.print.PeekGraphics, java.awt.print.PrinterJob, java.awt.print.Printable, java.awt.print.PageFormat, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String access$300(sun.print.PSPrinterJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String access$300(sun.print.PSPrinterJob)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String access$400(sun.print.PSPrinterJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String access$400(sun.print.PSPrinterJob)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String access$800(sun.print.PSPrinterJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String access$800(sun.print.PSPrinterJob)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String access$802(sun.print.PSPrinterJob, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String access$802(sun.print.PSPrinterJob, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String access$900(sun.print.PSPrinterJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String access$900(sun.print.PSPrinterJob)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String access$902(sun.print.PSPrinterJob, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String access$902(sun.print.PSPrinterJob, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String escapeParens(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String escapeParens(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String makeCharsetName(java.lang.String, char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String makeCharsetName(java.lang.String, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String[] access$600(sun.print.PSPrinterJob, java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String[] access$600(sun.print.PSPrinterJob, java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String[] access$600(sun.print.PSPrinterJob, java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String[] access$600(sun.print.PSPrinterJob, java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String[] printExecCmd(java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String[] printExecCmd(java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob java.lang.String[] printExecCmd(java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob java.util.Properties access$002(java.util.Properties)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PSPrinterJob sun.print.PSPrinterJob.EPSPrinter access$1002(sun.print.PSPrinterJob, sun.print.PSPrinterJob.EPSPrinter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob sun.print.PSPrinterJob.EPSPrinter access$1002(sun.print.PSPrinterJob, sun.print.PSPrinterJob.EPSPrinter)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PSPrinterJob void convertToPSPath(java.awt.geom.PathIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob void endPage(java.awt.print.PageFormat, java.awt.print.Printable, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob void endPage(java.awt.print.PageFormat, java.awt.print.Printable, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob void setClip(java.awt.Shape)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob void setColor(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob void setTransform(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob void startPage(java.awt.print.PageFormat, java.awt.print.Printable, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob void startPage(java.awt.print.PageFormat, java.awt.print.Printable, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob.2 2(sun.print.PSPrinterJob, javax.print.PrintService)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob.3 3(sun.print.PSPrinterJob)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob.4 4(sun.print.PSPrinterJob, javax.print.PrintService)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob.EPSPrinter int getNumberOfPages()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSPrinterJob.GState GState(sun.print.PSPrinterJob)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob.GState GState(sun.print.PSPrinterJob, sun.print.PSPrinterJob.GState) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob.GState GState(sun.print.PSPrinterJob, sun.print.PSPrinterJob.GState)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob.GState void emitPSClip(java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob.GState void emitPSColor(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob.GState void emitTransform(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob.PluginPrinter PluginPrinter(java.awt.Component, java.io.PrintStream, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob.PluginPrinter int print(java.awt.Graphics, java.awt.print.PageFormat, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob.PrinterOpener PrinterOpener(sun.print.PSPrinterJob)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob.PrinterOpener PrinterOpener(sun.print.PSPrinterJob, sun.print.PSPrinterJob.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob.PrinterOpener PrinterOpener(sun.print.PSPrinterJob, sun.print.PSPrinterJob.1)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob.PrinterSpooler PrinterSpooler(sun.print.PSPrinterJob)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob.PrinterSpooler PrinterSpooler(sun.print.PSPrinterJob, sun.print.PSPrinterJob.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSPrinterJob.PrinterSpooler PrinterSpooler(sun.print.PSPrinterJob, sun.print.PSPrinterJob.1)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSPrinterJob.PrinterSpooler void handleProcessFailure(java.lang.Process, java.lang.String[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSPrinterJob.PrinterSpooler void handleProcessFailure(java.lang.Process, java.lang.String[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSStreamPrintJob PSStreamPrintJob(sun.print.PSStreamPrintService)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSStreamPrintJob javax.print.PrintService getPrintService()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrintJob void initializeAttributeSets(javax.print.Doc, javax.print.attribute.PrintRequestAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSStreamPrintJob void print(javax.print.Doc, javax.print.attribute.PrintRequestAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSStreamPrintService PSStreamPrintService(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PSStreamPrintService T getAttribute(java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSStreamPrintService boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSStreamPrintService boolean isAttributeCategorySupported(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSStreamPrintService boolean isAttributeValueSupported(javax.print.attribute.Attribute, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSStreamPrintService boolean isAttributeValueSupported(javax.print.attribute.Attribute, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSStreamPrintService boolean isAttributeValueSupported(javax.print.attribute.Attribute, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSStreamPrintService boolean isDocFlavorSupported(javax.print.DocFlavor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PSStreamPrintService boolean isSupportedCopies(javax.print.attribute.standard.Copies) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSStreamPrintService boolean isSupportedMedia(javax.print.attribute.standard.MediaSizeName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PSStreamPrintService boolean usesClass(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSStreamPrintService boolean usesClass(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrintService java.lang.Class&lt;?&gt;[] getSupportedAttributeCategories()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrintService java.lang.Object getDefaultAttributeValue(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSStreamPrintService java.lang.Object getSupportedAttributeValues(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSStreamPrintService java.lang.Object getSupportedAttributeValues(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSStreamPrintService java.lang.Object getSupportedAttributeValues(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSStreamPrintService java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrintService java.lang.String getOutputFormat()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrintService java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSStreamPrintService javax.print.DocFlavor[] getSupportedDocFlavors()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrintService javax.print.DocPrintJob createPrintJob()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrintService javax.print.ServiceUIFactory getServiceUIFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrintService javax.print.attribute.AttributeSet getUnsupportedAttributes(javax.print.DocFlavor, javax.print.attribute.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSStreamPrintService javax.print.attribute.AttributeSet getUnsupportedAttributes(javax.print.DocFlavor, javax.print.attribute.AttributeSet)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PSStreamPrintService javax.print.attribute.PrintServiceAttributeSet getAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PSStreamPrintService void addPrintServiceAttributeListener(javax.print.event.PrintServiceAttributeListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSStreamPrintService void addPrintServiceAttributeListener(javax.print.event.PrintServiceAttributeListener)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrintService void removePrintServiceAttributeListener(javax.print.event.PrintServiceAttributeListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PSStreamPrintService void removePrintServiceAttributeListener(javax.print.event.PrintServiceAttributeListener)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrinterFactory PSStreamPrinterFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrinterFactory java.lang.String getOutputFormat()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrinterFactory javax.print.DocFlavor[] getFlavors()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrinterFactory javax.print.DocFlavor[] getSupportedDocFlavors()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PSStreamPrinterFactory javax.print.StreamPrintService getPrintService(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PageableDoc PageableDoc(java.awt.print.Pageable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PageableDoc java.io.InputStream getStreamForBytes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PageableDoc java.io.Reader getReaderForText()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PageableDoc java.lang.Object getPrintData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PageableDoc javax.print.DocFlavor getDocFlavor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PageableDoc javax.print.attribute.DocAttributeSet getAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics PathGraphics(java.awt.Graphics2D, java.awt.print.PrinterJob, java.awt.print.Printable, java.awt.print.PageFormat, int, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PathGraphics boolean canDoRedraws()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PathGraphics boolean canDrawStringToWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PathGraphics boolean drawBitmaskImage(java.awt.image.BufferedImage, java.awt.geom.AffineTransform, java.awt.Color, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics boolean drawBitmaskImage(java.awt.image.BufferedImage, java.awt.geom.AffineTransform, java.awt.Color, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PathGraphics boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 10">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_,_,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PathGraphics boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PathGraphics boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PathGraphics boolean drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics boolean drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics boolean drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PathGraphics boolean hasTransparentPixels(java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics boolean isBitmaskTransparency(java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics boolean printGlyphVector(java.awt.font.GlyphVector, float, float) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics boolean printGlyphVector(java.awt.font.GlyphVector, float, float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;false;null,_,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PathGraphics boolean printedSimpleGlyphVector(java.awt.font.GlyphVector, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics boolean samePositions(java.awt.font.GlyphVector, int[], int[], float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics boolean samePositions(java.awt.font.GlyphVector, int[], int[], float[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics boolean samePositions(java.awt.font.GlyphVector, int[], int[], float[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,null-&gt;false;_,_,null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PathGraphics char[] getGlyphToCharMapForFont(sun.font.Font2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics int getPageIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PathGraphics int platformFontCount(java.awt.Font, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics int platformFontCount(java.awt.Font, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics int platformFontCount(java.awt.Font, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PathGraphics java.awt.image.BufferedImage getBufferedImage(java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics java.awt.image.BufferedImage getBufferedImage(java.awt.Image)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PathGraphics java.awt.print.PageFormat getPageFormat()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PathGraphics java.awt.print.Printable getPrintable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PathGraphics void drawImage(java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics void drawImage(java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics void drawPolygon(int[], int[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics void drawPolygon(int[], int[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics void drawRenderedImage(java.awt.image.RenderedImage, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PathGraphics void drawString(java.lang.String, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics void drawString(java.lang.String, float, float, java.awt.Font, java.awt.font.FontRenderContext, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics void drawString(java.lang.String, float, float, java.awt.Font, java.awt.font.FontRenderContext, float) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics void drawString(java.text.AttributedCharacterIterator, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics void fill(java.awt.Shape, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics void fillPolygon(int[], int[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PathGraphics void fillPolygon(int[], int[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_,_,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics boolean drawImage(java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.PeekGraphics boolean getAWTDrawingOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekGraphics boolean hitsDrawingArea(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekGraphics boolean imageUpdate(java.awt.Image, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics int getImageHeight(java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekGraphics int getImageWidth(java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekGraphics java.awt.Graphics2D getDelegate()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekGraphics java.awt.print.PrinterJob getPrinterJob()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekGraphics sun.java2d.Spans getDrawingArea()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekGraphics sun.print.PeekMetrics getMetrics()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekGraphics void addDrawingRect(java.awt.geom.Rectangle2D, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekGraphics void copyArea(int, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekGraphics void drawGlyphVector(java.awt.font.GlyphVector, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekGraphics void drawImage(java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics void drawImage(java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics void drawRenderableImage(java.awt.image.renderable.RenderableImage, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics void drawRenderableImage(java.awt.image.renderable.RenderableImage, java.awt.geom.AffineTransform) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics void drawRenderedImage(java.awt.image.RenderedImage, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics void drawRenderedImage(java.awt.image.RenderedImage, java.awt.geom.AffineTransform) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics void drawString(java.lang.String, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekGraphics void drawString(java.text.AttributedCharacterIterator, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekGraphics void fill(java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekGraphics void finalize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekGraphics void setAWTDrawingOnly()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PeekGraphics void setDelegate(java.awt.Graphics2D)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PeekGraphics.ImageWaiter ImageWaiter(sun.print.PeekGraphics, java.awt.Image) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekGraphics.ImageWaiter boolean imageUpdate(java.awt.Image, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekGraphics.ImageWaiter boolean imageUpdate(java.awt.Image, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PeekGraphics.ImageWaiter int getHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekGraphics.ImageWaiter int getWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekGraphics.ImageWaiter void waitForDimensions(java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekMetrics PeekMetrics()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekMetrics boolean hasCompositing()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekMetrics boolean hasImages()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekMetrics boolean hasNonSolidColors()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekMetrics boolean hasText()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PeekMetrics void checkAlpha(java.awt.Composite) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekMetrics void checkAlpha(java.awt.Composite)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PeekMetrics void checkDrawingMode(java.awt.Graphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekMetrics void checkPaint(java.awt.Paint) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekMetrics void clear(java.awt.Graphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekMetrics void draw(java.awt.Graphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekMetrics void drawImage(java.awt.Graphics2D, java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekMetrics void drawImage(java.awt.Graphics2D, java.awt.Image) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekMetrics void drawImage(java.awt.Graphics2D, java.awt.Image)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PeekMetrics void drawImage(java.awt.Graphics2D, java.awt.image.RenderedImage) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekMetrics void drawImage(java.awt.Graphics2D, java.awt.image.RenderedImage) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekMetrics void drawImage(java.awt.Graphics2D, java.awt.image.RenderedImage)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PeekMetrics void drawImage(java.awt.Graphics2D, java.awt.image.renderable.RenderableImage) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekMetrics void drawImage(java.awt.Graphics2D, java.awt.image.renderable.RenderableImage) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekMetrics void drawImage(java.awt.Graphics2D, java.awt.image.renderable.RenderableImage)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PeekMetrics void drawText(java.awt.Graphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekMetrics void drawText(java.awt.Graphics2D, java.awt.font.TextLayout) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PeekMetrics void drawText(java.awt.Graphics2D, java.awt.font.TextLayout) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PeekMetrics void fill(java.awt.Graphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PrintJob2D boolean lastPageFirst()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrintJob2D double getPageResolutionInternal()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrintJob2D int getPageResolution()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrintJob2D int print(java.awt.Graphics, java.awt.print.PageFormat, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PrintJob2D int[] getSize(java.awt.PageAttributes.MediaType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PrintJob2D int[] getSize(java.awt.PageAttributes.MediaType)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrintJob2D java.awt.Dimension getPageDimension()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.PrintJob2D java.awt.PageAttributes.MediaType unMapMedia(javax.print.attribute.standard.MediaSizeName) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PrintJob2D java.awt.PageAttributes.MediaType unMapMedia(javax.print.attribute.standard.MediaSizeName)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrintJob2D javax.print.attribute.standard.MediaSizeName mapMedia(java.awt.PageAttributes.MediaType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PrintJob2D.MessageQ MessageQ(sun.print.PrintJob2D, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PrintJob2D.MessageQ boolean isClosed()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrintJobAttributeException java.lang.Class[] getUnsupportedAttributes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrintJobAttributeException javax.print.attribute.Attribute[] getUnsupportedValues()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrintJobFlavorException javax.print.DocFlavor[] getUnsupportedFlavors()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrinterGraphicsConfig PrinterGraphicsConfig(java.lang.String, java.awt.geom.AffineTransform, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PrinterGraphicsConfig java.awt.GraphicsDevice getDevice()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrinterGraphicsConfig java.awt.Rectangle getBounds()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrinterGraphicsConfig java.awt.geom.AffineTransform getDefaultTransform()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrinterGraphicsConfig java.awt.geom.AffineTransform getNormalizingTransform()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrinterGraphicsDevice PrinterGraphicsDevice(java.awt.GraphicsConfiguration, java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.PrinterGraphicsDevice int getType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrinterGraphicsDevice java.awt.GraphicsConfiguration getDefaultConfiguration()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrinterGraphicsDevice java.awt.GraphicsConfiguration[] getConfigurations()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrinterGraphicsDevice java.awt.Window getFullScreenWindow()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrinterGraphicsDevice java.lang.String getIDstring()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.PrinterGraphicsDevice void setFullScreenWindow(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.PrinterGraphicsDevice void setFullScreenWindow(java.awt.Window)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ProxyGraphics ProxyGraphics(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ProxyGraphics java.awt.Graphics create()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ProxyGraphics java.awt.Graphics create(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ProxyGraphics java.awt.Graphics getGraphics()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ProxyGraphics java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ProxyGraphics void finalize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ProxyGraphics2D ProxyGraphics2D(java.awt.Graphics2D, java.awt.print.PrinterJob)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ProxyGraphics2D boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ProxyGraphics2D boolean drawImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_,_,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.ProxyGraphics2D boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ProxyGraphics2D boolean drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.ProxyGraphics2D boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ProxyGraphics2D boolean drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.ProxyGraphics2D boolean needToCopyBgColorImage(java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ProxyGraphics2D java.awt.Graphics create()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ProxyGraphics2D java.awt.Graphics2D getDelegate()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ProxyGraphics2D java.awt.image.BufferedImage getBufferedImageCopy(java.awt.Image, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ProxyGraphics2D java.awt.print.PrinterJob getPrinterJob()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ProxyGraphics2D void drawRenderableImage(java.awt.image.renderable.RenderableImage, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ProxyGraphics2D void finalize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ProxyGraphics2D void setDelegate(java.awt.Graphics2D)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ProxyPrintGraphics ProxyPrintGraphics(java.awt.Graphics, java.awt.PrintJob)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ProxyPrintGraphics java.awt.Graphics create()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ProxyPrintGraphics java.awt.Graphics create(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ProxyPrintGraphics java.awt.Graphics getGraphics()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ProxyPrintGraphics java.awt.PrintJob getPrintJob()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.RasterPrinterJob boolean isCollated()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.RasterPrinterJob boolean isSupportedValue(javax.print.attribute.Attribute, javax.print.attribute.PrintRequestAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.RasterPrinterJob boolean isSupportedValue(javax.print.attribute.Attribute, javax.print.attribute.PrintRequestAttributeSet)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.RasterPrinterJob boolean printDialog(javax.print.attribute.PrintRequestAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.RasterPrinterJob int getCopies()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.RasterPrinterJob int getFirstPage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.RasterPrinterJob int getLastPage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.RasterPrinterJob int printPage(java.awt.print.Pageable, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.RasterPrinterJob java.awt.Graphics2D createPathGraphics(sun.print.PeekGraphics, java.awt.print.PrinterJob, java.awt.print.Printable, java.awt.print.PageFormat, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.RasterPrinterJob java.awt.Graphics2D createPathGraphics(sun.print.PeekGraphics, java.awt.print.PrinterJob, java.awt.print.Printable, java.awt.print.PageFormat, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.RasterPrinterJob java.awt.Graphics2D createPathGraphics(sun.print.PeekGraphics, java.awt.print.PrinterJob, java.awt.print.Printable, java.awt.print.PageFormat, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.RasterPrinterJob java.awt.Graphics2D createPathGraphics(sun.print.PeekGraphics, java.awt.print.PrinterJob, java.awt.print.Printable, java.awt.print.PageFormat, int) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.RasterPrinterJob java.awt.Graphics2D createPathGraphics(sun.print.PeekGraphics, java.awt.print.PrinterJob, java.awt.print.Printable, java.awt.print.PageFormat, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_-&gt;null;_,!null,_,_,_-&gt;null;_,_,!null,_,_-&gt;null;_,_,_,!null,_-&gt;null;_,_,_,null,_-&gt;null;_,_,null,_,_-&gt;null;_,null,_,_,_-&gt;null;null,_,_,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.RasterPrinterJob java.awt.print.PageFormat defaultPage(java.awt.print.PageFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.RasterPrinterJob java.awt.print.PageFormat pageDialog(javax.print.attribute.PrintRequestAttributeSet)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.RasterPrinterJob java.awt.print.PageFormat validatePage(java.awt.print.PageFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.RasterPrinterJob java.awt.print.Pageable getPageable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.RasterPrinterJob java.lang.String getJobName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.RasterPrinterJob java.lang.String removeControlChars(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.RasterPrinterJob java.lang.String removeControlChars(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.RasterPrinterJob sun.print.PeekGraphics createPeekGraphics(java.awt.Graphics2D, java.awt.print.PrinterJob)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.RasterPrinterJob void debug_println(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.RasterPrinterJob void initPrinter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.RasterPrinterJob void initPrinterGraphics(java.awt.Graphics2D, java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.RasterPrinterJob void setAttributes(javax.print.attribute.PrintRequestAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.RasterPrinterJob void setCollated(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.RasterPrinterJob void setCopies(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.RasterPrinterJob void setGraphicsConfigInfo(java.awt.geom.AffineTransform, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.RasterPrinterJob void setJobName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.RasterPrinterJob void setPageRange(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.RasterPrinterJob void setPageable(java.awt.print.Pageable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.RasterPrinterJob void setPrintService(javax.print.PrintService) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.RasterPrinterJob void spoolToService(javax.print.PrintService, javax.print.attribute.PrintRequestAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.RasterPrinterJob void updatePageAttributes(javax.print.PrintService, java.awt.print.PageFormat) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.RasterPrinterJob void updatePageAttributes(javax.print.PrintService, java.awt.print.PageFormat) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.RasterPrinterJob void validatePaper(java.awt.print.Paper, java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.RasterPrinterJob void validatePaper(java.awt.print.Paper, java.awt.print.Paper) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.RasterPrinterJob.1 1(sun.print.RasterPrinterJob, java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.RasterPrinterJob.2 2(sun.print.RasterPrinterJob, java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.RasterPrinterJob.3 3(sun.print.RasterPrinterJob, java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.RasterPrinterJob.4 4(sun.print.RasterPrinterJob)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.RasterPrinterJob.GraphicsState GraphicsState(sun.print.RasterPrinterJob)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.RasterPrinterJob.GraphicsState GraphicsState(sun.print.RasterPrinterJob, sun.print.RasterPrinterJob.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.RasterPrinterJob.GraphicsState GraphicsState(sun.print.RasterPrinterJob, sun.print.RasterPrinterJob.1)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ServiceDialog ServiceDialog(java.awt.GraphicsConfiguration, int, int, javax.print.PrintService, javax.print.DocFlavor, javax.print.attribute.PrintRequestAttributeSet, java.awt.Dialog) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog ServiceDialog(java.awt.GraphicsConfiguration, int, int, javax.print.PrintService, javax.print.DocFlavor, javax.print.attribute.PrintRequestAttributeSet, java.awt.Frame) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog ServiceDialog(java.awt.GraphicsConfiguration, int, int, javax.print.PrintService, javax.print.DocFlavor, javax.print.attribute.PrintRequestAttributeSet, java.awt.Frame) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog ServiceDialog(java.awt.GraphicsConfiguration, int, int, javax.print.PrintService[], int, javax.print.DocFlavor, javax.print.attribute.PrintRequestAttributeSet, java.awt.Dialog) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog ServiceDialog(java.awt.GraphicsConfiguration, int, int, javax.print.PrintService[], int, javax.print.DocFlavor, javax.print.attribute.PrintRequestAttributeSet, java.awt.Frame) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog ServiceDialog(java.awt.GraphicsConfiguration, int, int, javax.print.PrintService[], int, javax.print.DocFlavor, javax.print.attribute.PrintRequestAttributeSet, java.awt.Frame) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog boolean access$1500(sun.print.ServiceDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog boolean access$1500(sun.print.ServiceDialog)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog int access$600(sun.print.ServiceDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog int access$600(sun.print.ServiceDialog)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog int getStatus()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog java.awt.Insets access$200()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog java.awt.Insets access$700()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog java.lang.String removeMnemonics(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog java.util.ResourceBundle access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog java.util.ResourceBundle access$102(java.util.ResourceBundle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.ServiceDialog javax.print.DocFlavor access$1600(sun.print.ServiceDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog javax.print.DocFlavor access$1600(sun.print.ServiceDialog)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog javax.print.PrintService access$400(sun.print.ServiceDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog javax.print.PrintService access$400(sun.print.ServiceDialog)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog javax.print.PrintService access$402(sun.print.ServiceDialog, javax.print.PrintService) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog javax.print.PrintService access$402(sun.print.ServiceDialog, javax.print.PrintService)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.ServiceDialog javax.print.PrintService getPrintService()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog javax.print.PrintService[] access$500(sun.print.ServiceDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog javax.print.PrintService[] access$500(sun.print.ServiceDialog)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog javax.print.attribute.HashPrintRequestAttributeSet access$1200(sun.print.ServiceDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog javax.print.attribute.HashPrintRequestAttributeSet access$1200(sun.print.ServiceDialog)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog javax.print.attribute.PrintRequestAttributeSet access$1100(sun.print.ServiceDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog javax.print.attribute.PrintRequestAttributeSet access$1100(sun.print.ServiceDialog)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog javax.print.attribute.PrintRequestAttributeSet getAttributes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog javax.swing.JButton access$900(java.lang.String, java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog javax.swing.JButton createButton(java.lang.String, java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog javax.swing.JButton createExitButton(java.lang.String, java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog javax.swing.JCheckBox access$1000(java.lang.String, java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog javax.swing.JCheckBox createCheckBox(java.lang.String, java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog javax.swing.JRadioButton access$1400(java.lang.String, java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog javax.swing.JRadioButton createRadioButton(java.lang.String, java.awt.event.ActionListener)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void access$1300(sun.print.ServiceDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void access$1800(javax.swing.AbstractButton, java.awt.Container, javax.swing.ButtonGroup) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void access$1800(javax.swing.AbstractButton, java.awt.Container, javax.swing.ButtonGroup) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void access$300(java.awt.Component, java.awt.Container, java.awt.GridBagLayout, java.awt.GridBagConstraints) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void access$300(java.awt.Component, java.awt.Container, java.awt.GridBagLayout, java.awt.GridBagConstraints) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void addToBG(javax.swing.AbstractButton, java.awt.Container, javax.swing.ButtonGroup) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void addToBG(javax.swing.AbstractButton, java.awt.Container, javax.swing.ButtonGroup) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void addToGB(java.awt.Component, java.awt.Container, java.awt.GridBagLayout, java.awt.GridBagConstraints) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void addToGB(java.awt.Component, java.awt.Container, java.awt.GridBagLayout, java.awt.GridBagConstraints) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void handleEscKey(javax.swing.JButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void initPrintDialog(int, int, javax.print.PrintService[], int, javax.print.DocFlavor, javax.print.attribute.PrintRequestAttributeSet) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void initPrintDialog(int, int, javax.print.PrintService[], int, javax.print.DocFlavor, javax.print.attribute.PrintRequestAttributeSet) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog void showNoPrintService(java.awt.GraphicsConfiguration) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.1 1(sun.print.ServiceDialog)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ServiceDialog.1 void windowClosing(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.2 2(sun.print.ServiceDialog)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ServiceDialog.2 void windowClosing(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.3 3(sun.print.ServiceDialog)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ServiceDialog.3 void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.4 4()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog.5 5(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ServiceDialog.ChromaticityPanel void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.CopiesPanel void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.CopiesPanel void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.GeneralPanel GeneralPanel(sun.print.ServiceDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.IconRadioButton IconRadioButton(sun.print.ServiceDialog, java.lang.String, java.lang.String, boolean, javax.swing.ButtonGroup, java.awt.event.ActionListener) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.IconRadioButton boolean isSameAs(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.IconRadioButton boolean isSameAs(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog.IconRadioButton.1 1(sun.print.ServiceDialog.IconRadioButton, sun.print.ServiceDialog, java.net.URL)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ServiceDialog.IconRadioButton.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.JobAttributesPanel void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.JobAttributesPanel void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.JobAttributesPanel void focusGained(java.awt.event.FocusEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog.JobAttributesPanel void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.JobAttributesPanel void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.MarginsPanel void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.MarginsPanel void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.MarginsPanel void focusGained(java.awt.event.FocusEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog.MarginsPanel void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.MarginsPanel void updateMargins(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.MediaPanel java.lang.String getMediaName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.ServiceDialog.MediaPanel void addMediaListener(sun.print.ServiceDialog.MarginsPanel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ServiceDialog.MediaPanel void itemStateChanged(java.awt.event.ItemEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.OrientationPanel void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.OrientationPanel void addOrientationListener(sun.print.ServiceDialog.MarginsPanel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintRangePanel void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintRangePanel void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintRangePanel void focusGained(java.awt.event.FocusEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintRangePanel void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintServicePanel PrintServicePanel(sun.print.ServiceDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintServicePanel javax.swing.JLabel addLabel(java.lang.String, java.awt.GridBagLayout, java.awt.GridBagConstraints) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintServicePanel javax.swing.JLabel addLabel(java.lang.String, java.awt.GridBagLayout, java.awt.GridBagConstraints) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintServicePanel javax.swing.JLabel addLabel(java.lang.String, java.awt.GridBagLayout, java.awt.GridBagConstraints)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintServicePanel void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintServicePanel void itemStateChanged(java.awt.event.ItemEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintServicePanel void popupMenuCanceled(javax.swing.event.PopupMenuEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintServicePanel void popupMenuCanceled(javax.swing.event.PopupMenuEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintServicePanel void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintServicePanel void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceDialog.PrintServicePanel void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.ServiceDialog.QualityPanel void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.SidesPanel void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceDialog.ValidatingFileChooser ValidatingFileChooser(sun.print.ServiceDialog, sun.print.ServiceDialog.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.ServiceNotifier ServiceNotifier(javax.print.PrintService) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.ServiceNotifier void stopNotifier()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.SunAlternateMedia SunAlternateMedia(javax.print.attribute.standard.Media)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.SunAlternateMedia java.lang.Class getCategory()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.SunAlternateMedia java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.SunAlternateMedia java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.SunAlternateMedia javax.print.attribute.standard.Media getMedia()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.SunMinMaxPage SunMinMaxPage(int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.SunMinMaxPage int getMax()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.SunMinMaxPage int getMin()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.SunMinMaxPage java.lang.Class getCategory()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.SunMinMaxPage java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.SunPageSelection SunPageSelection(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.SunPageSelection java.lang.Class getCategory()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.SunPageSelection java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.SunPageSelection java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob UnixPrintJob(javax.print.PrintService) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob boolean access$800(sun.print.UnixPrintJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob boolean access$800(sun.print.UnixPrintJob)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintJob int access$1000(sun.print.UnixPrintJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob int access$1000(sun.print.UnixPrintJob)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintJob int access$200(sun.print.UnixPrintJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob int access$200(sun.print.UnixPrintJob)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintJob int access$300()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintJob java.io.File access$400(sun.print.UnixPrintJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob java.io.File access$400(sun.print.UnixPrintJob)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintJob java.io.File access$402(sun.print.UnixPrintJob, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob java.io.File access$402(sun.print.UnixPrintJob, java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String access$500(sun.print.UnixPrintJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String access$500(sun.print.UnixPrintJob)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String access$700(sun.print.UnixPrintJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String access$700(sun.print.UnixPrintJob)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String access$900(sun.print.UnixPrintJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String access$900(sun.print.UnixPrintJob)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String[] access$1100(sun.print.UnixPrintJob, java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String[] access$1100(sun.print.UnixPrintJob, java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String[] access$1100(sun.print.UnixPrintJob, java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String[] access$1100(sun.print.UnixPrintJob, java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String[] printExecCmd(java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String[] printExecCmd(java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintJob java.lang.String[] printExecCmd(java.lang.String, java.lang.String, boolean, java.lang.String, int, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintJob javax.print.PrintService getPrintService()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintJob void access$600(sun.print.UnixPrintJob, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob void initializeAttributeSets(javax.print.Doc, javax.print.attribute.PrintRequestAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob void print(javax.print.Doc, javax.print.attribute.PrintRequestAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob.PrinterOpener PrinterOpener(sun.print.UnixPrintJob)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.UnixPrintJob.PrinterOpener PrinterOpener(sun.print.UnixPrintJob, sun.print.UnixPrintJob.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintJob.PrinterOpener PrinterOpener(sun.print.UnixPrintJob, sun.print.UnixPrintJob.1)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.UnixPrintJob.PrinterSpooler PrinterSpooler(sun.print.UnixPrintJob)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.UnixPrintJob.PrinterSpooler PrinterSpooler(sun.print.UnixPrintJob, sun.print.UnixPrintJob.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintJob.PrinterSpooler PrinterSpooler(sun.print.UnixPrintJob, sun.print.UnixPrintJob.1)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.UnixPrintJob.PrinterSpooler void handleProcessFailure(java.lang.Process, java.lang.String[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintJob.PrinterSpooler void handleProcessFailure(java.lang.Process, java.lang.String[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService T getAttribute(java.lang.Class&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService UnixPrintService(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintService boolean isAttributeCategorySupported(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService boolean isAttributeValueSupported(javax.print.attribute.Attribute, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService boolean isAttributeValueSupported(javax.print.attribute.Attribute, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintService boolean isAttributeValueSupported(javax.print.attribute.Attribute, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintService boolean isAutoSense(javax.print.DocFlavor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService boolean isDocFlavorSupported(javax.print.DocFlavor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.UnixPrintService boolean isServiceFormattedFlavor(javax.print.DocFlavor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService boolean isSupportedCopies(javax.print.attribute.standard.Copies) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService boolean isSupportedMedia(javax.print.attribute.standard.MediaSizeName)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.UnixPrintService boolean usesClass(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintService boolean usesClass(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintService java.lang.Class[] getSupportedAttributeCategories()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintService java.lang.Object getDefaultAttributeValue(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService java.lang.Object getSupportedAttributeValues(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService java.lang.Object getSupportedAttributeValues(java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt;, javax.print.DocFlavor, javax.print.attribute.AttributeSet) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintService java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintService java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.DocFlavor[] getSupportedDocFlavors()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.DocPrintJob createPrintJob()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.ServiceUIFactory getServiceUIFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.attribute.AttributeSet getUnsupportedAttributes(javax.print.DocFlavor, javax.print.attribute.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.attribute.AttributeSet getUnsupportedAttributes(javax.print.DocFlavor, javax.print.attribute.AttributeSet)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.UnixPrintService javax.print.attribute.PrintServiceAttributeSet getAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.attribute.PrintServiceAttributeSet getBSDServiceAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.attribute.PrintServiceAttributeSet getDynamicAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.attribute.PrintServiceAttributeSet getSysVServiceAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.attribute.PrintServiceAttributeSet getUpdatedAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.attribute.standard.MediaPrintableArea[] getAllPrintableAreas()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.attribute.standard.PrinterState getPrinterState()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.attribute.standard.QueuedJobCount getQueuedJobCount()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.attribute.standard.QueuedJobCount getQueuedJobCountBSD()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService javax.print.attribute.standard.QueuedJobCount getQueuedJobCountSysV()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintService void invalidateService()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup boolean checkPrinterName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup boolean isLinux()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup boolean isSysV()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup boolean matchesAttributes(javax.print.PrintService, javax.print.attribute.PrintServiceAttributeSet) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup boolean matchesAttributes(javax.print.PrintService, javax.print.attribute.PrintServiceAttributeSet)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.print.UnixPrintServiceLookup int access$300()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup java.lang.String access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup java.lang.String[] execCmd(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup javax.print.MultiDocPrintService[] getMultiDocPrintServices(javax.print.DocFlavor[], javax.print.attribute.AttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup javax.print.MultiDocPrintService[] getMultiDocPrintServices(javax.print.DocFlavor[], javax.print.attribute.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup javax.print.MultiDocPrintService[] getMultiDocPrintServices(javax.print.DocFlavor[], javax.print.attribute.AttributeSet)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup javax.print.PrintService getServiceByName(javax.print.attribute.standard.PrinterName) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup javax.print.PrintService[] access$200(sun.print.UnixPrintServiceLookup) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup javax.print.PrintService[] access$200(sun.print.UnixPrintServiceLookup)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup javax.print.PrintService[] copyOf(javax.print.PrintService[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup javax.print.PrintService[] getPrintServices(javax.print.DocFlavor, javax.print.attribute.AttributeSet) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup javax.print.PrintService[] getPrintServices(javax.print.attribute.PrintServiceAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup.1 1(java.lang.String[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.print.UnixPrintServiceLookup.PrinterChangeListener PrinterChangeListener(sun.print.UnixPrintServiceLookup, sun.print.UnixPrintServiceLookup.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
