<root>
  <item name="sun.invoke.anon.AnonymousClassLoader byte[] readClassFile(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.AnonymousClassLoader java.lang.Class&lt;?&gt; fakeLoadClass(sun.invoke.anon.ConstantPoolPatch) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.AnonymousClassLoader sun.invoke.anon.AnonymousClassLoader make(sun.misc.Unsafe, java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.AnonymousClassLoader sun.invoke.anon.AnonymousClassLoader make(sun.misc.Unsafe, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.AnonymousClassLoader void throwReflectedException(java.lang.Exception) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser ConstantPoolParser(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser ConstantPoolParser(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser char[] parseHeader(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser int getLength()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser int getStartOffset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser int getUnsignedByte(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser int getUnsignedShort(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser java.lang.String getUTF8(java.nio.ByteBuffer, int, char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser java.lang.String getUTF8(java.nio.ByteBuffer, int, char[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser java.lang.String getUTF8(java.nio.ByteBuffer, int, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser java.lang.String getUTF8Extended(java.nio.ByteBuffer, int, char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser java.lang.String getUTF8Extended(java.nio.ByteBuffer, int, char[], int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser java.lang.String getUTF8Extended(java.nio.ByteBuffer, int, char[], int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser sun.invoke.anon.ConstantPoolPatch createPatch()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser void resolveConstantPool(java.lang.Object[], sun.invoke.anon.ConstantPoolVisitor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser void writeHead(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser void writePatchedHead(java.io.OutputStream, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser void writePatchedHead(java.io.OutputStream, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolParser void writeTail(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch ConstantPoolPatch(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch ConstantPoolPatch(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch ConstantPoolPatch(sun.invoke.anon.ConstantPoolParser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch ConstantPoolPatch(sun.invoke.anon.ConstantPoolPatch) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch java.lang.Class&lt;?&gt; classForTag(byte)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch java.lang.Object[] getOriginalCP(int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch java.lang.String addSemis(java.lang.String, java.lang.String...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch java.lang.String addSemis(java.lang.String, java.lang.String...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch java.lang.String addSemis(java.lang.String, java.lang.String...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch java.lang.String[] stripSemis(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch sun.invoke.anon.ConstantPoolParser getParser()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch void checkClassName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch void checkConstantTag(byte, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch void checkMemberName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch void putConstantValue(int, byte, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch void putConstantValue(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch void putDescriptor(int, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch void putMemberRef(int, byte, java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch void putMemberRef(int, byte, java.lang.String, java.lang.String, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch void putMemberRef(int, byte, java.lang.String, java.lang.String, java.lang.String) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolPatch void putUTF8(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor ConstantPoolVisitor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitConstantString(int, byte, java.lang.String, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitConstantString(int, byte, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitConstantValue(int, byte, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitConstantValue(int, byte, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitDescriptor(int, byte, java.lang.String, java.lang.String, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitDescriptor(int, byte, java.lang.String, java.lang.String, int, int) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitDescriptor(int, byte, java.lang.String, java.lang.String, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitMemberRef(int, byte, java.lang.String, java.lang.String, java.lang.String, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitMemberRef(int, byte, java.lang.String, java.lang.String, java.lang.String, int, int) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitMemberRef(int, byte, java.lang.String, java.lang.String, java.lang.String, int, int) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitMemberRef(int, byte, java.lang.String, java.lang.String, java.lang.String, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitUTF8(int, byte, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.invoke.anon.ConstantPoolVisitor void visitUTF8(int, byte, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
</root>
