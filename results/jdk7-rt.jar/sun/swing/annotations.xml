<root>
  <item name="sun.swing.AccumulativeRunnable void add(T...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.BakedArrayList BakedArrayList(java.util.List) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.BakedArrayList boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.BakedArrayList int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.CachedPainter java.awt.GraphicsConfiguration getGraphicsConfiguration(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.CachedPainter java.awt.GraphicsConfiguration getGraphicsConfiguration(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.CachedPainter java.awt.Image createImage(java.awt.Component, int, int, java.awt.GraphicsConfiguration, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.CachedPainter java.awt.Image createImage(java.awt.Component, int, int, java.awt.GraphicsConfiguration, java.lang.Object[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.CachedPainter java.awt.Image createImage(java.awt.Component, int, int, java.awt.GraphicsConfiguration, java.lang.Object[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.CachedPainter java.awt.Image createImage(java.awt.Component, int, int, java.awt.GraphicsConfiguration, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.swing.CachedPainter sun.swing.ImageCache getCache(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.CachedPainter void paintImage(java.awt.Component, java.awt.Graphics, int, int, int, int, java.awt.Image, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.CachedPainter void paintImage(java.awt.Component, java.awt.Graphics, int, int, int, int, java.awt.Image, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.CachedPainter void paintImage(java.awt.Component, java.awt.Graphics, int, int, int, int, java.awt.Image, java.lang.Object[]) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle DefaultLayoutStyle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLayoutStyle boolean isLabelAndNonlabel(javax.swing.JComponent, javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle boolean isLabelAndNonlabel(javax.swing.JComponent, javax.swing.JComponent, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle boolean isLabelAndNonlabel(javax.swing.JComponent, javax.swing.JComponent, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int getButtonGap(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int getContainerGap(javax.swing.JComponent, int, java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int getContainerGap(javax.swing.JComponent, int, java.awt.Container) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int getIndent(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int getInset(java.awt.Insets, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int getInset(javax.swing.JComponent, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int getPreferredGap(javax.swing.JComponent, javax.swing.JComponent, javax.swing.LayoutStyle.ComponentPlacement, int, java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int getPreferredGap(javax.swing.JComponent, javax.swing.JComponent, javax.swing.LayoutStyle.ComponentPlacement, int, java.awt.Container) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int getPreferredGap(javax.swing.JComponent, javax.swing.JComponent, javax.swing.LayoutStyle.ComponentPlacement, int, java.awt.Container) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle int getPreferredGap(javax.swing.JComponent, javax.swing.JComponent, javax.swing.LayoutStyle.ComponentPlacement, int, java.awt.Container) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle javax.swing.Icon getIcon(javax.swing.AbstractButton) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle javax.swing.Icon getIcon(javax.swing.AbstractButton)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.DefaultLayoutStyle javax.swing.LayoutStyle getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLookup DefaultLookup()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLookup java.awt.Color getColor(javax.swing.JComponent, javax.swing.plaf.ComponentUI, java.lang.String, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLookup java.awt.Insets getInsets(javax.swing.JComponent, javax.swing.plaf.ComponentUI, java.lang.String, java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLookup java.lang.Object getDefault(javax.swing.JComponent, javax.swing.plaf.ComponentUI, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.DefaultLookup java.lang.Object getDefault(javax.swing.JComponent, javax.swing.plaf.ComponentUI, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.DefaultLookup javax.swing.Icon getIcon(javax.swing.JComponent, javax.swing.plaf.ComponentUI, java.lang.String, javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.swing.DefaultLookup javax.swing.border.Border getBorder(javax.swing.JComponent, javax.swing.plaf.ComponentUI, java.lang.String, javax.swing.border.Border)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane boolean access$2000(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane boolean access$2000(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane boolean access$2100(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane boolean access$2100(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane boolean access$700(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane boolean access$700(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane boolean canWrite(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane boolean usesShellFolder(javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane int access$3100(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane int access$3100(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane int getEditIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane int getViewType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane java.awt.Component findChildComponent(java.awt.Container, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane java.awt.Component findChildComponent(java.awt.Container, java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane java.awt.event.FocusListener access$1900(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane java.awt.event.FocusListener access$1900(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane java.io.File access$1400(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane java.io.File access$1400(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane java.io.File access$1402(sun.swing.FilePane, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane java.io.File access$1402(sun.swing.FilePane, java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane java.lang.String access$1100(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane java.lang.String access$1100(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane java.lang.String access$1200(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane java.lang.String access$1200(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane java.lang.String access$1300(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane java.lang.String access$1300(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane java.lang.String access$2200(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane java.lang.String access$2200(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane java.lang.String access$2300(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane java.lang.String access$2300(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane java.lang.String access$2400(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane java.lang.String access$2400(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane java.lang.String[] access$300(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane java.lang.String[] access$300(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane javax.swing.Action getViewTypeAction(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane javax.swing.JList access$3000(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane javax.swing.JList access$3000(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane javax.swing.JPanel createDetailsView()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane javax.swing.JPanel createList()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane javax.swing.JTable access$000(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane javax.swing.JTable access$000(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane javax.swing.ListSelectionModel access$500(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane javax.swing.ListSelectionModel access$500(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane sun.swing.FilePane.DetailsTableModel access$1700(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane sun.swing.FilePane.DetailsTableModel access$1700(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane sun.swing.FilePane.DetailsTableModel access$900(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane sun.swing.FilePane.DetailsTableRowSorter access$100(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane sun.swing.FilePane.DetailsTableRowSorter access$1000(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane sun.swing.FilePane.DetailsTableRowSorter access$1000(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane sun.swing.FilePane.FileChooserUIAccessor access$2700(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane sun.swing.FilePane.FileChooserUIAccessor access$2700(sun.swing.FilePane)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane void access$200(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void access$2500(sun.swing.FilePane, javax.swing.JTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void access$2500(sun.swing.FilePane, javax.swing.JTable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane void access$2600(sun.swing.FilePane, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void access$3200(sun.swing.FilePane, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void access$3300(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void access$400(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void access$600(sun.swing.FilePane, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void access$800(sun.swing.FilePane, javax.swing.JList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void access$800(sun.swing.FilePane, javax.swing.JList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void addActionsToMap(javax.swing.ActionMap, javax.swing.Action[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane void addActionsToMap(javax.swing.ActionMap, javax.swing.Action[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane void doDirectoryChanged(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane void doFileSelectionModeChanged(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane void doFilterChanged(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane void doMultiSelectionChanged(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane void doSelectedFileChanged(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void doSelectedFilesChanged(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void ensureFileIsVisible(javax.swing.JFileChooser, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void recursivelySetInheritsPopupMenu(java.awt.Container, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane void updateDetailsColumnModel(javax.swing.JTable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane void updateListRowCount(javax.swing.JList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.1FilePaneAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.2 void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.3 3()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane.3 void focusGained(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.3 void focusLost(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.3 void repaintListSelection(javax.swing.JList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.3 void repaintSelection(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.3 void repaintTableSelection(javax.swing.JTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.4 int getNextMatch(java.lang.String, int, javax.swing.text.Position.Bias) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.4 int getNextMatch(java.lang.String, int, javax.swing.text.Position.Bias) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.5 void contentsChanged(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.5 void intervalAdded(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.5 void intervalRemoved(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.6 6(sun.swing.FilePane, javax.swing.table.TableModel, javax.swing.JFileChooser) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.6 boolean processKeyBinding(javax.swing.KeyStroke, java.awt.event.KeyEvent, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.6 void tableChanged(javax.swing.event.TableModelEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.7 void componentResized(java.awt.event.ComponentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.8 void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.AlignableTableHeaderRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DelayedSelectionUpdater DelayedSelectionUpdater(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DelayedSelectionUpdater DelayedSelectionUpdater(sun.swing.FilePane, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableCellEditor DetailsTableCellEditor(sun.swing.FilePane, javax.swing.JTextField) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableCellEditor DetailsTableCellEditor(sun.swing.FilePane, javax.swing.JTextField) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableCellRenderer DetailsTableCellRenderer(sun.swing.FilePane, javax.swing.JFileChooser) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableCellRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableCellRenderer java.awt.Component getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableCellRenderer java.awt.Insets getInsets(java.awt.Insets)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel DetailsTableModel(sun.swing.FilePane, javax.swing.JFileChooser) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel int getColumnCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel java.lang.Object access$1800(sun.swing.FilePane.DetailsTableModel, java.io.File, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel java.lang.Object access$1800(sun.swing.FilePane.DetailsTableModel, java.io.File, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel java.lang.Object getFileColumnValue(java.io.File, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel java.lang.Object getValueAt(int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel sun.awt.shell.ShellFolderColumnInfo[] getColumns()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel void contentsChanged(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel void intervalAdded(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel void intervalRemoved(javax.swing.event.ListDataEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableModel void restoreSortKeys(java.util.List&lt;? extends javax.swing.RowSorter.SortKey&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableRowSorter void access$1601(sun.swing.FilePane.DetailsTableRowSorter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableRowSorter void updateComparators(sun.awt.shell.ShellFolderColumnInfo[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableRowSorter.1 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableRowSorter.1 java.lang.Void call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.DetailsTableRowSorter.SorterModelWrapper SorterModelWrapper(sun.swing.FilePane.DetailsTableRowSorter, sun.swing.FilePane.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.EditActionListener void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.FileRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.FileRenderer java.awt.Component getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.Handler Handler(sun.swing.FilePane, sun.swing.FilePane.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.Handler void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.Handler void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.Handler void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.Handler void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.Handler void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.SortableListModel SortableListModel(sun.swing.FilePane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.SortableListModel void sorterChanged(javax.swing.event.RowSorterEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.SortableListModel void tableChanged(javax.swing.event.TableModelEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.FilePane.ViewTypeAction ViewTypeAction(sun.swing.FilePane, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.ViewTypeAction int access$2800(sun.swing.FilePane.ViewTypeAction) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.FilePane.ViewTypeAction int access$2800(sun.swing.FilePane.ViewTypeAction)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.FilePane.ViewTypeAction void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.ImageCache java.awt.Image getImage(java.lang.Object, java.awt.GraphicsConfiguration, int, int, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.ImageCache sun.swing.ImageCache.Entry getEntry(java.lang.Object, java.awt.GraphicsConfiguration, int, int, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.ImageCache sun.swing.ImageCache.Entry getEntry(java.lang.Object, java.awt.GraphicsConfiguration, int, int, java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.ImageCache void setImage(java.lang.Object, java.awt.GraphicsConfiguration, int, int, java.lang.Object[], java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.ImageCache.Entry boolean equals(java.awt.GraphicsConfiguration, int, int, java.lang.Object[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.ImageCache.Entry java.awt.Image getImage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.ImageCache.Entry java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.ImageIconUIResource ImageIconUIResource(java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper MenuItemLayoutHelper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean isColumnLayout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean isColumnLayout(boolean, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean isColumnLayout(boolean, javax.swing.JMenuItem) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean isLeftToRight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean isTopLevelMenu()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean useCheckAndArrow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean useCheckAndArrow(javax.swing.JMenuItem) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper boolean useCheckAndArrow(javax.swing.JMenuItem)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getAfterCheckIconGap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getAfterCheckIconGap(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getCheckOffset(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getGap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getHorizontalAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getHorizontalTextPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getLeadingGap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getLeadingGap(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getLeftExtraWidth(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getLeftTextExtraWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getMinTextOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getMinTextOffset(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getVerticalAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int getVerticalTextPosition()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int max(int...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper int max(int...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.awt.Font getAccFont()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.awt.Font getFont()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.awt.FontMetrics getAccFontMetrics()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.awt.FontMetrics getFontMetrics()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.awt.Rectangle createMaxRect()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.awt.Rectangle getViewRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.lang.String getAccText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.lang.String getAccText(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.lang.String getAccText(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper java.lang.String getText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.Icon getArrowIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.Icon getCheckIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.Icon getIcon()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.Icon getIcon(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.JComponent getMenuItemParent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.JComponent getMenuItemParent(javax.swing.JMenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.JComponent getMenuItemParent(javax.swing.JMenuItem)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.JMenuItem getMenuItem()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper javax.swing.text.View getHtmlView()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.ColumnAlignment getLTRColumnAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.ColumnAlignment getRTLColumnAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.LayoutResult createLayoutResult()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.LayoutResult layoutMenuItem()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.RectSize getAccSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.RectSize getArrowSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.RectSize getCheckSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.RectSize getIconSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.RectSize getLabelSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper sun.swing.MenuItemLayoutHelper.RectSize getTextSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void addMaxWidth(sun.swing.MenuItemLayoutHelper.RectSize, int, java.awt.Dimension) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void alignAccCheckAndArrowVertically(sun.swing.MenuItemLayoutHelper.LayoutResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void alignRect(java.awt.Rectangle, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void alignRects(sun.swing.MenuItemLayoutHelper.LayoutResult, sun.swing.MenuItemLayoutHelper.ColumnAlignment) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void alignRects(sun.swing.MenuItemLayoutHelper.LayoutResult, sun.swing.MenuItemLayoutHelper.ColumnAlignment) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void calcMaxWidth(sun.swing.MenuItemLayoutHelper.RectSize, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void calcXPositionsLTR(int, int, int, java.awt.Rectangle...) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void calcXPositionsRTL(int, int, int, java.awt.Rectangle...) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void clearUsedClientProperties(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void clearUsedParentClientProperties(javax.swing.JMenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void doLTRColumnLayout(sun.swing.MenuItemLayoutHelper.LayoutResult, sun.swing.MenuItemLayoutHelper.ColumnAlignment) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void doLTRColumnLayout(sun.swing.MenuItemLayoutHelper.LayoutResult, sun.swing.MenuItemLayoutHelper.ColumnAlignment) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void doLTRComplexLayout(sun.swing.MenuItemLayoutHelper.LayoutResult, sun.swing.MenuItemLayoutHelper.ColumnAlignment) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void doLTRComplexLayout(sun.swing.MenuItemLayoutHelper.LayoutResult, sun.swing.MenuItemLayoutHelper.ColumnAlignment) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void doRTLColumnLayout(sun.swing.MenuItemLayoutHelper.LayoutResult, sun.swing.MenuItemLayoutHelper.ColumnAlignment) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void doRTLColumnLayout(sun.swing.MenuItemLayoutHelper.LayoutResult, sun.swing.MenuItemLayoutHelper.ColumnAlignment) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void doRTLComplexLayout(sun.swing.MenuItemLayoutHelper.LayoutResult, sun.swing.MenuItemLayoutHelper.ColumnAlignment) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void doRTLComplexLayout(sun.swing.MenuItemLayoutHelper.LayoutResult, sun.swing.MenuItemLayoutHelper.ColumnAlignment) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void fixVerticalAlignment(sun.swing.MenuItemLayoutHelper.LayoutResult, java.awt.Rectangle) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void layoutIconAndTextInLabelRect(sun.swing.MenuItemLayoutHelper.LayoutResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void prepareForLayout(sun.swing.MenuItemLayoutHelper.LayoutResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void reset(javax.swing.JMenuItem, javax.swing.Icon, javax.swing.Icon, java.awt.Rectangle, int, java.lang.String, boolean, java.awt.Font, java.awt.Font, boolean, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper void reset(javax.swing.JMenuItem, javax.swing.Icon, javax.swing.Icon, java.awt.Rectangle, int, java.lang.String, boolean, java.awt.Font, java.awt.Font, boolean, java.lang.String) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.ColumnAlignment int getAccAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.ColumnAlignment int getArrowAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.ColumnAlignment int getCheckAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.ColumnAlignment int getIconAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.ColumnAlignment int getTextAlignment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle access$400(sun.swing.MenuItemLayoutHelper.LayoutResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle access$400(sun.swing.MenuItemLayoutHelper.LayoutResult)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle access$500(sun.swing.MenuItemLayoutHelper.LayoutResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle access$500(sun.swing.MenuItemLayoutHelper.LayoutResult)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle access$600(sun.swing.MenuItemLayoutHelper.LayoutResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle access$600(sun.swing.MenuItemLayoutHelper.LayoutResult)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle access$700(sun.swing.MenuItemLayoutHelper.LayoutResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle access$700(sun.swing.MenuItemLayoutHelper.LayoutResult)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle access$800(sun.swing.MenuItemLayoutHelper.LayoutResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle access$800(sun.swing.MenuItemLayoutHelper.LayoutResult)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle access$900(sun.swing.MenuItemLayoutHelper.LayoutResult) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle access$900(sun.swing.MenuItemLayoutHelper.LayoutResult)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle getAccRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle getArrowRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle getCheckRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle getIconRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle getLabelRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.awt.Rectangle getTextRect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.LayoutResult java.util.Map&lt;java.lang.String,java.awt.Rectangle&gt; getAllRects()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize RectSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int access$002(sun.swing.MenuItemLayoutHelper.RectSize, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int access$100(sun.swing.MenuItemLayoutHelper.RectSize) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int access$100(sun.swing.MenuItemLayoutHelper.RectSize)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int access$102(sun.swing.MenuItemLayoutHelper.RectSize, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int access$200(sun.swing.MenuItemLayoutHelper.RectSize) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int access$200(sun.swing.MenuItemLayoutHelper.RectSize)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int access$202(sun.swing.MenuItemLayoutHelper.RectSize, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int access$300(sun.swing.MenuItemLayoutHelper.RectSize) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int access$300(sun.swing.MenuItemLayoutHelper.RectSize)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int access$302(sun.swing.MenuItemLayoutHelper.RectSize, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int getHeight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int getMaxWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int getOrigWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize int getWidth()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.MenuItemLayoutHelper.RectSize java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintColorUIResource java.awt.Color getPrintColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintColorUIResource java.lang.Object writeReplace()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus boolean isAborted()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintingStatus java.awt.print.Printable createNotificationPrintable(java.awt.print.Printable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus java.awt.print.Printable createNotificationPrintable(java.awt.print.Printable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus java.awt.print.PrinterJob access$400(sun.swing.PrintingStatus) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus java.awt.print.PrinterJob access$400(sun.swing.PrintingStatus)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintingStatus java.text.MessageFormat access$900(sun.swing.PrintingStatus) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus java.text.MessageFormat access$900(sun.swing.PrintingStatus)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintingStatus java.util.concurrent.atomic.AtomicBoolean access$000(sun.swing.PrintingStatus) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus java.util.concurrent.atomic.AtomicBoolean access$000(sun.swing.PrintingStatus)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintingStatus javax.swing.Action access$500(sun.swing.PrintingStatus) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus javax.swing.Action access$500(sun.swing.PrintingStatus)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintingStatus javax.swing.JButton access$100(sun.swing.PrintingStatus) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus javax.swing.JButton access$100(sun.swing.PrintingStatus)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintingStatus javax.swing.JDialog access$200(sun.swing.PrintingStatus) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus javax.swing.JDialog access$200(sun.swing.PrintingStatus)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintingStatus javax.swing.JLabel access$300(sun.swing.PrintingStatus) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus javax.swing.JLabel access$300(sun.swing.PrintingStatus)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.PrintingStatus sun.swing.PrintingStatus createPrintingStatus(java.awt.Component, java.awt.print.PrinterJob)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus void access$600(sun.swing.PrintingStatus, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus void access$700(sun.swing.PrintingStatus) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus.1 void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.PrintingStatus.2 void windowClosing(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.PrintingStatus.NotificationPrintable NotificationPrintable(sun.swing.PrintingStatus, java.awt.print.Printable) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.PrintingStatus.NotificationPrintable void access$800(sun.swing.PrintingStatus.NotificationPrintable, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.StringUIClientPropertyKey java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingAccessor SwingAccessor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingAccessor void setJTextComponentAccessor(sun.swing.SwingAccessor.JTextComponentAccessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingLazyValue SwingLazyValue(java.lang.String, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingLazyValue SwingLazyValue(java.lang.String, java.lang.String, java.lang.Object[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingLazyValue java.lang.Class[] getClassArray(java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingLazyValue java.lang.Class[] getClassArray(java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingLazyValue java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingLazyValue java.lang.Object createValue(javax.swing.UIDefaults)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingLazyValue.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingLazyValue.1 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 SwingUtilities2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean canEventAccessSystemClipboard(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean canEventAccessSystemClipboard(java.awt.AWTEvent, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean isAccessClipboardGesture(java.awt.event.InputEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean isAccessClipboardGesture(java.awt.event.InputEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean isComplexLayout(char[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean isFontRenderContextPrintCompatible(java.awt.font.FontRenderContext, java.awt.font.FontRenderContext) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean isFontRenderContextPrintCompatible(java.awt.font.FontRenderContext, java.awt.font.FontRenderContext) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean isPrinting(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean isPrinting(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean pointIsInActualBounds(javax.swing.JList, int, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean pointOutsidePrefSize(javax.swing.JTable, int, int, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean shouldIgnore(java.awt.event.MouseEvent, javax.swing.JComponent) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean shouldIgnore(java.awt.event.MouseEvent, javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean tabbedPaneChangeFocusTo(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean tabbedPaneChangeFocusTo(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 boolean useSelectedTextColor(javax.swing.text.Highlighter.Highlight, javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 float drawString(javax.swing.JComponent, java.awt.Graphics, java.text.AttributedCharacterIterator, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 int getAdjustedClickCount(javax.swing.text.JTextComponent, java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 int getAdjustedClickCount(javax.swing.text.JTextComponent, java.awt.event.MouseEvent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 int getLeftSideBearing(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 int loc2IndexFileList(javax.swing.JList, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 int stringWidth(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 int syncCharsBuffer(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.Component compositeRequestFocus(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.Component compositeRequestFocus(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.FontMetrics getFontMetrics(javax.swing.JComponent, java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.FontMetrics getFontMetrics(javax.swing.JComponent, java.awt.Font)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.FontMetrics getFontMetrics(javax.swing.JComponent, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.FontMetrics getFontMetrics(javax.swing.JComponent, java.awt.Graphics) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.FontMetrics getFontMetrics(javax.swing.JComponent, java.awt.Graphics, java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.FontMetrics getFontMetrics(javax.swing.JComponent, java.awt.Graphics, java.awt.Font) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.Graphics2D getGraphics2D(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.Graphics2D getGraphics2D(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.font.FontRenderContext getFRCProperty(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.font.FontRenderContext getFRCProperty(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.font.TextLayout createTextLayout(javax.swing.JComponent, java.lang.String, java.awt.Font, java.awt.font.FontRenderContext) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.font.TextLayout createTextLayout(javax.swing.JComponent, java.lang.String, java.awt.Font, java.awt.font.FontRenderContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.awt.font.TextLayout createTextLayout(javax.swing.JComponent, java.lang.String, java.awt.Font, java.awt.font.FontRenderContext)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.lang.Object makeIcon(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.lang.String clipString(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.lang.String clipStringIfNecessary(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.lang.String clipStringIfNecessary(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.lang.String displayPropertiesToCSS(java.awt.Font, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.lang.String displayPropertiesToCSS(java.awt.Font, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.lang.String displayPropertiesToCSS(java.awt.Font, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.util.concurrent.Future&lt;V&gt; submit(java.lang.Runnable, V) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.util.concurrent.Future&lt;V&gt; submit(java.lang.Runnable, V)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.util.concurrent.Future&lt;V&gt; submit(java.util.concurrent.Callable&lt;V&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 java.util.concurrent.Future&lt;V&gt; submit(java.util.concurrent.Callable&lt;V&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.AATextInfo drawTextAntialiased(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.AATextInfo drawTextAntialiased(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.Section liesIn(java.awt.Rectangle, java.awt.Point, boolean, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.Section liesIn(java.awt.Rectangle, java.awt.Point, boolean, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.Section liesIn(java.awt.Rectangle, java.awt.Point, boolean, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.Section liesInHorizontal(java.awt.Rectangle, java.awt.Point, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.Section liesInHorizontal(java.awt.Rectangle, java.awt.Point, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.Section liesInHorizontal(java.awt.Rectangle, java.awt.Point, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.Section liesInVertical(java.awt.Rectangle, java.awt.Point, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.Section liesInVertical(java.awt.Rectangle, java.awt.Point, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 sun.swing.SwingUtilities2.Section liesInVertical(java.awt.Rectangle, java.awt.Point, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2 void adjustFocus(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 void drawString(javax.swing.JComponent, java.awt.Graphics, java.lang.String, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 void drawStringUnderlineCharAt(javax.swing.JComponent, java.awt.Graphics, java.lang.String, int, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2 void setLeadAnchorWithoutSelection(javax.swing.ListSelectionModel, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2 void setSkipClickCount(java.awt.Component, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.SwingUtilities2.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2.1 java.lang.reflect.Field run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2.2 java.lang.Object createValue(javax.swing.UIDefaults) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2.2 java.lang.Object createValue(javax.swing.UIDefaults)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2.2.1 byte[] run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2.2.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2.AATextInfo AATextInfo(java.lang.Object, java.lang.Integer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2.AATextInfo sun.swing.SwingUtilities2.AATextInfo getAATextInfo(boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2.AATextInfo sun.swing.SwingUtilities2.AATextInfo getAATextInfoFromMap(java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.SwingUtilities2.AATextInfo sun.swing.SwingUtilities2.AATextInfo getAATextInfoFromMap(java.util.Map)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.SwingUtilities2.LSBCacheEntry boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.UIAction boolean isEnabled(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.UIAction boolean isEnabled(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;true;null-&gt;true&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.UIAction java.lang.Object getValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.UIAction java.lang.Object getValue(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.UIAction java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.UIAction void addPropertyChangeListener(java.beans.PropertyChangeListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.UIAction void addPropertyChangeListener(java.beans.PropertyChangeListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.UIAction void putValue(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.UIAction void putValue(java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.UIAction void putValue(java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.UIAction void removePropertyChangeListener(java.beans.PropertyChangeListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.UIAction void removePropertyChangeListener(java.beans.PropertyChangeListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.UIAction void setEnabled(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.WindowsPlacesBar WindowsPlacesBar(javax.swing.JFileChooser, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.WindowsPlacesBar java.awt.Dimension getPreferredSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.WindowsPlacesBar void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.WindowsPlacesBar void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
