<root>
  <item name="sun.swing.text.CompoundPrintable int getNumberOfPages()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.text.TextComponentPrintable TextComponentPrintable(javax.swing.text.JTextComponent, java.text.MessageFormat, java.text.MessageFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable boolean isFrameSetDocument(javax.swing.text.Document) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable boolean isFrameSetDocument(javax.swing.text.Document)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.swing.text.TextComponentPrintable int access$200(sun.swing.text.TextComponentPrintable, java.awt.Graphics, java.awt.print.PageFormat, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable int access$200(sun.swing.text.TextComponentPrintable, java.awt.Graphics, java.awt.print.PageFormat, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable int printOnEDT(java.awt.Graphics, java.awt.print.PageFormat, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable java.awt.print.Printable getPrintable(javax.swing.text.JTextComponent, java.text.MessageFormat, java.text.MessageFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable java.awt.print.Printable getPrintable(javax.swing.text.JTextComponent, java.text.MessageFormat, java.text.MessageFormat)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable java.util.List&lt;javax.swing.JEditorPane&gt; getFrames(javax.swing.JEditorPane) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable java.util.List&lt;javax.swing.JEditorPane&gt; getFrames(javax.swing.JEditorPane)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable java.util.concurrent.atomic.AtomicReference access$100(sun.swing.text.TextComponentPrintable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable java.util.concurrent.atomic.AtomicReference access$100(sun.swing.text.TextComponentPrintable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.text.TextComponentPrintable javax.swing.text.JTextComponent access$000(sun.swing.text.TextComponentPrintable, javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable javax.swing.text.JTextComponent access$000(sun.swing.text.TextComponentPrintable, javax.swing.text.JTextComponent) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable javax.swing.text.JTextComponent access$000(sun.swing.text.TextComponentPrintable, javax.swing.text.JTextComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable javax.swing.text.JTextComponent createPrintShellOnEDT(javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable javax.swing.text.JTextComponent createPrintShellOnEDT(javax.swing.text.JTextComponent)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable void access$300(sun.swing.text.TextComponentPrintable, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable void getFrames(java.awt.Container, java.util.List&lt;javax.swing.JEditorPane&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable.2 javax.swing.text.JTextComponent call()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable.8 void run()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.text.TextComponentPrintable.9 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable.IntegerSegment boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable.IntegerSegment boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.swing.text.TextComponentPrintable.IntegerSegment int compareTo(sun.swing.text.TextComponentPrintable.IntegerSegment) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.swing.text.TextComponentPrintable.IntegerSegment int compareTo(sun.swing.text.TextComponentPrintable.IntegerSegment)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.text.TextComponentPrintable.IntegerSegment int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.swing.text.TextComponentPrintable.IntegerSegment java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
