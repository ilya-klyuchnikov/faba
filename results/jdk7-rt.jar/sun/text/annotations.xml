<root>
  <item name="sun.text.CharArrayCodePointIterator CharArrayCodePointIterator(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CharArrayCodePointIterator CharArrayCodePointIterator(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CharArrayCodePointIterator int charIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.CharSequenceCodePointIterator int charIndex()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.CodePointIterator CodePointIterator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.CodePointIterator sun.text.CodePointIterator create(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CodePointIterator sun.text.CodePointIterator create(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CodePointIterator sun.text.CodePointIterator create(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CodePointIterator sun.text.CodePointIterator create(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CodePointIterator sun.text.CodePointIterator create(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CodePointIterator sun.text.CodePointIterator create(java.text.CharacterIterator)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CollatorUtilities CollatorUtilities()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.CollatorUtilities int toLegacyMode(sun.text.normalizer.NormalizerBase.Mode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.text.CollatorUtilities int toLegacyMode(sun.text.normalizer.NormalizerBase.Mode)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.CollatorUtilities sun.text.normalizer.NormalizerBase.Mode toNormalizerMode(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.CompactByteArray CompactByteArray(short[], byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.CompactByteArray boolean arrayRegionMatches(byte[], int, byte[], int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null,_,_-&gt;true;null,_,_,_,_-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.CompactByteArray boolean blockTouched(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.CompactByteArray boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.text.CompactByteArray boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.text.CompactByteArray byte elementAt(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.CompactByteArray byte[] getArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.CompactByteArray byte[] getStringArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.CompactByteArray int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.CompactByteArray short[] getIndexArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.ComposedCharIter java.lang.String decomposition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.IntHashtable boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.IntHashtable boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.IntHashtable int getDefaultValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.IntHashtable int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.IntHashtable int leastGreaterPrimeIndex(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.IntHashtable int size()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.Normalizer Normalizer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.Normalizer boolean isNormalized(java.lang.CharSequence, java.text.Normalizer.Form, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.Normalizer boolean isNormalized(java.lang.CharSequence, java.text.Normalizer.Form, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.Normalizer java.lang.String normalize(java.lang.CharSequence, java.text.Normalizer.Form, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.Normalizer java.lang.String normalize(java.lang.CharSequence, java.text.Normalizer.Form, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.text.SupplementaryCharacterData int[] getArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.UCompactIntArray int elementAt(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.text.UCompactIntArray int getKSize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
</root>
