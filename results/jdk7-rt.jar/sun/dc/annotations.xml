<root>
  <item name="sun.dc.DuctusRenderingEngine DuctusRenderingEngine()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.dc.DuctusRenderingEngine float getMinimumAAPenSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.dc.DuctusRenderingEngine float[] getTransformMatrix(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine float[] getTransformMatrix(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine java.awt.Shape createStrokedShape(java.awt.Shape, float, int, int, float, float[], float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine sun.dc.pr.Rasterizer getRasterizer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine sun.java2d.pipe.AATileGenerator getAATileGenerator(double, double, double, double, double, double, double, double, sun.java2d.pipe.Region, int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,_,_,_,_,_,null-&gt;!null;_,_,_,_,_,_,_,_,null,_-&gt;!null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine sun.java2d.pipe.AATileGenerator getAATileGenerator(java.awt.Shape, java.awt.geom.AffineTransform, sun.java2d.pipe.Region, java.awt.BasicStroke, boolean, boolean, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine sun.java2d.pipe.AATileGenerator getAATileGenerator(java.awt.Shape, java.awt.geom.AffineTransform, sun.java2d.pipe.Region, java.awt.BasicStroke, boolean, boolean, int[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine sun.java2d.pipe.AATileGenerator getAATileGenerator(java.awt.Shape, java.awt.geom.AffineTransform, sun.java2d.pipe.Region, java.awt.BasicStroke, boolean, boolean, int[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine void dropRasterizer(sun.dc.pr.Rasterizer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine void feedConsumer(java.awt.geom.PathIterator, sun.dc.path.PathConsumer, boolean, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine void feedConsumer(java.awt.geom.PathIterator, sun.dc.path.PathConsumer, boolean, float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine void feedConsumer(sun.dc.path.PathConsumer, java.awt.geom.PathIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine void feedConsumer(sun.dc.path.PathConsumer, java.awt.geom.PathIterator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine void strokeTo(java.awt.Shape, java.awt.geom.AffineTransform, java.awt.BasicStroke, boolean, boolean, boolean, sun.awt.geom.PathConsumer2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine void strokeTo(java.awt.Shape, java.awt.geom.AffineTransform, java.awt.BasicStroke, boolean, boolean, boolean, sun.awt.geom.PathConsumer2D) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine.FillAdapter java.awt.Shape getShape()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.dc.DuctusRenderingEngine.FillAdapter long getCPathConsumer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.dc.DuctusRenderingEngine.FillAdapter sun.dc.path.PathConsumer getConsumer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.dc.DuctusRenderingEngine.FillAdapter void beginPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.dc.DuctusRenderingEngine.FillAdapter void dispose()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.dc.DuctusRenderingEngine.FillAdapter void useProxy(sun.dc.path.FastPathProducer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
