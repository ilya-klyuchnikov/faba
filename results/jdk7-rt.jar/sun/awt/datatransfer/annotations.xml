<root>
  <item name="sun.awt.datatransfer.ClassLoaderObjectInputStream ClassLoaderObjectInputStream(java.io.InputStream, java.util.Map&lt;java.util.Set&lt;java.lang.String&gt;,java.lang.ClassLoader&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.ClassLoaderObjectInputStream java.lang.Class&lt;?&gt; resolveClass(java.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.ClassLoaderObjectInputStream java.lang.Class&lt;?&gt; resolveProxyClass(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.ClassLoaderObjectOutputStream java.util.Map&lt;java.util.Set&lt;java.lang.String&gt;,java.lang.ClassLoader&gt; getClassLoaderMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.ClassLoaderObjectOutputStream void annotateClass(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.ClassLoaderObjectOutputStream void annotateProxyClass(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.ClassLoaderObjectOutputStream.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.ClassLoaderObjectOutputStream.2 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.ClipboardTransferable ClipboardTransferable(sun.awt.datatransfer.SunClipboard) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer DataTransferer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer boolean access$100(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer boolean access$100(java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer boolean access$200(sun.awt.datatransfer.DataTransferer, java.io.File, java.security.ProtectionDomain) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer boolean doesSubtypeSupportCharset(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer boolean doesSubtypeSupportCharset(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer boolean isEncodingSupported(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer boolean isEncodingSupported(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer boolean isFileInWebstartedCache(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer boolean isFileInWebstartedCache(java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer boolean isFlavorNoncharsetTextType(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer boolean isURIListFormat(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer byte[] convertData(java.lang.Object, java.awt.datatransfer.Transferable, long, java.util.Map, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer byte[] imageToStandardBytes(java.awt.Image, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer byte[] imageToStandardBytes(java.awt.Image, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer byte[] imageToStandardBytesImpl(java.awt.image.RenderedImage, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer byte[] imageToStandardBytesImpl(java.awt.image.RenderedImage, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer byte[] inputStreamToByteArray(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer byte[] translateTransferable(java.awt.datatransfer.Transferable, java.awt.datatransfer.DataFlavor, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer byte[] translateTransferable(java.awt.datatransfer.Transferable, java.awt.datatransfer.DataFlavor, long)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer byte[] translateTransferableString(java.lang.String, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.awt.Image standardImageBytesOrStreamToImage(java.io.InputStream, byte[], java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.awt.Image standardImageBytesOrStreamToImage(java.io.InputStream, byte[], java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.awt.datatransfer.DataFlavor[] getFlavorsForFormatsAsArray(long[], java.awt.datatransfer.FlavorTable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.awt.datatransfer.DataFlavor[] keysToDataFlavorArray(java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.awt.datatransfer.DataFlavor[] keysToDataFlavorArray(java.util.Map)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.awt.datatransfer.DataFlavor[] setToSortedDataFlavorArray(java.util.Set) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.awt.datatransfer.DataFlavor[] setToSortedDataFlavorArray(java.util.Set)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.awt.datatransfer.DataFlavor[] setToSortedDataFlavorArray(java.util.Set, java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.awt.datatransfer.DataFlavor[] setToSortedDataFlavorArray(java.util.Set, java.util.Map) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.awt.datatransfer.DataFlavor[] setToSortedDataFlavorArray(java.util.Set, java.util.Map)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.awt.datatransfer.FlavorTable adaptFlavorMap(java.awt.datatransfer.FlavorMap)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.io.File access$300(sun.awt.datatransfer.DataTransferer, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.io.File access$300(sun.awt.datatransfer.DataTransferer, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.io.File access$300(sun.awt.datatransfer.DataTransferer, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.io.File castToFile(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.io.File castToFile(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.Object concatData(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.Object constructFlavoredObject(java.lang.Object, java.awt.datatransfer.DataFlavor, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.Object constructFlavoredObject(java.lang.Object, java.awt.datatransfer.DataFlavor, java.lang.Class) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.Object createMapping(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.Object translateBytes(byte[], java.awt.datatransfer.DataFlavor, long, java.awt.datatransfer.Transferable)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.Object translateBytesOrStream(java.io.InputStream, byte[], java.awt.datatransfer.DataFlavor, long, java.awt.datatransfer.Transferable)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.Object translateBytesOrStreamToInputStream(java.io.InputStream, java.awt.datatransfer.DataFlavor, long, java.awt.datatransfer.Transferable) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.Object translateStream(java.io.InputStream, java.awt.datatransfer.DataFlavor, long, java.awt.datatransfer.Transferable)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.String canonicalName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.String canonicalName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.String getBestCharsetForTextFormat(java.lang.Long, java.awt.datatransfer.Transferable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.String getTextCharset(java.awt.datatransfer.DataFlavor)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.String translateBytesOrStreamToString(java.io.InputStream, byte[], long, java.awt.datatransfer.Transferable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.String translateBytesOrStreamToString(java.io.InputStream, byte[], long, java.awt.datatransfer.Transferable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.String translateBytesOrStreamToString(java.io.InputStream, byte[], long, java.awt.datatransfer.Transferable) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.lang.String translateBytesOrStreamToString(java.io.InputStream, byte[], long, java.awt.datatransfer.Transferable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.net.URI[] dragQueryURIs(java.io.InputStream, byte[], long, java.awt.datatransfer.Transferable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.net.URI[] dragQueryURIs(java.io.InputStream, byte[], long, java.awt.datatransfer.Transferable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.net.URI[] dragQueryURIs(java.io.InputStream, byte[], long, java.awt.datatransfer.Transferable) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.security.ProtectionDomain getUserProtectionDomain(java.awt.datatransfer.Transferable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.ArrayList&lt;java.lang.String&gt; castToFiles(java.util.List, java.security.ProtectionDomain)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.List getPlatformMappingsForFlavor(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.List getPlatformMappingsForFlavor(java.awt.datatransfer.DataFlavor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.List getPlatformMappingsForNative(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.List getPlatformMappingsForNative(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.Map access$400()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.Map access$500()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.Map getFlavorsForFormats(long[], java.awt.datatransfer.FlavorTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.Map getFlavorsForFormats(long[], java.awt.datatransfer.FlavorTable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.Set getFlavorsForFormatsAsSet(long[], java.awt.datatransfer.FlavorTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.Set getFlavorsForFormatsAsSet(long[], java.awt.datatransfer.FlavorTable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.SortedMap getFormatsForFlavors(java.awt.datatransfer.DataFlavor[], java.awt.datatransfer.FlavorTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.SortedMap getFormatsForFlavors(java.awt.datatransfer.DataFlavor[], java.awt.datatransfer.FlavorTable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer java.util.SortedMap getFormatsForTransferable(java.awt.datatransfer.Transferable, java.awt.datatransfer.FlavorTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer long[] getFormatsForFlavorAsArray(java.awt.datatransfer.DataFlavor, java.awt.datatransfer.FlavorTable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer long[] getFormatsForFlavorsAsArray(java.awt.datatransfer.DataFlavor[], java.awt.datatransfer.FlavorTable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer long[] getFormatsForTransferableAsArray(java.awt.datatransfer.Transferable, java.awt.datatransfer.FlavorTable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer long[] keysToLongArray(java.util.SortedMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer long[] keysToLongArray(java.util.SortedMap)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer void registerTextFlavorProperties(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer void registerTextFlavorProperties(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer void registerTextFlavorProperties(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.1 sun.awt.datatransfer.DataTransferer run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.3 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.4 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.CharsetComparator int compareCharsets(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.CharsetComparator int compareCharsets(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.CharsetComparator java.lang.String getEncoding(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.CharsetComparator java.lang.String getEncoding(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.DataFlavorComparator DataFlavorComparator(java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.DataFlavorComparator DataFlavorComparator(java.util.Map, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.IndexedComparator int compareIndices(java.util.Map, java.lang.Object, java.lang.Object, java.lang.Integer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.IndexedComparator int compareLongs(java.util.Map, java.lang.Object, java.lang.Object, java.lang.Long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.RMI RMI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.RMI java.lang.Class&lt;?&gt; getClass(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.RMI java.lang.Class&lt;?&gt; remoteClass()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.RMI java.lang.reflect.Constructor&lt;?&gt; getConstructor(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;...) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.RMI java.lang.reflect.Constructor&lt;?&gt; getConstructor(java.lang.Class&lt;?&gt;, java.lang.Class&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.RMI java.lang.reflect.Method getMethod(java.lang.Class&lt;?&gt;, java.lang.String, java.lang.Class&lt;?&gt;...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null;null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.ReencodingInputStream ReencodingInputStream(sun.awt.datatransfer.DataTransferer, java.io.InputStream, long, java.lang.String, java.awt.datatransfer.Transferable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.ReencodingInputStream ReencodingInputStream(sun.awt.datatransfer.DataTransferer, java.io.InputStream, long, java.lang.String, java.awt.datatransfer.Transferable) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.ReencodingInputStream ReencodingInputStream(sun.awt.datatransfer.DataTransferer, java.io.InputStream, long, java.lang.String, java.awt.datatransfer.Transferable) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.ReencodingInputStream boolean matchCharArray(char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.ReencodingInputStream int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.StandardEncodingsHolder StandardEncodingsHolder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.StandardEncodingsHolder java.util.SortedSet access$000()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.DataTransferer.StandardEncodingsHolder java.util.SortedSet load()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard boolean areFlavorListenersRegistered()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard boolean isDataFlavorAvailable(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.awt.datatransfer.ClipboardOwner access$100(sun.awt.datatransfer.SunClipboard) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.awt.datatransfer.ClipboardOwner access$100(sun.awt.datatransfer.SunClipboard)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.awt.datatransfer.ClipboardOwner access$302(sun.awt.datatransfer.SunClipboard, java.awt.datatransfer.ClipboardOwner) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.awt.datatransfer.ClipboardOwner access$302(sun.awt.datatransfer.SunClipboard, java.awt.datatransfer.ClipboardOwner)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.awt.datatransfer.Transferable access$200(sun.awt.datatransfer.SunClipboard) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.awt.datatransfer.Transferable access$200(sun.awt.datatransfer.SunClipboard)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.awt.datatransfer.Transferable access$402(sun.awt.datatransfer.SunClipboard, java.awt.datatransfer.Transferable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.awt.datatransfer.Transferable access$402(sun.awt.datatransfer.SunClipboard, java.awt.datatransfer.Transferable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.awt.datatransfer.Transferable createLocaleTransferable(long[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.awt.datatransfer.Transferable createLocaleTransferable(long[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;null;null-&gt;null&quot;,pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.awt.datatransfer.Transferable getContents(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.awt.datatransfer.Transferable getContextContents()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.lang.Object getData(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.util.Set formatArrayAsDataFlavorSet(long[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard java.util.Set formatArrayAsDataFlavorSet(long[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard sun.awt.AppContext access$000(sun.awt.datatransfer.SunClipboard) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard sun.awt.AppContext access$000(sun.awt.datatransfer.SunClipboard)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard sun.awt.AppContext access$002(sun.awt.datatransfer.SunClipboard, sun.awt.AppContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard sun.awt.AppContext access$002(sun.awt.datatransfer.SunClipboard, sun.awt.AppContext)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard void addFlavorListener(java.awt.datatransfer.FlavorListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard void checkChange(long[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard void closeClipboard()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard void openClipboard(sun.awt.datatransfer.SunClipboard) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard void openClipboard(sun.awt.datatransfer.SunClipboard)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard void removeFlavorListener(java.awt.datatransfer.FlavorListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.datatransfer.SunClipboard void setContents(java.awt.datatransfer.Transferable, java.awt.datatransfer.ClipboardOwner) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
