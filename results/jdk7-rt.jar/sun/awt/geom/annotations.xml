<root>
  <item name="sun.awt.geom.AreaOp AreaOp()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp AreaOp(sun.awt.geom.AreaOp.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.geom.AreaOp AreaOp(sun.awt.geom.AreaOp.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp boolean obstructs(double, double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp java.util.Vector calculate(java.util.Vector, java.util.Vector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.AreaOp java.util.Vector calculate(java.util.Vector, java.util.Vector) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.AreaOp java.util.Vector pruneEdges(java.util.Vector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.AreaOp void addEdges(java.util.Vector, java.util.Vector, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.AreaOp void finalizeSubCurves(java.util.Vector, java.util.Vector) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.AreaOp void resolveLinks(java.util.Vector, java.util.Vector, java.util.Vector) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.AreaOp void resolveLinks(java.util.Vector, java.util.Vector, java.util.Vector) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.AreaOp.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.1 int compare(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.AreaOp.1 int compare(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.AreaOp.AddOp AddOp()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.AddOp boolean newClassification(boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,true-&gt;true;true,_-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.CAGOp CAGOp()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.CAGOp int classify(sun.awt.geom.Edge) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.AreaOp.CAGOp int getState()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.CAGOp void newRow()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.AreaOp.EOWindOp EOWindOp()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.EOWindOp int classify(sun.awt.geom.Edge) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.geom.AreaOp.EOWindOp int classify(sun.awt.geom.Edge)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.AreaOp.EOWindOp int getState()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.EOWindOp void newRow()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.AreaOp.IntOp IntOp()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.IntOp boolean newClassification(boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;false,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.NZWindOp NZWindOp()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.NZWindOp int classify(sun.awt.geom.Edge) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.AreaOp.NZWindOp int classify(sun.awt.geom.Edge)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.AreaOp.NZWindOp int getState()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.NZWindOp void newRow()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.AreaOp.SubOp SubOp()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.SubOp boolean newClassification(boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,true-&gt;false;false,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.XorOp XorOp()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.AreaOp.XorOp boolean newClassification(boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.ChainEnd ChainEnd(sun.awt.geom.CurveLink, sun.awt.geom.ChainEnd) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.ChainEnd ChainEnd(sun.awt.geom.CurveLink, sun.awt.geom.ChainEnd)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.ChainEnd sun.awt.geom.ChainEnd getPartner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.ChainEnd sun.awt.geom.CurveLink getChain()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.ChainEnd sun.awt.geom.CurveLink linkTo(sun.awt.geom.ChainEnd) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.ChainEnd void setOtherEnd(sun.awt.geom.ChainEnd)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.Crossings boolean accumulateCubic(double, double, double[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Crossings boolean accumulateQuad(double, double, double[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Crossings boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Crossings double getXHi()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Crossings double getXLo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Crossings double getYHi()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Crossings double getYLo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Crossings sun.awt.geom.Crossings findCrossings(java.awt.geom.PathIterator, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Crossings sun.awt.geom.Crossings findCrossings(java.util.Vector, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Crossings.EvenOdd boolean covers(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Crossings.NonZero boolean covers(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Curve Curve(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.Curve boolean accumulateCrossings(sun.awt.geom.Crossings) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Curve double round(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Curve int compareTo(sun.awt.geom.Curve, double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Curve int compareTo(sun.awt.geom.Curve, double[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Curve int getDirection()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Curve int orderof(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Curve int pointCrossingsForLine(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Curve int pointCrossingsForPath(java.awt.geom.PathIterator, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Curve int rectCrossingsForLine(int, double, double, double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Curve java.lang.String controlPointString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Curve java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Curve void insertCubic(java.util.Vector, double, double, double[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Curve void insertMove(java.util.Vector, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Curve void insertQuad(java.util.Vector, double, double, double[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.CurveLink CurveLink(sun.awt.geom.Curve, double, double, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.CurveLink boolean absorb(sun.awt.geom.Curve, double, double, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.geom.CurveLink boolean absorb(sun.awt.geom.CurveLink) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.CurveLink boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.CurveLink double getYBot()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.CurveLink double getYTop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.CurveLink int getEdgeTag()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.CurveLink sun.awt.geom.Curve getCurve()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.CurveLink sun.awt.geom.Curve getMoveto()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.CurveLink sun.awt.geom.CurveLink getNext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.CurveLink void setNext(sun.awt.geom.CurveLink)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.Edge Edge(sun.awt.geom.Curve, int, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.Edge boolean isActiveFor(double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Edge int compareTo(sun.awt.geom.Edge, double[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Edge int getCurveTag()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Edge int getEdgeTag()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Edge int getEquivalence()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Edge java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Edge sun.awt.geom.Curve getCurve()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Edge void record(double, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.Edge void setEdgeTag(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.Edge void setEquivalence(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.awt.geom.Order0 boolean accumulateCrossings(sun.awt.geom.Crossings) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order0 boolean accumulateCrossings(sun.awt.geom.Crossings)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double TforY(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double XforT(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double XforY(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double YforT(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double dXforT(double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double dYforT(double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double getX0()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double getX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double getXBot()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double getXMax()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double getXMin()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double getXTop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double getY0()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double getY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double getYBot()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double getYTop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 double nextVertical(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 int crossingsFor(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 int getOrder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 int getSegment(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order0 sun.awt.geom.Curve getReversedCurve()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 sun.awt.geom.Curve getSubCurve(double, double, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order0 void enlarge(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order1 boolean accumulateCrossings(sun.awt.geom.Crossings) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order1 double TforY(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double XforT(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double XforY(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double YforT(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double dXforT(double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double dYforT(double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double getX0()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double getX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double getXBot()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double getXMax()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double getXMin()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double getXTop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double getY0()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double getY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double getYBot()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double getYTop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 double nextVertical(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 int compareTo(sun.awt.geom.Curve, double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order1 int compareTo(sun.awt.geom.Curve, double[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order1 int getOrder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order1 int getSegment(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order1 sun.awt.geom.Curve getReversedCurve()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order1 void enlarge(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order2 double XforT(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double YforT(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double dXforT(double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double dYforT(double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double getCX0()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double getCY0()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double getX0()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double getX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double getXBot()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double getXMax()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double getXMin()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double getXTop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double getY0()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double getY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double getYBot()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double getYTop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 double nextVertical(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 int getOrder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order2 int getSegment(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order2 java.lang.String controlPointString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order2 sun.awt.geom.Curve getReversedCurve()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order2 void enlarge(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order2 void split(double[], int, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order3 double XforT(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double YforT(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double dXforT(double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double dYforT(double, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getCX0()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getCX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getCY0()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getCY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getX0()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getXBot()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getXMax()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getXMin()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getXTop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getY0()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getYBot()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double getYTop()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 double refine(double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 int getOrder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.geom.Order3 int getSegment(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order3 java.lang.String controlPointString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order3 sun.awt.geom.Curve getReversedCurve()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order3 void enlarge(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.geom.Order3 void split(double[], int, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
