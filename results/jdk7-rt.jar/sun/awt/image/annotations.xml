<root>
  <item name="sun.awt.image.BufImgSurfaceData BufImgSurfaceData(java.awt.image.DataBuffer, java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData java.awt.Rectangle getBounds()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData java.lang.Object getDestination()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createData(java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createData(java.awt.image.BufferedImage)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createData(java.awt.image.Raster, java.awt.image.ColorModel) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createData(java.awt.image.Raster, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createDataBC(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createDataBC(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createDataBP(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createDataBP(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createDataIC(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createDataIC(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createDataSC(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType, java.awt.image.IndexColorModel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.SurfaceData createDataSC(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType, java.awt.image.IndexColorModel)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData sun.java2d.loops.RenderLoops getRenderLoops(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceData void checkCustomComposite()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceManager BufImgSurfaceManager(java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceManager sun.java2d.SurfaceData getPrimarySurfaceData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BufImgSurfaceManager sun.java2d.SurfaceData restoreContents()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BufImgVolatileSurfaceManager boolean isAccelerationEnabled()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BufImgVolatileSurfaceManager sun.java2d.SurfaceData initAcceleratedSurface()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BufferedImageDevice int getType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BufferedImageDevice java.awt.GraphicsConfiguration getDefaultConfiguration()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BufferedImageDevice java.awt.GraphicsConfiguration[] getConfigurations()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufferedImageDevice java.lang.String getIDstring()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BufferedImageGraphicsConfig BufferedImageGraphicsConfig(java.awt.image.BufferedImage, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufferedImageGraphicsConfig BufferedImageGraphicsConfig(java.awt.image.BufferedImage, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.BufferedImageGraphicsConfig java.awt.GraphicsDevice getDevice()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BufferedImageGraphicsConfig java.awt.Rectangle getBounds()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufferedImageGraphicsConfig java.awt.geom.AffineTransform getDefaultTransform()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufferedImageGraphicsConfig java.awt.geom.AffineTransform getNormalizingTransform()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufferedImageGraphicsConfig java.awt.image.BufferedImage createCompatibleImage(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BufferedImageGraphicsConfig java.awt.image.ColorModel getColorModel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BufferedImageGraphicsConfig sun.awt.image.BufferedImageGraphicsConfig getConfig(java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteArrayImageSource ByteArrayImageSource(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteArrayImageSource boolean checkSecurity(java.lang.Object, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteArrayImageSource boolean checkSecurity(java.lang.Object, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;true;_,false-&gt;true;_,true-&gt;true;null,_-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster ByteBandedRaster(java.awt.image.SampleModel, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster ByteBandedRaster(java.awt.image.SampleModel, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster ByteBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster ByteBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster ByteBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster ByteBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ByteBandedRaster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster ByteBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ByteBandedRaster) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster ByteBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ByteBandedRaster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster ByteBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ByteBandedRaster) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster byte[] getByteData(int, int, int, int, byte[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster byte[] getByteData(int, int, int, int, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteBandedRaster byte[] getByteData(int, int, int, int, int, byte[]) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster byte[] getByteData(int, int, int, int, int, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteBandedRaster byte[] getDataStorage(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster byte[][] getDataStorage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster int getDataOffset(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster int getPixelStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster int getScanlineStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[]) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteBandedRaster java.lang.Object getDataElements(int, int, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster java.lang.Object getDataElements(int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteBandedRaster java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteBandedRaster void setDataElements(int, int, java.awt.image.Raster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster ByteComponentRaster(java.awt.image.SampleModel, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster ByteComponentRaster(java.awt.image.SampleModel, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster ByteComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster ByteComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster ByteComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster ByteComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ByteComponentRaster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster ByteComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ByteComponentRaster) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster ByteComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ByteComponentRaster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster ByteComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ByteComponentRaster) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster byte[] getByteData(int, int, int, int, byte[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster byte[] getByteData(int, int, int, int, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteComponentRaster byte[] getByteData(int, int, int, int, int, byte[]) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster byte[] getByteData(int, int, int, int, int, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteComponentRaster byte[] getDataStorage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster int getDataOffset(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster int getPixelStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster int getScanlineStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[]) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteComponentRaster java.lang.Object getDataElements(int, int, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster java.lang.Object getDataElements(int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteComponentRaster java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteComponentRaster void setDataElements(int, int, java.awt.image.Raster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster ByteInterleavedRaster(java.awt.image.SampleModel, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster ByteInterleavedRaster(java.awt.image.SampleModel, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster ByteInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster ByteInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster ByteInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster ByteInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ByteInterleavedRaster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster ByteInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ByteInterleavedRaster) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster ByteInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ByteInterleavedRaster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster ByteInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ByteInterleavedRaster) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster boolean isInterleaved(java.awt.image.ComponentSampleModel)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster byte[] getByteData(int, int, int, int, byte[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster byte[] getByteData(int, int, int, int, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster byte[] getByteData(int, int, int, int, int, byte[]) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster byte[] getByteData(int, int, int, int, int, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster byte[] getDataStorage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster int getDataOffset(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster int getPixelStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster int getScanlineStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster int[] getPixels(int, int, int, int, int[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster int[] getPixels(int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster int[] getSamples(int, int, int, int, int, int[]) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster int[] getSamples(int, int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[]) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster java.lang.Object getDataElements(int, int, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster java.lang.Object getDataElements(int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ByteInterleavedRaster void setDataElements(int, int, java.awt.image.Raster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster BytePackedRaster(java.awt.image.SampleModel, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster BytePackedRaster(java.awt.image.SampleModel, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster BytePackedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster BytePackedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster BytePackedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster BytePackedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.BytePackedRaster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster BytePackedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.BytePackedRaster) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster BytePackedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.BytePackedRaster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster BytePackedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.BytePackedRaster) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster byte[] getByteData(int, int, int, int, byte[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster byte[] getByteData(int, int, int, int, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.BytePackedRaster byte[] getDataStorage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster int getDataBitOffset()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster int getPixelBitStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster int getScanlineStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster int[] getPixels(int, int, int, int, int[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster int[] getPixels(int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.BytePackedRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[]) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster java.lang.Object getDataElements(int, int, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster java.lang.Object getDataElements(int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;!null;_,_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.BytePackedRaster java.lang.Object getPixelData(int, int, int, int, java.lang.Object) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster java.lang.Object getPixelData(int, int, int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.BytePackedRaster java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.BytePackedRaster void setDataElements(int, int, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.FileImageSource boolean checkSecurity(java.lang.Object, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.FileImageSource boolean checkSecurity(java.lang.Object, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;true;_,false-&gt;true;_,true-&gt;true;null,_-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.GifImageDecoder byte[] grow_colormap(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.GifImageDecoder byte[] grow_colormap(byte[], int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.GifImageDecoder int ExtractByte(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.GifImageDecoder int ExtractByte(byte[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.GifImageDecoder int ExtractWord(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.GifImageDecoder int ExtractWord(byte[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImageConsumerQueue ImageConsumerQueue(sun.awt.image.InputStreamImageSource, java.awt.image.ImageConsumer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageConsumerQueue boolean isConsumer(sun.awt.image.ImageConsumerQueue, java.awt.image.ImageConsumer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageConsumerQueue boolean isConsumer(sun.awt.image.ImageConsumerQueue, java.awt.image.ImageConsumer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageConsumerQueue boolean isConsumer(sun.awt.image.ImageConsumerQueue, java.awt.image.ImageConsumer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImageConsumerQueue java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ImageConsumerQueue sun.awt.image.ImageConsumerQueue removeConsumer(sun.awt.image.ImageConsumerQueue, java.awt.image.ImageConsumer, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageConsumerQueue sun.awt.image.ImageConsumerQueue removeConsumer(sun.awt.image.ImageConsumerQueue, java.awt.image.ImageConsumer, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ImageDecoder boolean isConsumer(java.awt.image.ImageConsumer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageDecoder boolean isConsumer(java.awt.image.ImageConsumer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImageDecoder sun.awt.image.ImageConsumerQueue nextConsumer(sun.awt.image.ImageConsumerQueue)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImageDecoder void removeConsumer(java.awt.image.ImageConsumer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageFetcher ImageFetcher(java.lang.ThreadGroup, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageFetcher ImageFetcher(java.lang.ThreadGroup, int, sun.awt.image.ImageFetcher.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageFetcher ImageFetcher(java.lang.ThreadGroup, int, sun.awt.image.ImageFetcher.1) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageFetcher boolean isFetcher(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageRepresentation boolean drawToBufImage(java.awt.Graphics, sun.awt.image.ToolkitImage, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageRepresentation boolean drawToBufImage(java.awt.Graphics, sun.awt.image.ToolkitImage, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageRepresentation boolean drawToBufImage(java.awt.Graphics, sun.awt.image.ToolkitImage, int, int, java.awt.Color, java.awt.image.ImageObserver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageRepresentation boolean drawToBufImage(java.awt.Graphics, sun.awt.image.ToolkitImage, java.awt.geom.AffineTransform, java.awt.image.ImageObserver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageRepresentation int getHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImageRepresentation int getWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImageRepresentation java.awt.image.BufferedImage createImage(java.awt.image.ColorModel, java.awt.image.WritableRaster, boolean, java.util.Hashtable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ImageRepresentation java.awt.image.BufferedImage createImage(java.awt.image.ColorModel, java.awt.image.WritableRaster, boolean, java.util.Hashtable) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ImageRepresentation java.awt.image.BufferedImage createImage(java.awt.image.ColorModel, java.awt.image.WritableRaster, boolean, java.util.Hashtable) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageRepresentation java.awt.image.BufferedImage createImage(java.awt.image.ColorModel, java.awt.image.WritableRaster, boolean, java.util.Hashtable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ImageRepresentation java.awt.image.BufferedImage getBufferedImage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImageRepresentation java.awt.image.ColorModel getColorModel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImageWatched void addWatcher(java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageWatched.Link Link()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImageWatched.Link boolean isWatcher(java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageWatched.Link boolean isWatcher(java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImageWatched.Link boolean newInfo(java.awt.Image, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageWatched.Link boolean newInfo(java.awt.Image, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_-&gt;false;null,_,_,_,_,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImageWatched.Link sun.awt.image.ImageWatched.Link removeWatcher(java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImageWatched.Link sun.awt.image.ImageWatched.Link removeWatcher(java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImagingLib ImagingLib()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImagingLib int getNativeOpIndex(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImagingLib int getNativeOpIndex(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ImagingLib java.awt.image.BufferedImage filter(java.awt.image.BufferedImageOp, java.awt.image.BufferedImage, java.awt.image.BufferedImage) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImagingLib java.awt.image.BufferedImage filter(java.awt.image.BufferedImageOp, java.awt.image.BufferedImage, java.awt.image.BufferedImage)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ImagingLib java.awt.image.WritableRaster filter(java.awt.image.RasterOp, java.awt.image.Raster, java.awt.image.WritableRaster) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ImagingLib java.awt.image.WritableRaster filter(java.awt.image.RasterOp, java.awt.image.Raster, java.awt.image.WritableRaster)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ImagingLib.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource int countConsumers(sun.awt.image.ImageConsumerQueue) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource int countConsumers(sun.awt.image.ImageConsumerQueue)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource sun.awt.image.ImageDecoder decoderForType(java.io.InputStream, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource sun.awt.image.ImageDecoder decoderForType(java.io.InputStream, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource sun.awt.image.ImageDecoder decoderForType(java.io.InputStream, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;null;_,!null-&gt;null;_,null-&gt;null;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource sun.awt.image.ImageDecoder getDecoder(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource void doneDecoding(sun.awt.image.ImageDecoder) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource void errorAllConsumers(sun.awt.image.ImageConsumerQueue, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource void errorConsumer(sun.awt.image.ImageConsumerQueue, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource void printQueue(sun.awt.image.ImageConsumerQueue, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource void printQueue(sun.awt.image.ImageConsumerQueue, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource void printQueues(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource void requestTopDownLeftRightResend(java.awt.image.ImageConsumer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource void requestTopDownLeftRightResend(java.awt.image.ImageConsumer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.InputStreamImageSource void setDecoder(sun.awt.image.ImageDecoder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster IntegerComponentRaster(java.awt.image.SampleModel, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster IntegerComponentRaster(java.awt.image.SampleModel, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster IntegerComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster IntegerComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster IntegerComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster IntegerComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.IntegerComponentRaster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster IntegerComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.IntegerComponentRaster) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster IntegerComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.IntegerComponentRaster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster IntegerComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.IntegerComponentRaster) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster int getDataOffset(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster int getPixelStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster int getScanlineStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster int[] getDataStorage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[]) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster java.lang.Object getDataElements(int, int, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster java.lang.Object getDataElements(int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerComponentRaster void setDataElements(int, int, java.awt.image.Raster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster IntegerInterleavedRaster(java.awt.image.SampleModel, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster IntegerInterleavedRaster(java.awt.image.SampleModel, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster IntegerInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster IntegerInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster IntegerInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster IntegerInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.IntegerInterleavedRaster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster IntegerInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.IntegerInterleavedRaster) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster IntegerInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.IntegerInterleavedRaster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster IntegerInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.IntegerInterleavedRaster) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster int getDataOffset(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster int getPixelStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster int getScanlineStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster int[] getDataStorage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[]) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster java.lang.Object getDataElements(int, int, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster java.lang.Object getDataElements(int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;!null;_,_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster void setDataElements(int, int, java.awt.image.Raster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.IntegerInterleavedRaster void setDataElements(int, int, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.JPEGImageDecoder boolean sendHeaderInfo(int, int, boolean, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,false-&gt;true;_,_,_,_,true-&gt;true;_,_,_,false,_-&gt;true;_,_,_,true,_-&gt;true;_,_,false,_,_-&gt;true;_,_,true,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.JPEGImageDecoder boolean sendPixels(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.JPEGImageDecoder boolean sendPixels(int[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.NativeLibLoader NativeLibLoader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.OffScreenImage OffScreenImage(java.awt.Component, java.awt.image.ColorModel, java.awt.image.WritableRaster, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.OffScreenImage OffScreenImage(java.awt.Component, java.awt.image.ColorModel, java.awt.image.WritableRaster, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.OffScreenImageSource OffScreenImageSource(java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.OffScreenImageSource OffScreenImageSource(java.awt.image.BufferedImage, java.util.Hashtable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.OffScreenImageSource OffScreenImageSource(java.awt.image.BufferedImage, java.util.Hashtable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.OffScreenImageSource boolean isConsumer(java.awt.image.ImageConsumer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.OffScreenImageSource boolean isConsumer(java.awt.image.ImageConsumer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.OffScreenImageSource void removeConsumer(java.awt.image.ImageConsumer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.OffScreenImageSource void requestTopDownLeftRightResend(java.awt.image.ImageConsumer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.OffScreenImageSource void requestTopDownLeftRightResend(java.awt.image.ImageConsumer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PNGFilterInputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PNGFilterInputStream int read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.PNGImageDecoder boolean getCheckCRC()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PNGImageDecoder int crc(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PNGImageDecoder int getByte(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PNGImageDecoder int getInt(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PNGImageDecoder int getShort(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PNGImageDecoder int update_crc(int, byte[], int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PNGImageDecoder void filterRow(byte[], byte[], int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PNGImageDecoder void property(java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PNGImageDecoder.Chromaticities java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.PixelConverter int getAlphaMask()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Argb int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Argb int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Argb int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Argb int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ArgbBm int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ArgbBm int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ArgbBm int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ArgbBm int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ArgbPre int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ArgbPre int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ArgbPre int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ArgbPre int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Bgrx int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Bgrx int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Bgrx int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Bgrx int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ByteGray ByteGray(sun.awt.image.PixelConverter.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ByteGray int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ByteGray int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ByteGray int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.ByteGray int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Rgba int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Rgba int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Rgba int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Rgba int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.RgbaPre int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.RgbaPre int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.RgbaPre int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.RgbaPre int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Rgbx int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Rgbx int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Rgbx int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Rgbx int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort4444Argb int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort4444Argb int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort4444Argb int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort4444Argb int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort555Rgb int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort555Rgb int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort555Rgb int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort555Rgb int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort555Rgbx int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort555Rgbx int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort555Rgbx int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort555Rgbx int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort565Rgb int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort565Rgb int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort565Rgb int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Ushort565Rgb int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.UshortGray int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.UshortGray int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.UshortGray int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.UshortGray int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Xbgr int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Xbgr int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Xbgr int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Xbgr int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Xrgb int pixelToRgb(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Xrgb int pixelToRgb(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Xrgb int rgbToPixel(int, java.awt.image.ColorModel) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.PixelConverter.Xrgb int rgbToPixel(int, java.awt.image.ColorModel)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster ShortBandedRaster(java.awt.image.SampleModel, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster ShortBandedRaster(java.awt.image.SampleModel, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster ShortBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster ShortBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster ShortBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster ShortBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ShortBandedRaster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster ShortBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ShortBandedRaster) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster ShortBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ShortBandedRaster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster ShortBandedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ShortBandedRaster) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster int getDataOffset(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster int getPixelStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster int getScanlineStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[]) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ShortBandedRaster java.lang.Object getDataElements(int, int, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster java.lang.Object getDataElements(int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ShortBandedRaster java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster short[] getDataStorage(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster short[] getShortData(int, int, int, int, int, short[]) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster short[] getShortData(int, int, int, int, int, short[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ShortBandedRaster short[] getShortData(int, int, int, int, short[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster short[] getShortData(int, int, int, int, short[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ShortBandedRaster short[][] getDataStorage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortBandedRaster void setDataElements(int, int, java.awt.image.Raster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster ShortComponentRaster(java.awt.image.SampleModel, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster ShortComponentRaster(java.awt.image.SampleModel, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster ShortComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster ShortComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster ShortComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster ShortComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ShortComponentRaster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster ShortComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ShortComponentRaster) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster ShortComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ShortComponentRaster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster ShortComponentRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ShortComponentRaster) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster int getDataOffset(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster int getPixelStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster int getScanlineStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[]) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ShortComponentRaster java.lang.Object getDataElements(int, int, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster java.lang.Object getDataElements(int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ShortComponentRaster java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster short[] getDataStorage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster short[] getShortData(int, int, int, int, int, short[]) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster short[] getShortData(int, int, int, int, int, short[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ShortComponentRaster short[] getShortData(int, int, int, int, short[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortComponentRaster short[] getShortData(int, int, int, int, short[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ShortComponentRaster void setDataElements(int, int, java.awt.image.Raster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster ShortInterleavedRaster(java.awt.image.SampleModel, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster ShortInterleavedRaster(java.awt.image.SampleModel, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster ShortInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster ShortInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster ShortInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster ShortInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ShortInterleavedRaster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster ShortInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ShortInterleavedRaster) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster ShortInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ShortInterleavedRaster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster ShortInterleavedRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, sun.awt.image.ShortInterleavedRaster) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster int getDataOffset(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster int getPixelStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster int getScanlineStride()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster java.awt.image.WritableRaster createCompatibleWritableRaster(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[]) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster java.awt.image.WritableRaster createWritableChild(int, int, int, int, int, int, int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster java.lang.Object getDataElements(int, int, int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster java.lang.Object getDataElements(int, int, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster java.lang.Object getDataElements(int, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster short[] getDataStorage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster short[] getShortData(int, int, int, int, int, short[]) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster short[] getShortData(int, int, int, int, int, short[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster short[] getShortData(int, int, int, int, short[]) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster short[] getShortData(int, int, int, int, short[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.ShortInterleavedRaster void setDataElements(int, int, java.awt.image.Raster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage SunVolatileImage(java.awt.Component, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage SunVolatileImage(java.awt.Component, int, int, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage int getForcedAccelSurfaceType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage int getHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage int getHeight(java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage int getWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage int getWidth(java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage java.awt.Component getComponent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage java.awt.Graphics2D createGraphics()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage java.awt.GraphicsConfiguration getGraphicsConfig()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage java.lang.Object getProperty(java.lang.String, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage java.lang.Object getProperty(java.lang.String, java.awt.image.ImageObserver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.SunVolatileImage sun.awt.image.VolatileSurfaceManager createSurfaceManager(java.lang.Object, java.awt.ImageCapabilities) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.SunWritableRaster SunWritableRaster(java.awt.image.SampleModel, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunWritableRaster SunWritableRaster(java.awt.image.SampleModel, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunWritableRaster SunWritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunWritableRaster SunWritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunWritableRaster SunWritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Point) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunWritableRaster SunWritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, java.awt.image.WritableRaster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunWritableRaster SunWritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, java.awt.image.WritableRaster) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunWritableRaster SunWritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, java.awt.image.WritableRaster) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunWritableRaster SunWritableRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer, java.awt.Rectangle, java.awt.Point, java.awt.image.WritableRaster) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunWritableRaster void markDirty(java.awt.image.WritableRaster) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SunWritableRaster void setDataStealer(sun.awt.image.SunWritableRaster.DataStealer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.SurfaceManager SurfaceManager()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.SurfaceManager int getImageScale(java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.SurfaceManager java.awt.ImageCapabilities getCapabilities(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.SurfaceManager void acceleratedSurfaceLost()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.SurfaceManager void setImageAccessor(sun.awt.image.SurfaceManager.ImageAccessor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.SurfaceManager.ImageAccessor ImageAccessor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.ToolkitImage java.lang.Object getProperty(java.lang.String, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ToolkitImage sun.awt.image.ImageRepresentation makeImageRep()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.ToolkitImage void setProperties(java.util.Hashtable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.URLImageSource URLImageSource(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.URLImageSource URLImageSource(java.net.URLConnection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.URLImageSource boolean checkSecurity(java.lang.Object, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.VSyncedBSManager VSyncedBSManager()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.VSyncedBSManager.NoLimitVSyncBSMgr NoLimitVSyncBSMgr()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.VSyncedBSManager.NoLimitVSyncBSMgr NoLimitVSyncBSMgr(sun.awt.image.VSyncedBSManager.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.VSyncedBSManager.NoLimitVSyncBSMgr NoLimitVSyncBSMgr(sun.awt.image.VSyncedBSManager.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.VSyncedBSManager.NoLimitVSyncBSMgr boolean checkAllowed(java.awt.image.BufferStrategy) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.VSyncedBSManager.NoLimitVSyncBSMgr boolean checkAllowed(java.awt.image.BufferStrategy)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true;null-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.VSyncedBSManager.NoLimitVSyncBSMgr void relinquishVsync(java.awt.image.BufferStrategy) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.VSyncedBSManager.NoLimitVSyncBSMgr void relinquishVsync(java.awt.image.BufferStrategy)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.VSyncedBSManager.SingleVSyncedBSMgr SingleVSyncedBSMgr()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.VSyncedBSManager.SingleVSyncedBSMgr SingleVSyncedBSMgr(sun.awt.image.VSyncedBSManager.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.VSyncedBSManager.SingleVSyncedBSMgr SingleVSyncedBSMgr(sun.awt.image.VSyncedBSManager.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.VSyncedBSManager.SingleVSyncedBSMgr void relinquishVsync(java.awt.image.BufferStrategy) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.VolatileSurfaceManager boolean contentsLost()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.VolatileSurfaceManager boolean isConfigValid(java.awt.GraphicsConfiguration) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.awt.image.VolatileSurfaceManager boolean isConfigValid(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.awt.image.VolatileSurfaceManager java.awt.ImageCapabilities getCapabilities(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.VolatileSurfaceManager sun.java2d.SurfaceData getPrimarySurfaceData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.VolatileSurfaceManager void restoreAcceleratedSurface()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.VolatileSurfaceManager.AcceleratedImageCapabilities boolean isAccelerated()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.awt.image.WritableRasterNative WritableRasterNative(java.awt.image.SampleModel, java.awt.image.DataBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.WritableRasterNative WritableRasterNative(java.awt.image.SampleModel, java.awt.image.DataBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.WritableRasterNative sun.awt.image.WritableRasterNative createNativeRaster(java.awt.image.ColorModel, sun.java2d.SurfaceData, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.WritableRasterNative sun.awt.image.WritableRasterNative createNativeRaster(java.awt.image.ColorModel, sun.java2d.SurfaceData, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.WritableRasterNative sun.awt.image.WritableRasterNative createNativeRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.WritableRasterNative sun.awt.image.WritableRasterNative createNativeRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.awt.image.WritableRasterNative sun.awt.image.WritableRasterNative createNativeRaster(java.awt.image.SampleModel, java.awt.image.DataBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
