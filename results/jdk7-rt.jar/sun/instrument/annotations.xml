<root>
  <item name="sun.instrument.InstrumentationImpl boolean isModifiableClass(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.instrument.InstrumentationImpl boolean isNativeMethodPrefixSupported()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.instrument.InstrumentationImpl boolean isRedefineClassesSupported()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.instrument.InstrumentationImpl boolean removeTransformer(java.lang.instrument.ClassFileTransformer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.instrument.InstrumentationImpl long getObjectSize(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.instrument.InstrumentationImpl void addTransformer(java.lang.instrument.ClassFileTransformer, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.instrument.InstrumentationImpl void appendToBootstrapClassLoaderSearch(java.util.jar.JarFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.instrument.InstrumentationImpl void appendToSystemClassLoaderSearch(java.util.jar.JarFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.instrument.InstrumentationImpl void redefineClasses(java.lang.instrument.ClassDefinition[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.instrument.InstrumentationImpl void setNativeMethodPrefix(java.lang.instrument.ClassFileTransformer, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.instrument.InstrumentationImpl.1 1(java.lang.reflect.AccessibleObject, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.instrument.TransformerManager TransformerManager(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.instrument.TransformerManager boolean includesTransformer(java.lang.instrument.ClassFileTransformer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.instrument.TransformerManager boolean isRetransformable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.instrument.TransformerManager boolean removeTransformer(java.lang.instrument.ClassFileTransformer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.instrument.TransformerManager boolean setNativeMethodPrefix(java.lang.instrument.ClassFileTransformer, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.instrument.TransformerManager int getTransformerCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.instrument.TransformerManager sun.instrument.TransformerManager.TransformerInfo[] getSnapshotTransformerList()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.instrument.TransformerManager.TransformerInfo TransformerInfo(sun.instrument.TransformerManager, java.lang.instrument.ClassFileTransformer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.instrument.TransformerManager.TransformerInfo java.lang.String getPrefix()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.instrument.TransformerManager.TransformerInfo java.lang.instrument.ClassFileTransformer transformer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.instrument.TransformerManager.TransformerInfo void setPrefix(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
</root>
