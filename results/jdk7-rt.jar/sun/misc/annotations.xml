<root>
  <item name="sun.misc.ASCIICaseInsensitiveComparator ASCIICaseInsensitiveComparator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ASCIICaseInsensitiveComparator boolean isLower(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ASCIICaseInsensitiveComparator boolean isUpper(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ASCIICaseInsensitiveComparator int compare(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ASCIICaseInsensitiveComparator int compare(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ASCIICaseInsensitiveComparator int lowerCaseHashCode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ASCIICaseInsensitiveComparator int toLower(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ASCIICaseInsensitiveComparator int toUpper(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.BASE64Decoder BASE64Decoder()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.BASE64Decoder int bytesPerAtom()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.BASE64Decoder int bytesPerLine()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.BASE64Decoder void decodeAtom(java.io.PushbackInputStream, java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.BASE64Encoder BASE64Encoder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.BASE64Encoder int bytesPerAtom()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.BASE64Encoder int bytesPerLine()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.BASE64Encoder void encodeAtom(java.io.OutputStream, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.BASE64Encoder void encodeAtom(java.io.OutputStream, byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CRC16 CRC16()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.CRC16 void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.CRC16 void update(byte)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.Cache boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Cache int size()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Cache java.lang.Object get(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Cache java.lang.Object put(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Cache java.lang.Object put(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Cache java.lang.Object remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Cache java.util.Enumeration elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Cache java.util.Enumeration keys()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CacheEntry java.lang.Object reconstitute()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.CacheEnumerator CacheEnumerator(sun.misc.CacheEntry[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CacheEnumerator CacheEnumerator(sun.misc.CacheEntry[], boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.CharacterDecoder CharacterDecoder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.CharacterDecoder byte[] decodeBuffer(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterDecoder int decodeLinePrefix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.CharacterDecoder int decodeLinePrefix(java.io.PushbackInputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.CharacterDecoder java.nio.ByteBuffer decodeBufferToByteBuffer(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterDecoder java.nio.ByteBuffer decodeBufferToByteBuffer(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterDecoder void decodeAtom(java.io.PushbackInputStream, java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.CharacterDecoder void decodeAtom(java.io.PushbackInputStream, java.io.OutputStream, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.CharacterDecoder void decodeBufferPrefix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.CharacterDecoder void decodeBufferPrefix(java.io.PushbackInputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.CharacterDecoder void decodeBufferPrefix(java.io.PushbackInputStream, java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.CharacterDecoder void decodeBufferSuffix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.CharacterDecoder void decodeBufferSuffix(java.io.PushbackInputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.CharacterDecoder void decodeBufferSuffix(java.io.PushbackInputStream, java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.CharacterDecoder void decodeLineSuffix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.CharacterDecoder void decodeLineSuffix(java.io.PushbackInputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.CharacterDecoder void decodeLineSuffix(java.io.PushbackInputStream, java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.CharacterEncoder CharacterEncoder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.CharacterEncoder byte[] getBytes(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder int readFully(java.io.InputStream, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder java.lang.String encode(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder java.lang.String encode(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder java.lang.String encodeBuffer(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder java.lang.String encodeBuffer(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encode(byte[], java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encode(java.nio.ByteBuffer, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeBuffer(byte[], java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeBuffer(java.nio.ByteBuffer, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeBufferPrefix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeBufferSuffix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeBufferSuffix(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeLinePrefix(java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeLinePrefix(java.io.OutputStream, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.CharacterEncoder void encodeLineSuffix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ClassFileTransformer ClassFileTransformer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ClassFileTransformer sun.misc.ClassFileTransformer[] getTransformers()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ClassLoaderUtil ClassLoaderUtil()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Cleaner boolean remove(sun.misc.Cleaner) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Cleaner sun.misc.Cleaner add(sun.misc.Cleaner)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.Cleaner sun.misc.Cleaner create(java.lang.Object, java.lang.Runnable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Cleaner sun.misc.Cleaner create(java.lang.Object, java.lang.Runnable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.Cleaner.1 1(sun.misc.Cleaner, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.CompoundEnumeration CompoundEnumeration(java.util.Enumeration[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.DoubleConsts DoubleConsts()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.DoubleConsts void &lt;clinit&gt;()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ExtensionDependency ExtensionDependency()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ExtensionDependency boolean checkExtensionAgainst(java.lang.String, java.util.jar.Attributes, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ExtensionDependency boolean checkExtensionAgainst(java.lang.String, java.util.jar.Attributes, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency boolean checkExtensionAgainst(java.lang.String, java.util.jar.Attributes, java.io.File) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency boolean checkExtensions(java.util.jar.JarFile)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.ExtensionDependency boolean installExtension(sun.misc.ExtensionInfo, sun.misc.ExtensionInfo) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency java.io.File[] access$300(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency java.io.File[] access$300(java.io.File[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency java.io.File[] getExtFiles(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency java.io.File[] getExtFiles(java.io.File[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency void access$100(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ExtensionDependency void access$100(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ExtensionDependency void access$200(sun.misc.ExtensionDependency, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency void access$200(sun.misc.ExtensionDependency, java.lang.Throwable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ExtensionDependency void access$200(sun.misc.ExtensionDependency, java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ExtensionDependency void debug(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ExtensionDependency void debug(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ExtensionDependency void debugException(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ExtensionDependency void debugException(java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ExtensionDependency.1 1(sun.misc.ExtensionDependency, java.io.File)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.ExtensionDependency.2 2(sun.misc.ExtensionDependency, java.lang.String[], java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.ExtensionDependency.3 3(sun.misc.ExtensionDependency)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.ExtensionDependency.3 java.io.File[] run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionDependency.4 4(sun.misc.ExtensionDependency, java.io.File)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.ExtensionInfo ExtensionInfo()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ExtensionInfo ExtensionInfo(java.lang.String, java.util.jar.Attributes) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ExtensionInfo ExtensionInfo(java.lang.String, java.util.jar.Attributes) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionInfo int compareExtensionVersion(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionInfo int compareExtensionVersion(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionInfo int convertToken(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ExtensionInfo int strictCompareExtensionVersion(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ExtensionInfo java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt FDBigInt(int[], int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.FDBigInt FDBigInt(sun.misc.FDBigInt) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt boolean dataInRangeIsZero(int, int, sun.misc.FDBigInt)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FDBigInt int cmp(sun.misc.FDBigInt) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt int cmp(sun.misc.FDBigInt)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FDBigInt int quoRemIteration(sun.misc.FDBigInt) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt sun.misc.FDBigInt add(sun.misc.FDBigInt) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt sun.misc.FDBigInt add(sun.misc.FDBigInt)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt sun.misc.FDBigInt mult(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt sun.misc.FDBigInt mult(sun.misc.FDBigInt) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt sun.misc.FDBigInt mult(sun.misc.FDBigInt)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt sun.misc.FDBigInt sub(sun.misc.FDBigInt) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FDBigInt sun.misc.FDBigInt sub(sun.misc.FDBigInt)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FIFOQueueEnumerator FIFOQueueEnumerator(sun.misc.Queue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FIFOQueueEnumerator FIFOQueueEnumerator(sun.misc.Queue)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.FIFOQueueEnumerator boolean hasMoreElements()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FileURLMapper FileURLMapper(java.net.URL)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.FloatConsts FloatConsts()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FloatConsts void &lt;clinit&gt;()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FloatingDecimal FloatingDecimal(boolean, int, char[], int, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.FloatingDecimal int countBits(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FloatingDecimal int getHexDigit(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FloatingDecimal java.lang.String stripLeadingZeros(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FloatingDecimal java.lang.String toJavaFormatString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FloatingDecimal java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FloatingDecimal sun.misc.FDBigInt constructPow52(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FloatingDecimal sun.misc.FDBigInt doubleToBigInt(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FloatingDecimal sun.misc.FDBigInt multPow52(sun.misc.FDBigInt, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.FloatingDecimal sun.misc.FloatingDecimal parseHexString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FloatingDecimal sun.misc.FloatingDecimal readJavaFormatString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FloatingDecimal sun.misc.FloatingDecimal readJavaFormatString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FloatingDecimal.1 java.lang.Object initialValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FormattedFloatingDecimal FormattedFloatingDecimal(boolean, int, char[], int, boolean, int, sun.misc.FormattedFloatingDecimal.Form)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.FormattedFloatingDecimal char[] applyPrecision(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FormattedFloatingDecimal int checkExponent(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FormattedFloatingDecimal int countBits(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FormattedFloatingDecimal int getExponent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FormattedFloatingDecimal int getExponentRounded()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FormattedFloatingDecimal java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FormattedFloatingDecimal sun.misc.FDBigInt constructPow52(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FormattedFloatingDecimal sun.misc.FDBigInt doubleToBigInt(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.FormattedFloatingDecimal sun.misc.FDBigInt multPow52(sun.misc.FDBigInt, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.FormattedFloatingDecimal.1 java.lang.Object initialValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FpUtils FpUtils()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FpUtils boolean isFinite(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FpUtils boolean isFinite(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FpUtils boolean isInfinite(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FpUtils boolean isInfinite(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FpUtils boolean isNaN(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FpUtils boolean isNaN(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FpUtils boolean isUnordered(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.FpUtils boolean isUnordered(float, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.GC GC()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.GC java.lang.Object access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.GC java.lang.Thread access$302(java.lang.Thread)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.GC long access$200()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.GC long currentLatencyTarget()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.GC sun.misc.GC.LatencyRequest requestLatency(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.GC.Daemon Daemon(java.lang.ThreadGroup) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.GC.Daemon Daemon(java.lang.ThreadGroup, sun.misc.GC.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.GC.Daemon Daemon(java.lang.ThreadGroup, sun.misc.GC.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.GC.Daemon.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.GC.LatencyLock LatencyLock()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.GC.LatencyLock LatencyLock(sun.misc.GC.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.GC.LatencyLock LatencyLock(sun.misc.GC.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.GC.LatencyRequest LatencyRequest(long, sun.misc.GC.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.GC.LatencyRequest int compareTo(sun.misc.GC.LatencyRequest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.GC.LatencyRequest int compareTo(sun.misc.GC.LatencyRequest)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.GC.LatencyRequest java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(byte[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(char[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int, byte[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int, byte[], int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int, char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int, char[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int, char[], int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int, int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int, int[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int, int[], int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Hashing int murmur3_32(int[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Hashing.Holder Holder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.HexDumpEncoder HexDumpEncoder()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.HexDumpEncoder int bytesPerAtom()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.HexDumpEncoder int bytesPerLine()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.HexDumpEncoder void encodeAtom(java.io.OutputStream, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.HexDumpEncoder void encodeAtom(java.io.OutputStream, byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.HexDumpEncoder void encodeBufferPrefix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.HexDumpEncoder void encodeLinePrefix(java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.HexDumpEncoder void encodeLineSuffix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.HexDumpEncoder void hexDigit(java.io.PrintStream, byte) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.IOUtils IOUtils()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.IoTrace IoTrace()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.IoTrace java.lang.Object fileReadBegin(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.IoTrace java.lang.Object fileReadBegin(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.IoTrace java.lang.Object fileWriteBegin(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.IoTrace java.lang.Object fileWriteBegin(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.IoTrace java.lang.Object socketReadBegin()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.IoTrace java.lang.Object socketWriteBegin()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.IoTrace void fileReadEnd(java.lang.Object, long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.IoTrace void fileReadEnd(java.lang.Object, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.IoTrace void fileWriteEnd(java.lang.Object, long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.IoTrace void fileWriteEnd(java.lang.Object, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.IoTrace void socketReadEnd(java.lang.Object, java.net.InetAddress, int, int, long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.IoTrace void socketReadEnd(java.lang.Object, java.net.InetAddress, int, int, long) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.IoTrace void socketReadEnd(java.lang.Object, java.net.InetAddress, int, int, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.IoTrace void socketWriteEnd(java.lang.Object, java.net.InetAddress, int, long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.IoTrace void socketWriteEnd(java.lang.Object, java.net.InetAddress, int, long) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.IoTrace void socketWriteEnd(java.lang.Object, java.net.InetAddress, int, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.JarFilter JarFilter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.JarFilter boolean accept(java.io.File, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.JarFilter boolean accept(java.io.File, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.JarIndex java.lang.String[] getJarFiles()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.JarIndex sun.misc.JarIndex getJarIndex(java.util.jar.JarFile)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.JarIndex sun.misc.JarIndex getJarIndex(java.util.jar.JarFile, sun.misc.MetaIndex) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.JarIndex sun.misc.JarIndex getJarIndex(java.util.jar.JarFile, sun.misc.MetaIndex)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.JarIndex void add(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.JarIndex void addToList(java.lang.String, java.lang.String, java.util.HashMap) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.JarIndex void merge(sun.misc.JarIndex, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.JarIndex void parseJars(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.JarIndex void read(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.JarIndex void write(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.LIFOQueueEnumerator LIFOQueueEnumerator(sun.misc.Queue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.LIFOQueueEnumerator LIFOQueueEnumerator(sun.misc.Queue)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.LIFOQueueEnumerator boolean hasMoreElements()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.LRUCache LRUCache(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.LRUCache void moveToFront(java.lang.Object[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher java.io.File[] access$200(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Launcher java.io.File[] access$200(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.Launcher java.io.File[] getClassPath(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Launcher java.io.File[] getClassPath(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.Launcher java.lang.ClassLoader getClassLoader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Launcher java.lang.String access$400()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Launcher java.net.URL getFileURL(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher java.net.URL getFileURL(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher java.net.URLStreamHandlerFactory access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Launcher java.net.URL[] access$300(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher java.net.URL[] pathToURLs(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher sun.misc.Launcher getLauncher()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Launcher sun.misc.URLClassPath getBootstrapClassPath()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader AppClassLoader(java.net.URL[], java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader java.lang.Class loadClass(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader java.security.AccessControlContext getContext(java.io.File[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader java.security.PermissionCollection getPermissions(java.security.CodeSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader java.security.PermissionCollection getPermissions(java.security.CodeSource)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader void appendToClassPathForInstrumentation(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader.1 1(java.lang.String, java.io.File[], java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.AppClassLoader.1 sun.misc.Launcher.AppClassLoader run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.BootClassPathHolder BootClassPathHolder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Launcher.BootClassPathHolder.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Launcher.ExtClassLoader ExtClassLoader(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.ExtClassLoader java.net.URL[] getExtURLs(java.io.File[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.ExtClassLoader java.net.URL[] getExtURLs(java.io.File[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.ExtClassLoader java.security.AccessControlContext getContext(java.io.File[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.ExtClassLoader.1 1(java.io.File[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.Launcher.ExtClassLoader.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.ExtClassLoader.1 sun.misc.Launcher.ExtClassLoader run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Launcher.Factory Factory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Launcher.Factory Factory(sun.misc.Launcher.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Launcher.Factory Factory(sun.misc.Launcher.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Launcher.Factory java.net.URLStreamHandler createURLStreamHandler(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Lock Lock()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.MessageUtils MessageUtils()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String subst(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String subst(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String subst(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String subst(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String subst(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String subst(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String subst(java.lang.String, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String subst(java.lang.String, java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String substProp(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String substProp(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String substProp(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String substProp(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String substProp(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils java.lang.String substProp(java.lang.String, java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MessageUtils void err(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.MessageUtils void out(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.MetaIndex MetaIndex(java.util.List&lt;java.lang.String&gt;, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.MetaIndex boolean mayContain(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.NativeSignalHandler NativeSignalHandler(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.NativeSignalHandler long getHandler()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.NativeSignalHandler void handle(sun.misc.Signal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.OSEnvironment OSEnvironment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.OSEnvironment void initialize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PathPermissions PathPermissions(java.io.File[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.PathPermissions java.io.File[] access$000(sun.misc.PathPermissions) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.PathPermissions java.io.File[] access$000(sun.misc.PathPermissions)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PathPermissions java.net.URL getCodeBase()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PathPermissions java.security.Permissions access$100(sun.misc.PathPermissions) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.PathPermissions java.security.Permissions access$100(sun.misc.PathPermissions)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PathPermissions java.util.Enumeration&lt;java.security.Permission&gt; elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.PathPermissions void add(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.PathPermissions.1 1(sun.misc.PathPermissions)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.Perf Perf()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Perf byte[] getBytes(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.Perf java.nio.ByteBuffer attach(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Perf java.nio.ByteBuffer attach(java.lang.String, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Perf sun.misc.Perf access$000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Perf void access$100(sun.misc.Perf, java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Perf.1 1(sun.misc.Perf, java.nio.ByteBuffer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.Perf.GetPerfAction GetPerfAction()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerfCounter java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.PerfCounter sun.misc.PerfCounter getD3DAvailable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerfCounter sun.misc.PerfCounter getFindClassTime()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerfCounter sun.misc.PerfCounter getFindClasses()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerfCounter sun.misc.PerfCounter getParentDelegationTime()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerfCounter sun.misc.PerfCounter getReadClassBytesTime()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerfCounter sun.misc.PerfCounter getZipFileCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerfCounter sun.misc.PerfCounter getZipFileOpenTime()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerfCounter sun.misc.PerfCounter newConstantPerfCounter(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.PerfCounter sun.misc.PerfCounter newPerfCounter(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.PerfCounter.CoreCounters CoreCounters()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerfCounter.WindowsClientCounters WindowsClientCounters()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerformanceLogger PerformanceLogger()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerformanceLogger boolean loggingEnabled()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerformanceLogger java.io.Writer access$102(java.io.Writer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.PerformanceLogger java.lang.String access$000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerformanceLogger.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerformanceLogger.TimeData TimeData(java.lang.String, long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.PerformanceLogger.TimeData java.lang.String getMessage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PerformanceLogger.TimeData long getTime()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.PostVMInitHook PostVMInitHook()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ProxyGenerator int access$508(sun.misc.ProxyGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator int access$700(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ProxyGenerator int access$700(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ProxyGenerator int getWordsPerType(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ProxyGenerator int getWordsPerType(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String access$000(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String access$000(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String access$600(java.lang.Class[], java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String access$600(java.lang.Class[], java.lang.Class)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String access$900(sun.misc.ProxyGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String access$900(sun.misc.ProxyGenerator)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String dotToSlash(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String dotToSlash(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getFieldType(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getFriendlyMethodSignature(java.lang.String, java.lang.Class[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getFriendlyMethodSignature(java.lang.String, java.lang.Class[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getFriendlyMethodSignature(java.lang.String, java.lang.Class[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getMethodDescriptor(java.lang.Class[], java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getMethodDescriptor(java.lang.Class[], java.lang.Class)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getParameterDescriptors(java.lang.Class[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.lang.String getParameterDescriptors(java.lang.Class[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.util.List access$1100(java.lang.Class[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator java.util.List&lt;java.lang.Class&lt;?&gt;&gt; computeUniqueCatchList(java.lang.Class&lt;?&gt;[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator sun.misc.ProxyGenerator.ConstantPool access$400(sun.misc.ProxyGenerator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator sun.misc.ProxyGenerator.ConstantPool access$400(sun.misc.ProxyGenerator)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ProxyGenerator sun.misc.ProxyGenerator.MethodInfo generateConstructor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1000(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1000(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1200(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1200(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1300(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1300(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1400(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1400(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1500(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1500(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1600(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1600(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1700(sun.misc.ProxyGenerator, java.lang.Class, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1700(sun.misc.ProxyGenerator, java.lang.Class, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1700(sun.misc.ProxyGenerator, java.lang.Class, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1800(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$1800(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$800(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void access$800(sun.misc.ProxyGenerator, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void addProxyMethod(java.lang.reflect.Method, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void checkReturnTypes(java.util.List&lt;sun.misc.ProxyGenerator.ProxyMethod&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void codeClassForName(java.lang.Class, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void codeClassForName(java.lang.Class, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void codeLocalLoadStore(int, int, int, java.io.DataOutputStream) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_aload(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_astore(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_dload(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_fload(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_iload(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_ipush(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_ldc(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void code_lload(int, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator void collectCompatibleTypes(java.lang.Class&lt;?&gt;[], java.lang.Class&lt;?&gt;[], java.util.List&lt;java.lang.Class&lt;?&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.1 1(java.lang.String, byte[])">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool ConstantPool(sun.misc.ProxyGenerator.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool short getUtf8(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool void setReadOnly()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.Entry Entry()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.Entry Entry(sun.misc.ProxyGenerator.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.Entry Entry(sun.misc.ProxyGenerator.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.IndirectEntry IndirectEntry(int, short)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.IndirectEntry IndirectEntry(int, short, short)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.IndirectEntry boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.IndirectEntry boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.IndirectEntry int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.IndirectEntry void write(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.ValueEntry ValueEntry(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ConstantPool.ValueEntry void write(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ExceptionTableEntry ExceptionTableEntry(short, short, short, short)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.ProxyGenerator.FieldInfo FieldInfo(sun.misc.ProxyGenerator, java.lang.String, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.FieldInfo void write(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.MethodInfo MethodInfo(sun.misc.ProxyGenerator, java.lang.String, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.MethodInfo void write(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.PrimitiveTypeInfo PrimitiveTypeInfo(java.lang.Class, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.PrimitiveTypeInfo PrimitiveTypeInfo(java.lang.Class, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.PrimitiveTypeInfo void add(java.lang.Class, java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.PrimitiveTypeInfo void add(java.lang.Class, java.lang.Class) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod ProxyMethod(sun.misc.ProxyGenerator, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod ProxyMethod(sun.misc.ProxyGenerator, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], java.lang.Class, sun.misc.ProxyGenerator.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod ProxyMethod(sun.misc.ProxyGenerator, java.lang.String, java.lang.Class[], java.lang.Class, java.lang.Class[], java.lang.Class, sun.misc.ProxyGenerator.1) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod sun.misc.ProxyGenerator.MethodInfo access$200(sun.misc.ProxyGenerator.ProxyMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void access$1900(sun.misc.ProxyGenerator.ProxyMethod, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void access$1900(sun.misc.ProxyGenerator.ProxyMethod, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void codeFieldInitialization(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void codeUnwrapReturnValue(java.lang.Class, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void codeUnwrapReturnValue(java.lang.Class, java.io.DataOutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void codeWrapArgument(java.lang.Class, int, java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.ProxyGenerator.ProxyMethod void codeWrapArgument(java.lang.Class, int, java.io.DataOutputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Queue Queue()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.Queue boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Queue java.util.Enumeration elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Queue java.util.Enumeration reverseElements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Queue void dump(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.QueueElement QueueElement(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.QueueElement java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Ref Ref()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.Regexp Regexp(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Regexp boolean matches(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpNode RegexpNode()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.RegexpNode RegexpNode(char, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.RegexpNode sun.misc.RegexpNode find(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.RegexpNode void print(java.io.PrintStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool java.lang.Object delete(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool java.lang.Object match(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool java.lang.Object matchAfter(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool java.lang.Object matchNext(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool void add(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool void add(java.lang.String, java.lang.Object, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool void print(java.io.PrintStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.RegexpPool void reset()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.Request Request()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.RequestProcessor RequestProcessor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Resource Resource()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Resource java.security.CodeSigner[] getCodeSigners()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Resource java.security.cert.Certificate[] getCertificates()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Resource java.util.jar.Manifest getManifest()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Service Service()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Service int parseLine(java.lang.Class, java.net.URL, java.io.BufferedReader, int, java.util.List, java.util.Set) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Service int parseLine(java.lang.Class, java.net.URL, java.io.BufferedReader, int, java.util.List, java.util.Set) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service java.util.Iterator installedProviders(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service java.util.Iterator providers(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service java.util.Iterator providers(java.lang.Class, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service void access$000(java.lang.Class, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service void access$000(java.lang.Class, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Service void access$200(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service void access$200(java.lang.Class, java.lang.String, java.lang.Throwable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Service void fail(java.lang.Class, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service void fail(java.lang.Class, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Service void fail(java.lang.Class, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service void fail(java.lang.Class, java.lang.String, java.lang.Throwable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Service void fail(java.lang.Class, java.net.URL, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Service void fail(java.lang.Class, java.net.URL, int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Service void fail(java.lang.Class, java.net.URL, int, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Service.LazyIterator LazyIterator(java.lang.Class, java.lang.ClassLoader, sun.misc.Service.1) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets SharedSecrets()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.SharedSecrets sun.misc.JavaLangAccess getJavaLangAccess()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.SharedSecrets sun.misc.JavaNetAccess getJavaNetAccess()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaAWTAccess(sun.misc.JavaAWTAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaIOAccess(sun.misc.JavaIOAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaIOFileDescriptorAccess(sun.misc.JavaIOFileDescriptorAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaLangAccess(sun.misc.JavaLangAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaNetAccess(sun.misc.JavaNetAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaNetHttpCookieAccess(sun.misc.JavaNetHttpCookieAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaNioAccess(sun.misc.JavaNioAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaSecurityAccess(sun.misc.JavaSecurityAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaSecurityProtectionDomainAccess(sun.misc.JavaSecurityProtectionDomainAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaUtilJarAccess(sun.misc.JavaUtilJarAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaUtilZipAccess(sun.misc.JavaUtilZipAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaUtilZipFileAccess(sun.misc.JavaUtilZipFileAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SharedSecrets void setJavaxSecurityAuthKerberosAccess(sun.misc.JavaxSecurityAuthKerberosAccess) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Signal boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Signal boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Signal int getNumber()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Signal int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Signal java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Signal java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Signal sun.misc.SignalHandler handle(sun.misc.Signal, sun.misc.SignalHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Signal void raise(sun.misc.Signal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Signal.1 1(sun.misc.SignalHandler, sun.misc.Signal)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.SoftCache boolean access$600(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache boolean valEquals(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache java.lang.Object fill(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache java.lang.Object fill(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.SoftCache java.lang.Object put(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache java.lang.ref.ReferenceQueue access$500(sun.misc.SoftCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache java.lang.ref.ReferenceQueue access$500(sun.misc.SoftCache)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.SoftCache java.util.Map access$700(sun.misc.SoftCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache java.util.Map access$700(sun.misc.SoftCache)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.SoftCache void access$800(sun.misc.SoftCache) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache.Entry Entry(sun.misc.SoftCache, java.util.Map.Entry, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.SoftCache.Entry boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache.Entry boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.SoftCache.Entry java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.SoftCache.Entry java.lang.Object setValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache.Entry java.util.Map.Entry access$900(sun.misc.SoftCache.Entry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache.Entry java.util.Map.Entry access$900(sun.misc.SoftCache.Entry)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.SoftCache.EntrySet EntrySet(sun.misc.SoftCache, sun.misc.SoftCache.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache.EntrySet boolean remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache.EntrySet boolean remove(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.SoftCache.EntrySet java.util.Iterator iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell ValueCell(java.lang.Object, java.lang.Object, java.lang.ref.ReferenceQueue) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell boolean access$000(sun.misc.SoftCache.ValueCell) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell boolean access$000(sun.misc.SoftCache.ValueCell)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell boolean isValid()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell java.lang.Object access$100(sun.misc.SoftCache.ValueCell) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell java.lang.Object access$100(sun.misc.SoftCache.ValueCell)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell java.lang.Object access$300(java.lang.Object, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell java.lang.Object strip(java.lang.Object, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell java.lang.Object strip(java.lang.Object, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.SoftCache.ValueCell sun.misc.SoftCache.ValueCell access$400(java.lang.Object, java.lang.Object, java.lang.ref.ReferenceQueue) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell sun.misc.SoftCache.ValueCell access$400(java.lang.Object, java.lang.Object, java.lang.ref.ReferenceQueue) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell sun.misc.SoftCache.ValueCell access$400(java.lang.Object, java.lang.Object, java.lang.ref.ReferenceQueue)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null;_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.SoftCache.ValueCell sun.misc.SoftCache.ValueCell create(java.lang.Object, java.lang.Object, java.lang.ref.ReferenceQueue) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell sun.misc.SoftCache.ValueCell create(java.lang.Object, java.lang.Object, java.lang.ref.ReferenceQueue) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.SoftCache.ValueCell sun.misc.SoftCache.ValueCell create(java.lang.Object, java.lang.Object, java.lang.ref.ReferenceQueue)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null;_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.Sort Sort()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Sort void quicksort(java.lang.Object[], sun.misc.Compare) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Sort void swap(java.lang.Object[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Timer boolean isStopped()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Timer java.lang.Thread getTimerThread()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Timer long getInterval()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Timer long getRemainingTime()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Timer long getStopTime()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Timer void setInterval(long)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.Timer void setRegular(boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.TimerThread boolean dequeue(sun.misc.Timer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.TimerThread void enqueue(sun.misc.Timer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.TimerThread void requeue(sun.misc.Timer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCDecoder int bytesPerAtom()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.UCDecoder int bytesPerLine()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.UCDecoder int decodeLinePrefix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCDecoder int decodeLinePrefix(java.io.PushbackInputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.UCDecoder void decodeAtom(java.io.PushbackInputStream, java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCDecoder void decodeAtom(java.io.PushbackInputStream, java.io.OutputStream, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCDecoder void decodeBufferPrefix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.UCDecoder void decodeBufferPrefix(java.io.PushbackInputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.UCDecoder void decodeBufferPrefix(java.io.PushbackInputStream, java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.UCDecoder void decodeLineSuffix(java.io.PushbackInputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.UCEncoder int bytesPerAtom()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.UCEncoder int bytesPerLine()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.UCEncoder void encodeAtom(java.io.OutputStream, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCEncoder void encodeAtom(java.io.OutputStream, byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCEncoder void encodeBufferPrefix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UCEncoder void encodeLinePrefix(java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath URLClassPath(java.net.URL[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath URLClassPath(java.net.URL[], java.net.URLStreamHandlerFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath URLClassPath(java.net.URL[], java.net.URLStreamHandlerFactory) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.URLClassPath boolean access$1000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath boolean access$300()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath java.net.URL checkURL(java.net.URL)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.URLClassPath java.net.URLStreamHandler access$100(sun.misc.URLClassPath) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath java.net.URLStreamHandler access$100(sun.misc.URLClassPath)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath java.net.URL[] pathToURLs(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath java.util.Enumeration&lt;java.net.URL&gt; findResources(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath java.util.Enumeration&lt;sun.misc.Resource&gt; getResources(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath sun.misc.URLClassPath.Loader access$000(sun.misc.URLClassPath, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath void push(java.net.URL[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.1 1(sun.misc.URLClassPath, java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.URLClassPath.2 2(sun.misc.URLClassPath, java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.URLClassPath.3 3(sun.misc.URLClassPath, java.net.URL)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.URLClassPath.3 sun.misc.URLClassPath.Loader run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.FileLoader FileLoader(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.FileLoader sun.misc.Resource getResource(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.URLClassPath.FileLoader.1 1(sun.misc.URLClassPath.FileLoader, java.lang.String, java.net.URL, java.io.File)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.URLClassPath.FileLoader.1 java.io.InputStream getInputStream()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.FileLoader.1 java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.FileLoader.1 java.net.URL getURL()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader JarLoader(java.net.URL, java.net.URLStreamHandler, java.util.HashMap&lt;java.lang.String,sun.misc.URLClassPath.Loader&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader boolean isOptimizable(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader boolean isOptimizable(java.net.URL)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader boolean validIndex(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.net.URL access$400(sun.misc.URLClassPath.JarLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.net.URL access$400(sun.misc.URLClassPath.JarLoader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.net.URLStreamHandler access$1100(sun.misc.URLClassPath.JarLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.net.URLStreamHandler access$1100(sun.misc.URLClassPath.JarLoader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.net.URL[] parseClassPath(java.net.URL, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.HashMap access$900(sun.misc.URLClassPath.JarLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.HashMap access$900(sun.misc.URLClassPath.JarLoader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile access$500(sun.misc.URLClassPath.JarLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile access$500(sun.misc.URLClassPath.JarLoader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile access$502(sun.misc.URLClassPath.JarLoader, java.util.jar.JarFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile access$502(sun.misc.URLClassPath.JarLoader, java.util.jar.JarFile)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile access$600(sun.misc.URLClassPath.JarLoader, java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile access$600(sun.misc.URLClassPath.JarLoader, java.net.URL) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile checkJar(java.util.jar.JarFile)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile getJarFile()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader java.util.jar.JarFile getJarFile(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader sun.misc.JarIndex access$700(sun.misc.URLClassPath.JarLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader sun.misc.JarIndex access$700(sun.misc.URLClassPath.JarLoader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader sun.misc.JarIndex access$702(sun.misc.URLClassPath.JarLoader, sun.misc.JarIndex) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader sun.misc.JarIndex access$702(sun.misc.URLClassPath.JarLoader, sun.misc.JarIndex)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader sun.misc.MetaIndex access$800(sun.misc.URLClassPath.JarLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader sun.misc.MetaIndex access$800(sun.misc.URLClassPath.JarLoader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader sun.misc.Resource getResource(java.lang.String, boolean, java.util.Set&lt;java.lang.String&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader.1 1(sun.misc.URLClassPath.JarLoader)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader.2 2(sun.misc.URLClassPath.JarLoader, java.lang.String, java.net.URL, java.util.jar.JarEntry)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader.2 java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader.2 java.net.URL getCodeSourceURL()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader.2 java.net.URL getURL()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader.3 3(sun.misc.URLClassPath.JarLoader, java.net.URL)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.URLClassPath.JarLoader.3 sun.misc.URLClassPath.JarLoader run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader Loader(java.net.URL)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader java.net.URL access$200(sun.misc.URLClassPath.Loader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader java.net.URL access$200(sun.misc.URLClassPath.Loader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader java.net.URL findResource(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader java.net.URL getBaseURL()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader java.net.URL[] getClassPath()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader sun.misc.Resource getResource(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader.1 1(sun.misc.URLClassPath.Loader, java.lang.String, java.net.URL, java.net.URLConnection)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader.1 java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader.1 java.net.URL getCodeSourceURL()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.URLClassPath.Loader.1 java.net.URL getURL()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.UUDecoder UUDecoder()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.UUDecoder int bytesPerAtom()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.UUDecoder int bytesPerLine()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.UUDecoder int decodeLinePrefix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUDecoder int decodeLinePrefix(java.io.PushbackInputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.UUDecoder void decodeAtom(java.io.PushbackInputStream, java.io.OutputStream, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUDecoder void decodeBufferPrefix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUDecoder void decodeBufferPrefix(java.io.PushbackInputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.UUDecoder void decodeBufferSuffix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUDecoder void decodeBufferSuffix(java.io.PushbackInputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.UUDecoder void decodeLineSuffix(java.io.PushbackInputStream, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUDecoder void decodeLineSuffix(java.io.PushbackInputStream, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.UUEncoder UUEncoder()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.UUEncoder UUEncoder(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.UUEncoder UUEncoder(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="sun.misc.UUEncoder int bytesPerAtom()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.UUEncoder int bytesPerLine()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.UUEncoder void encodeAtom(java.io.OutputStream, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUEncoder void encodeAtom(java.io.OutputStream, byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUEncoder void encodeBufferPrefix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUEncoder void encodeBufferSuffix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.UUEncoder void encodeLinePrefix(java.io.OutputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.UUEncoder void encodeLineSuffix(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.Unsafe Unsafe()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Unsafe int fieldOffset(java.lang.reflect.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Unsafe java.lang.Object staticFieldBase(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.VM VM()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM boolean allowArraySyntax()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM boolean allowGetCallerClass()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM boolean allowThreadSuspension(java.lang.ThreadGroup, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.VM boolean isBooted()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM boolean isDirectMemoryPageAligned()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM boolean threadsSuspended()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM int getFinalRefCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM int getPeakFinalRefCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM int getState()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM java.lang.Thread.State toThreadState(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM long maxDirectMemory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM void asChange(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM void asChange_otherthread(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM void initializeOSEnvironment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM void registerVMNotification(sun.misc.VMNotification) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.misc.VM void registerVMNotification(sun.misc.VMNotification)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VM void saveAndRemoveProperties(java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.VM void unsuspendSomeThreads()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VMSupport VMSupport()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.VMSupport boolean isClassPathAttributePresent(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.VMSupport byte[] serializePropertiesToByteArray(java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.misc.Version Version()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.misc.Version void print(java.io.PrintStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
