<root>
  <item name="sun.java2d.pipe.AAShapePipe java.awt.geom.Rectangle2D computeBBox(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AAShapePipe void draw(sun.java2d.SunGraphics2D, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AAShapePipe void drawParallelogram(sun.java2d.SunGraphics2D, double, double, double, double, double, double, double, double, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AAShapePipe void dropAlphaTile(byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.AAShapePipe void fillParallelogram(sun.java2d.SunGraphics2D, double, double, double, double, double, double, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AAShapePipe void renderPath(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.BasicStroke) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AAShapePipe void renderTiles(sun.java2d.SunGraphics2D, java.awt.Shape, sun.java2d.pipe.AATileGenerator, int[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AAShapePipe void renderTiles(sun.java2d.SunGraphics2D, java.awt.Shape, sun.java2d.pipe.AATileGenerator, int[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AATextRenderer AATextRenderer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.AATextRenderer void drawGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe AlphaColorPipe()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe boolean needTile(java.lang.Object, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe boolean needTile(java.lang.Object, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_-&gt;true;null,_,_,_,_-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_-&gt;!null;null,_,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe void drawParallelogram(sun.java2d.SunGraphics2D, double, double, double, double, double, double, double, double, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe void endSequence(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe void endSequence(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe void fillParallelogram(sun.java2d.SunGraphics2D, double, double, double, double, double, double, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe void renderPathTile(java.lang.Object, byte[], int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe void skipTile(java.lang.Object, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.AlphaColorPipe void skipTile(java.lang.Object, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe AlphaPaintPipe()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe boolean needTile(java.lang.Object, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe boolean needTile(java.lang.Object, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_-&gt;true;null,_,_,_,_-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe void endSequence(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe void renderPathTile(java.lang.Object, byte[], int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe void renderPathTile(java.lang.Object, byte[], int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe void skipTile(java.lang.Object, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe void skipTile(java.lang.Object, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe.TileContext TileContext(sun.java2d.SunGraphics2D, java.awt.PaintContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.AlphaPaintPipe.TileContext TileContext(sun.java2d.SunGraphics2D, java.awt.PaintContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps BufferedBufImgOps()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps boolean isConvolveOpValid(java.awt.image.ConvolveOp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps boolean isLookupOpValid(java.awt.image.LookupOp, java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps boolean isLookupOpValid(java.awt.image.LookupOp, java.awt.image.BufferedImage) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps boolean isRescaleOpValid(java.awt.image.RescaleOp, java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps boolean isRescaleOpValid(java.awt.image.RescaleOp, java.awt.image.BufferedImage) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void disableBufImgOp(sun.java2d.pipe.RenderQueue, java.awt.image.BufferedImageOp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void disableBufImgOp(sun.java2d.pipe.RenderQueue, java.awt.image.BufferedImageOp) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void disableConvolveOp(sun.java2d.pipe.RenderQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void disableLookupOp(sun.java2d.pipe.RenderQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void disableRescaleOp(sun.java2d.pipe.RenderQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableBufImgOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.BufferedImageOp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableBufImgOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.BufferedImageOp) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableBufImgOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.BufferedImageOp) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableConvolveOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.ConvolveOp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableConvolveOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.ConvolveOp) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableConvolveOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.ConvolveOp) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableLookupOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.LookupOp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableLookupOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.LookupOp) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableLookupOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.LookupOp) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableLookupOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.LookupOp) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableRescaleOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.RescaleOp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableRescaleOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.RescaleOp) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableRescaleOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.RescaleOp) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedBufImgOps void enableRescaleOp(sun.java2d.pipe.RenderQueue, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.RescaleOp) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedContext BufferedContext(sun.java2d.pipe.RenderQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedContext void setClip(sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedContext void setComposite(java.awt.Composite, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedContext void setSurfaces(sun.java2d.pipe.hw.AccelSurface, sun.java2d.pipe.hw.AccelSurface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedContext void setSurfaces(sun.java2d.pipe.hw.AccelSurface, sun.java2d.pipe.hw.AccelSurface) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedContext void setTransform(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedContext void validate(sun.java2d.pipe.hw.AccelSurface, sun.java2d.pipe.hw.AccelSurface, sun.java2d.pipe.Region, java.awt.Composite, java.awt.geom.AffineTransform, java.awt.Paint, sun.java2d.SunGraphics2D, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedContext void validate(sun.java2d.pipe.hw.AccelSurface, sun.java2d.pipe.hw.AccelSurface, sun.java2d.pipe.Region, java.awt.Composite, java.awt.geom.AffineTransform, java.awt.Paint, sun.java2d.SunGraphics2D, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedContext void validate(sun.java2d.pipe.hw.AccelSurface, sun.java2d.pipe.hw.AccelSurface, sun.java2d.pipe.Region, java.awt.Composite, java.awt.geom.AffineTransform, java.awt.Paint, sun.java2d.SunGraphics2D, int) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.BufferedContext void validateContext(sun.java2d.pipe.hw.AccelSurface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedContext void validateContext(sun.java2d.pipe.hw.AccelSurface, sun.java2d.pipe.hw.AccelSurface, sun.java2d.pipe.Region, java.awt.Composite, java.awt.geom.AffineTransform, java.awt.Paint, sun.java2d.SunGraphics2D, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedMaskBlit void MaskBlit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int, byte[], int, int) 10">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.BufferedMaskFill void MaskFill(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, java.awt.Composite, int, int, int, int, byte[], int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.BufferedMaskFill void MaskFill(sun.java2d.SunGraphics2D, sun.java2d.SurfaceData, java.awt.Composite, int, int, int, int, byte[], int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedOpCodes BufferedOpCodes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints BufferedPaints()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints int colorToIntArgbPrePixel(java.awt.Color, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints int[] convertToIntArgbPrePixels(java.awt.Color[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void resetPaint(sun.java2d.pipe.RenderQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setColor(sun.java2d.pipe.RenderQueue, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setGradientPaint(sun.java2d.pipe.RenderQueue, java.awt.geom.AffineTransform, java.awt.Color, java.awt.Color, java.awt.geom.Point2D, java.awt.geom.Point2D, boolean, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setGradientPaint(sun.java2d.pipe.RenderQueue, java.awt.geom.AffineTransform, java.awt.Color, java.awt.Color, java.awt.geom.Point2D, java.awt.geom.Point2D, boolean, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setGradientPaint(sun.java2d.pipe.RenderQueue, java.awt.geom.AffineTransform, java.awt.Color, java.awt.Color, java.awt.geom.Point2D, java.awt.geom.Point2D, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setGradientPaint(sun.java2d.pipe.RenderQueue, java.awt.geom.AffineTransform, java.awt.Color, java.awt.Color, java.awt.geom.Point2D, java.awt.geom.Point2D, boolean, boolean) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setGradientPaint(sun.java2d.pipe.RenderQueue, java.awt.geom.AffineTransform, java.awt.Color, java.awt.Color, java.awt.geom.Point2D, java.awt.geom.Point2D, boolean, boolean) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setGradientPaint(sun.java2d.pipe.RenderQueue, java.awt.geom.AffineTransform, java.awt.Color, java.awt.Color, java.awt.geom.Point2D, java.awt.geom.Point2D, boolean, boolean) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setGradientPaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.GradientPaint, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setGradientPaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.GradientPaint, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setGradientPaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.GradientPaint, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setLinearGradientPaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.LinearGradientPaint, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setLinearGradientPaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.LinearGradientPaint, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setLinearGradientPaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.LinearGradientPaint, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setPaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.Paint, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setRadialGradientPaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.RadialGradientPaint, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setRadialGradientPaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.RadialGradientPaint, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setRadialGradientPaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.RadialGradientPaint, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setTexturePaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.TexturePaint, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setTexturePaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.TexturePaint, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedPaints void setTexturePaint(sun.java2d.pipe.RenderQueue, sun.java2d.SunGraphics2D, java.awt.TexturePaint, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe BufferedRenderPipe(sun.java2d.pipe.RenderQueue) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe sun.java2d.pipe.ParallelogramPipe getAAParallelogramPipe()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void draw(sun.java2d.SunGraphics2D, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void drawLine(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void drawPath(sun.java2d.SunGraphics2D, java.awt.geom.Path2D.Float, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void drawPoly(sun.java2d.SunGraphics2D, int[], int[], int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void drawPoly(sun.java2d.SunGraphics2D, int[], int[], int, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void drawRect(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void fill(sun.java2d.SunGraphics2D, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void fill(sun.java2d.SunGraphics2D, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void fillPath(sun.java2d.SunGraphics2D, java.awt.geom.Path2D.Float, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void fillPolygon(sun.java2d.SunGraphics2D, int[], int[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void fillPolygon(sun.java2d.SunGraphics2D, int[], int[], int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void fillRect(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe void fillSpans(sun.java2d.SunGraphics2D, sun.java2d.pipe.SpanIterator, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe.AAParallelogramPipe AAParallelogramPipe(sun.java2d.pipe.BufferedRenderPipe, sun.java2d.pipe.BufferedRenderPipe.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.BufferedRenderPipe.BufferedDrawHandler void validate(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedTextPipe int createPackedParams(sun.java2d.SunGraphics2D, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedTextPipe int createPackedParams(sun.java2d.SunGraphics2D, sun.font.GlyphList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedTextPipe int createPackedParams(sun.java2d.SunGraphics2D, sun.font.GlyphList)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.BufferedTextPipe void drawGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedTextPipe void drawGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.BufferedTextPipe void enqueueGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage DrawImage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean closeToInteger(int, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean imageReady(sun.awt.image.ToolkitImage, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean imageReady(sun.awt.image.ToolkitImage, java.awt.image.ImageObserver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean isBgOperation(sun.java2d.SurfaceData, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean isBgOperation(sun.java2d.SurfaceData, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean isBgOperation(sun.java2d.SurfaceData, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean isSimpleTranslate(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean isSimpleTranslate(sun.java2d.SunGraphics2D)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean renderImageCopy(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.Color, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean renderImageScale(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.Color, int, int, int, int, int, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_,_,_,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_,_,_,_,_,_-&gt;true;_,!null,_,_,_,_,_,_,_,_,_-&gt;true;_,_,_,_,_,_,_,_,_,_,!null-&gt;true;_,_,_,_,_,_,_,_,_,_,null-&gt;true;_,null,_,_,_,_,_,_,_,_,_-&gt;true;null,_,_,_,_,_,_,_,_,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_,_-&gt;true;_,!null,_,_,_,_,_-&gt;true;_,_,_,_,_,_,!null-&gt;true;_,_,_,_,_,_,null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean scaleSurfaceData(sun.java2d.SunGraphics2D, sun.java2d.pipe.Region, sun.java2d.SurfaceData, sun.java2d.SurfaceData, sun.java2d.loops.SurfaceType, sun.java2d.loops.SurfaceType, int, int, int, int, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean transformImage(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_,_-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.DrawImage boolean tryCopyOrScale(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color, int, double[]) 8">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage java.awt.image.BufferedImage getBufferedImage(java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage java.awt.image.BufferedImage makeBufferedImage(java.awt.Image, java.awt.Color, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage java.awt.image.BufferedImage makeBufferedImage(java.awt.Image, java.awt.Color, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage java.awt.image.ColorModel getTransformColorModel(sun.java2d.SunGraphics2D, java.awt.image.BufferedImage, java.awt.geom.AffineTransform) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage java.awt.image.ColorModel getTransformColorModel(sun.java2d.SunGraphics2D, java.awt.image.BufferedImage, java.awt.geom.AffineTransform) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage void renderImageXform(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, int, int, int, int, int, java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage void transformImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, java.awt.geom.AffineTransform, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage void transformImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, java.awt.geom.AffineTransform, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage void transformImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, java.awt.geom.AffineTransform, int) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage void transformImage(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, int, int, int, int, int, java.awt.Color) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.DrawImage void transformImage(sun.java2d.SunGraphics2D, java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.GeneralCompositePipe GeneralCompositePipe()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.GeneralCompositePipe boolean needTile(java.lang.Object, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.GeneralCompositePipe boolean needTile(java.lang.Object, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_-&gt;true;null,_,_,_,_-&gt;true&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.GeneralCompositePipe java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.GeneralCompositePipe java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.GeneralCompositePipe java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.GeneralCompositePipe java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.GeneralCompositePipe void endSequence(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.GeneralCompositePipe void renderPathTile(java.lang.Object, byte[], int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.GeneralCompositePipe void renderPathTile(java.lang.Object, byte[], int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.GeneralCompositePipe void skipTile(java.lang.Object, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.GeneralCompositePipe void skipTile(java.lang.Object, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.GlyphListLoopPipe GlyphListLoopPipe()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.GlyphListPipe GlyphListPipe()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.GlyphListPipe void drawChars(sun.java2d.SunGraphics2D, char[], int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.GlyphListPipe void drawGlyphVector(sun.java2d.SunGraphics2D, java.awt.font.GlyphVector, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.GlyphListPipe void drawGlyphVector(sun.java2d.SunGraphics2D, java.awt.font.GlyphVector, float, float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.GlyphListPipe void drawString(sun.java2d.SunGraphics2D, java.lang.String, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LCDTextRenderer LCDTextRenderer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.LCDTextRenderer void drawGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe LoopPipe()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe sun.java2d.pipe.ShapeSpanIterator getFillSSI(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe sun.java2d.pipe.ShapeSpanIterator getFillSSI(sun.java2d.SunGraphics2D)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe sun.java2d.pipe.ShapeSpanIterator getStrokeSpans(sun.java2d.SunGraphics2D, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe sun.java2d.pipe.ShapeSpanIterator getStrokeSpans(sun.java2d.SunGraphics2D, java.awt.Shape)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void draw(sun.java2d.SunGraphics2D, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void drawArc(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void drawLine(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void drawOval(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void drawParallelogram(sun.java2d.SunGraphics2D, double, double, double, double, double, double, double, double, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void drawPolygon(sun.java2d.SunGraphics2D, int[], int[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void drawPolyline(sun.java2d.SunGraphics2D, int[], int[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void drawRect(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void drawRoundRect(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void fill(sun.java2d.SunGraphics2D, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void fill(sun.java2d.SunGraphics2D, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void fillArc(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void fillOval(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void fillParallelogram(sun.java2d.SunGraphics2D, double, double, double, double, double, double, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void fillPolygon(sun.java2d.SunGraphics2D, int[], int[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void fillRect(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void fillRoundRect(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.LoopPipe void fillSpans(sun.java2d.SunGraphics2D, sun.java2d.pipe.SpanIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe NullPipe()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 8">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 9">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_,_,_,_,_-&gt;false;_,!null,_,_,_,_,_,_,_,_-&gt;false;_,_,_,_,_,_,_,_,!null,_-&gt;false;_,_,_,_,_,_,_,_,_,!null-&gt;false;_,_,_,_,_,_,_,_,_,null-&gt;false;_,_,_,_,_,_,_,_,null,_-&gt;false;_,null,_,_,_,_,_,_,_,_-&gt;false;null,_,_,_,_,_,_,_,_,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_-&gt;false;_,!null,_,_,_,_-&gt;false;_,_,_,_,!null,_-&gt;false;_,_,_,_,_,!null-&gt;false;_,_,_,_,_,null-&gt;false;_,_,_,_,null,_-&gt;false;_,null,_,_,_,_-&gt;false;null,_,_,_,_,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 10">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 11">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_,_,_,_,_,_,_-&gt;false;_,!null,_,_,_,_,_,_,_,_,_,_-&gt;false;_,_,_,_,_,_,_,_,_,_,!null,_-&gt;false;_,_,_,_,_,_,_,_,_,_,_,!null-&gt;false;_,_,_,_,_,_,_,_,_,_,_,null-&gt;false;_,_,_,_,_,_,_,_,_,_,null,_-&gt;false;_,null,_,_,_,_,_,_,_,_,_,_-&gt;false;null,_,_,_,_,_,_,_,_,_,_,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_,_,_-&gt;false;_,!null,_,_,_,_,_,_-&gt;false;_,_,_,_,_,_,!null,_-&gt;false;_,_,_,_,_,_,_,!null-&gt;false;_,_,_,_,_,_,_,null-&gt;false;_,_,_,_,_,_,null,_-&gt;false;_,null,_,_,_,_,_,_-&gt;false;null,_,_,_,_,_,_,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean transformImage(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean transformImage(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean transformImage(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean transformImage(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe boolean transformImage(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_-&gt;false;_,!null,_,_-&gt;false;_,_,!null,_-&gt;false;_,_,_,!null-&gt;false;_,_,_,null-&gt;false;_,_,null,_-&gt;false;_,null,_,_-&gt;false;null,_,_,_-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void draw(sun.java2d.SunGraphics2D, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void draw(sun.java2d.SunGraphics2D, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void draw(sun.java2d.SunGraphics2D, java.awt.Shape)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawArc(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawArc(sun.java2d.SunGraphics2D, int, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawChars(sun.java2d.SunGraphics2D, char[], int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawChars(sun.java2d.SunGraphics2D, char[], int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawChars(sun.java2d.SunGraphics2D, char[], int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawGlyphVector(sun.java2d.SunGraphics2D, java.awt.font.GlyphVector, float, float) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawGlyphVector(sun.java2d.SunGraphics2D, java.awt.font.GlyphVector, float, float) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawGlyphVector(sun.java2d.SunGraphics2D, java.awt.font.GlyphVector, float, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawLine(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawLine(sun.java2d.SunGraphics2D, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawOval(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawOval(sun.java2d.SunGraphics2D, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawPolygon(sun.java2d.SunGraphics2D, int[], int[], int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawPolygon(sun.java2d.SunGraphics2D, int[], int[], int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawPolygon(sun.java2d.SunGraphics2D, int[], int[], int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawPolygon(sun.java2d.SunGraphics2D, int[], int[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawPolyline(sun.java2d.SunGraphics2D, int[], int[], int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawPolyline(sun.java2d.SunGraphics2D, int[], int[], int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawPolyline(sun.java2d.SunGraphics2D, int[], int[], int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawPolyline(sun.java2d.SunGraphics2D, int[], int[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawRect(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawRect(sun.java2d.SunGraphics2D, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawRoundRect(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawRoundRect(sun.java2d.SunGraphics2D, int, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawString(sun.java2d.SunGraphics2D, java.lang.String, double, double) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawString(sun.java2d.SunGraphics2D, java.lang.String, double, double) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void drawString(sun.java2d.SunGraphics2D, java.lang.String, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fill(sun.java2d.SunGraphics2D, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fill(sun.java2d.SunGraphics2D, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fill(sun.java2d.SunGraphics2D, java.awt.Shape)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fillArc(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fillArc(sun.java2d.SunGraphics2D, int, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fillOval(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fillOval(sun.java2d.SunGraphics2D, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fillPolygon(sun.java2d.SunGraphics2D, int[], int[], int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fillPolygon(sun.java2d.SunGraphics2D, int[], int[], int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fillPolygon(sun.java2d.SunGraphics2D, int[], int[], int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fillPolygon(sun.java2d.SunGraphics2D, int[], int[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fillRect(sun.java2d.SunGraphics2D, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fillRect(sun.java2d.SunGraphics2D, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fillRoundRect(sun.java2d.SunGraphics2D, int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void fillRoundRect(sun.java2d.SunGraphics2D, int, int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void transformImage(sun.java2d.SunGraphics2D, java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void transformImage(sun.java2d.SunGraphics2D, java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void transformImage(sun.java2d.SunGraphics2D, java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.NullPipe void transformImage(sun.java2d.SunGraphics2D, java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.OutlineTextRenderer OutlineTextRenderer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.OutlineTextRenderer void drawChars(sun.java2d.SunGraphics2D, char[], int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.OutlineTextRenderer void drawGlyphVector(sun.java2d.SunGraphics2D, java.awt.font.GlyphVector, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.OutlineTextRenderer void drawGlyphVector(sun.java2d.SunGraphics2D, java.awt.font.GlyphVector, float, float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.PixelToParallelogramConverter boolean drawGeneralLine(sun.java2d.SunGraphics2D, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.PixelToParallelogramConverter void draw(sun.java2d.SunGraphics2D, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.PixelToParallelogramConverter void drawRectangle(sun.java2d.SunGraphics2D, double, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.PixelToParallelogramConverter void fillRectangle(sun.java2d.SunGraphics2D, double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.PixelToShapeConverter java.awt.Shape makePoly(int[], int[], int, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_,_-&gt;!null;null,_,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.Region boolean contains(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region boolean encompasses(sun.java2d.pipe.Region)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region boolean encompassesXYXY(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.Region boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.Region boolean intersectsQuickCheck(sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region boolean intersectsQuickCheck(sun.java2d.pipe.Region)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region boolean intersectsQuickCheckXYXY(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region boolean isInsideQuickCheck(sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region boolean isInsideQuickCheck(sun.java2d.pipe.Region)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region boolean isInsideXYXY(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region boolean isRectangular()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region int clipAdd(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region int dimAdd(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region int getHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region int getHiX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region int getHiY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region int getLoX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region int getLoY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region int getWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getBoundsIntersection(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getBoundsIntersection(sun.java2d.pipe.Region)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getBoundsIntersectionXYXY(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getDifference(sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getExclusiveOr(sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getExclusiveOr(sun.java2d.pipe.Region)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getInstance(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getInstance(int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getInstance(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getInstance(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getInstance(java.awt.Shape, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getInstance(sun.java2d.pipe.Region, boolean, java.awt.Shape, java.awt.geom.AffineTransform) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getInstance(sun.java2d.pipe.Region, java.awt.Shape, java.awt.geom.AffineTransform) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getInstanceXYWH(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getInstanceXYXY(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getIntersection(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getIntersection(sun.java2d.pipe.Region)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getIntersectionXYXY(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getUnion(sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.Region getUnion(sun.java2d.pipe.Region)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.RegionIterator getIterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.SpanIterator filter(sun.java2d.pipe.SpanIterator)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.SpanIterator getSpanIterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region sun.java2d.pipe.SpanIterator getSpanIterator(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region void appendSpan(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region void appendSpans(sun.java2d.pipe.SpanIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region void clipBoxToBounds(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region void endRow(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region void filterSpans(sun.java2d.pipe.Region, sun.java2d.pipe.Region, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region void filterSpans(sun.java2d.pipe.Region, sun.java2d.pipe.Region, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region void getBounds(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region void setOutputArea(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region void setOutputArea(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.Region.ImmutableRegion void appendSpans(sun.java2d.pipe.SpanIterator) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.Region.ImmutableRegion void appendSpans(sun.java2d.pipe.SpanIterator)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region.ImmutableRegion void setOutputArea(int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.Region.ImmutableRegion void setOutputArea(int[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region.ImmutableRegion void setOutputArea(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.Region.ImmutableRegion void setOutputArea(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region.ImmutableRegion void setOutputAreaXYWH(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.Region.ImmutableRegion void setOutputAreaXYXY(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.RegionClipSpanIterator RegionClipSpanIterator(sun.java2d.pipe.Region, sun.java2d.pipe.SpanIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RegionClipSpanIterator boolean nextSpan(int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.RegionClipSpanIterator long getNativeIterator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.RegionClipSpanIterator void finalize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.RegionClipSpanIterator void getPathBox(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RegionIterator boolean nextXBand(int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.RegionIterator boolean nextYRange(int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.RegionIterator sun.java2d.pipe.RegionIterator createCopy()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RegionIterator void copyStateFrom(sun.java2d.pipe.RegionIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RegionSpanIterator RegionSpanIterator(sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RegionSpanIterator long getNativeIterator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.RegionSpanIterator void getPathBox(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer int capacity()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer int position()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer int remaining()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer long getAddress()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer allocate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer put(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer put(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer put(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer put(float[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer put(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer put(int[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer put(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer put(long[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer put(short[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer put(short[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer putByte(byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer putDouble(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer putFloat(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer putInt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer putInt(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer putLong(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer putShort(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderBuffer sun.java2d.pipe.RenderBuffer skip(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderQueue sun.java2d.pipe.RenderBuffer getBuffer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.RenderingEngine RenderingEngine()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.RenderingEngine void feedConsumer(java.awt.geom.PathIterator, sun.awt.geom.PathConsumer2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderingEngine.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.RenderingEngine.Tracer Tracer(sun.java2d.pipe.RenderingEngine) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderingEngine.Tracer java.awt.Shape createStrokedShape(java.awt.Shape, float, int, int, float, float[], float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderingEngine.Tracer sun.java2d.pipe.AATileGenerator getAATileGenerator(java.awt.Shape, java.awt.geom.AffineTransform, sun.java2d.pipe.Region, java.awt.BasicStroke, boolean, boolean, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderingEngine.Tracer void strokeTo(java.awt.Shape, java.awt.geom.AffineTransform, java.awt.BasicStroke, boolean, boolean, boolean, sun.awt.geom.PathConsumer2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.RenderingEngine.Tracer void strokeTo(java.awt.Shape, java.awt.geom.AffineTransform, java.awt.BasicStroke, boolean, boolean, boolean, sun.awt.geom.PathConsumer2D) 6">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.ShapeSpanIterator void appendPath(java.awt.geom.PathIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.ShapeSpanIterator void setOutputArea(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.ShapeSpanIterator void setOutputArea(sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SolidTextRenderer SolidTextRenderer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.SolidTextRenderer void drawGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanClipRenderer boolean needTile(java.lang.Object, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanClipRenderer java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanClipRenderer java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanClipRenderer void endSequence(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanClipRenderer void renderPathTile(java.lang.Object, byte[], int, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanClipRenderer void renderPathTile(java.lang.Object, byte[], int, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.SpanClipRenderer void renderPathTile(java.lang.Object, byte[], int, int, int, int, int, int, sun.java2d.pipe.ShapeSpanIterator) 8">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.SpanClipRenderer void skipTile(java.lang.Object, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer SpanShapeRenderer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer void draw(sun.java2d.SunGraphics2D, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer void fill(sun.java2d.SunGraphics2D, java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer void fill(sun.java2d.SunGraphics2D, java.awt.Shape) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer void renderRect(sun.java2d.SunGraphics2D, java.awt.geom.Rectangle2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer void renderSpans(sun.java2d.SunGraphics2D, sun.java2d.pipe.Region, java.awt.Shape, sun.java2d.pipe.ShapeSpanIterator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer void renderSpans(sun.java2d.SunGraphics2D, sun.java2d.pipe.Region, java.awt.Shape, sun.java2d.pipe.ShapeSpanIterator) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer void spanClipLoop(java.lang.Object, sun.java2d.pipe.SpanIterator, sun.java2d.pipe.Region, int[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer.Simple Simple()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer.Simple java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer.Simple java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer.Simple java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer.Simple java.lang.Object startSequence(sun.java2d.SunGraphics2D, java.awt.Shape, java.awt.Rectangle, int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_-&gt;!null;null,_,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer.Simple void endSequence(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer.Simple void endSequence(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.SpanShapeRenderer.Simple void renderBox(java.lang.Object, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.TextRenderer void drawGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.TextRenderer void drawGlyphList(sun.java2d.SunGraphics2D, sun.font.GlyphList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.ValidatePipe ValidatePipe()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.java2d.pipe.ValidatePipe boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.ValidatePipe boolean copyImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.ValidatePipe boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_,_,_,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.ValidatePipe boolean scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.ValidatePipe boolean transformImage(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.java2d.pipe.ValidatePipe boolean validate(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.java2d.pipe.ValidatePipe boolean validate(sun.java2d.SunGraphics2D)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;true&quot;"/>
    </annotation>
  </item>
</root>
