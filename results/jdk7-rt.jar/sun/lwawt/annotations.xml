<root>
  <item name="sun.lwawt.LWButtonPeer boolean isFocusable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWButtonPeer javax.swing.JButton createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWButtonPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWButtonPeer void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWCanvasPeer java.awt.GraphicsConfiguration getAppropriateGraphicsConfiguration(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWCanvasPeer void createBuffers(int, java.awt.BufferCapabilities) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWCanvasPeer void flip(int, int, int, int, java.awt.BufferCapabilities.FlipContents) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWCheckboxPeer boolean isFocusable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWCheckboxPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWCheckboxPeer sun.lwawt.LWCheckboxPeer.CheckboxDelegate createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWChoicePeer boolean isFocusable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWChoicePeer javax.swing.JComboBox&lt;java.lang.String&gt; createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWChoicePeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWChoicePeer void itemStateChanged(java.awt.event.ItemEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWChoicePeer.JComboBoxDelegate javax.swing.JPopupMenu access$000(sun.lwawt.LWChoicePeer.JComboBoxDelegate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWChoicePeer.JComboBoxDelegate javax.swing.JPopupMenu access$000(sun.lwawt.LWChoicePeer.JComboBoxDelegate)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWChoicePeer.JComboBoxDelegate javax.swing.JPopupMenu getPopupMenu()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer D createDelegate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer D getDelegate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer T getTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean canDetermineObscurity()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean handlesWheelScrolling()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean isDisposed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean isEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean isFocusable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean isLayouting()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean isObscured()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean isReparentSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean isShaped()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean isVisible()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean shouldClearRectBeforePaint()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean updateGraphicsData(java.awt.GraphicsConfiguration) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer boolean updateGraphicsData(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;false;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.AWTEvent createDelegateEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.AWTEvent createDelegateEvent(java.awt.AWTEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Color getBackground()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Color getForeground()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Component getDelegateFocusOwner()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Cursor getCursor(java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Font getFont()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Graphics getOnscreenGraphics()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Image createImage(java.awt.image.ImageProducer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Image getBackBuffer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Point getLocationOnScreen()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Point localToWindow(java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Point localToWindow(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Point windowToLocal(java.awt.Point, sun.lwawt.LWWindowPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Point windowToLocal(java.awt.Point, sun.lwawt.LWWindowPeer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Point windowToLocal(java.awt.Point, sun.lwawt.LWWindowPeer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Rectangle getSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Rectangle localToWindow(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Rectangle localToWindow(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Rectangle windowToLocal(java.awt.Rectangle, sun.lwawt.LWWindowPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.Rectangle windowToLocal(java.awt.Rectangle, sun.lwawt.LWWindowPeer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.awt.image.VolatileImage createVolatileImage(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.lang.Object getDelegateLock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.lang.Object getPeerTreeLock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer java.lang.Object getStateLock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer sun.awt.AppContext getAppContext()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer sun.java2d.pipe.Region computeVisibleRect(sun.lwawt.LWComponentPeer, sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer sun.java2d.pipe.Region computeVisibleRect(sun.lwawt.LWComponentPeer, sun.java2d.pipe.Region)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer sun.lwawt.LWComponentPeer findPeerAt(int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer sun.lwawt.LWContainerPeer getContainerPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer sun.lwawt.LWWindowPeer getWindowPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer sun.lwawt.LWWindowPeer getWindowPeerOrSelf()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer void applyConstrain(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void coalescePaintEvent(java.awt.event.PaintEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void createBuffers(int, java.awt.BufferCapabilities) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void destroyBuffers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer void flip(int, int, int, int, java.awt.BufferCapabilities.FlipContents) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void flip(int, int, int, int, java.awt.BufferCapabilities.FlipContents)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer void handleEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void handleJavaFocusEvent(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void layout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWComponentPeer void postEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void reparent(java.awt.peer.ContainerPeer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void resetColorsAndFont(java.awt.Container) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void sendEventToDelegate(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer void setBounds(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer.3 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer.3 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWComponentPeer.DelegateContainer boolean isLightweight()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWContainerPeer java.awt.Insets getInsets()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWContainerPeer sun.java2d.pipe.Region cutChildren(sun.java2d.pipe.Region, sun.lwawt.LWComponentPeer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWContainerPeer sun.java2d.pipe.Region cutChildren(sun.java2d.pipe.Region, sun.lwawt.LWComponentPeer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWContainerPeer void beginValidate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWContainerPeer void endValidate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWCursorManager java.awt.Component findComponent(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWKeyboardFocusManagerPeer LWKeyboardFocusManagerPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWKeyboardFocusManagerPeer java.awt.Component getCurrentFocusOwner()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWKeyboardFocusManagerPeer java.awt.Window getCurrentFocusedWindow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWKeyboardFocusManagerPeer sun.lwawt.LWKeyboardFocusManagerPeer getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWLabelPeer int convertAlignment(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWLabelPeer java.awt.Dimension getMinimumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWLabelPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWLabelPeer javax.swing.JLabel createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer boolean isFocusable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWListPeer java.awt.Dimension getMinimumSize(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer java.awt.Dimension getPreferredSize(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer sun.lwawt.LWListPeer.ScrollableJList createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer void access$000(sun.lwawt.LWListPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList ScrollableJList(sun.lwawt.LWListPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList boolean isSkipStateChangedEvent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList javax.swing.DefaultListModel access$100(sun.lwawt.LWListPeer.ScrollableJList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList javax.swing.DefaultListModel access$100(sun.lwawt.LWListPeer.ScrollableJList)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList javax.swing.DefaultListModel&lt;java.lang.Object&gt; getModel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList void valueChanged(javax.swing.event.ListSelectionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList.JListDelegate JListDelegate(sun.lwawt.LWListPeer.ScrollableJList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList.JListDelegate void processKeyEvent(java.awt.event.KeyEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWListPeer.ScrollableJList.JListDelegate void processMouseEvent(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWMouseInfoPeer LWMouseInfoPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWMouseInfoPeer boolean isWindowUnderMouse(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWMouseInfoPeer int fillPointWithCoords(java.awt.Point) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWPanelPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWPanelPeer javax.swing.JPanel createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWRepaintArea void flushBuffers(sun.lwawt.LWComponentPeer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWRepaintArea void paintComponent(java.awt.Component, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWRepaintArea void updateComponent(java.awt.Component, java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWScrollBarPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWScrollBarPeer javax.swing.JScrollBar createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWScrollBarPeer void adjustmentValueChanged(java.awt.event.AdjustmentEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer int convertHPolicy(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer int convertVPolicy(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer java.awt.Rectangle getContentSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer javax.swing.JScrollPane createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer sun.lwawt.LWComponentPeer getViewPeer()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer void setScrollPosition(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer void setUnitIncrement(java.awt.Adjustable, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer void setUnitIncrement(java.awt.Adjustable, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer void setValue(java.awt.Adjustable, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer void setValue(java.awt.Adjustable, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWScrollPanePeer void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWTextAreaPeer java.awt.Cursor getCursor(java.awt.Point)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWTextAreaPeer java.awt.Dimension getMinimumSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextAreaPeer java.awt.Dimension getMinimumSize(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextAreaPeer java.awt.Dimension getPreferredSize(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextAreaPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextAreaPeer sun.lwawt.LWTextAreaPeer.ScrollableJTextArea createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextComponentPeer java.awt.Dimension getPreferredSize(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextComponentPeer void changedUpdate(javax.swing.event.DocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWTextComponentPeer void insertUpdate(javax.swing.event.DocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWTextComponentPeer void removeUpdate(javax.swing.event.DocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWTextFieldPeer javax.swing.JComponent createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextFieldPeer javax.swing.JPasswordField createDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextFieldPeer void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWTextFieldPeer void handleJavaFocusEvent(java.awt.event.FocusEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit boolean isDesktopSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWToolkit boolean isTerminating()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWToolkit int getRunState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.awt.JobAttributes, java.awt.PageAttributes)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.util.Properties) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.PrintJob getPrintJob(java.awt.Frame, java.lang.String, java.util.Properties)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.ButtonPeer createButton(java.awt.Button)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.CanvasPeer createCanvas(java.awt.Canvas)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.CheckboxMenuItemPeer createCheckboxMenuItem(java.awt.CheckboxMenuItem) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.CheckboxPeer createCheckbox(java.awt.Checkbox)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.ChoicePeer createChoice(java.awt.Choice)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.DesktopPeer createDesktopPeer(java.awt.Desktop) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.DesktopPeer createDesktopPeer(java.awt.Desktop)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.DialogPeer createDialog(java.awt.Dialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.FramePeer createFrame(java.awt.Frame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.FramePeer createFrame(java.awt.Frame)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.KeyboardFocusManagerPeer getKeyboardFocusManagerPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.LabelPeer createLabel(java.awt.Label)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.ListPeer createList(java.awt.List)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.MenuBarPeer createMenuBar(java.awt.MenuBar) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.MenuItemPeer createMenuItem(java.awt.MenuItem) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.MenuPeer createMenu(java.awt.Menu) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.MouseInfoPeer createMouseInfoPeerImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.PanelPeer createPanel(java.awt.Panel)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.PopupMenuPeer createPopupMenu(java.awt.PopupMenu) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.RobotPeer createRobot(java.awt.Robot, java.awt.GraphicsDevice) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.RobotPeer createRobot(java.awt.Robot, java.awt.GraphicsDevice) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.ScrollPanePeer createScrollPane(java.awt.ScrollPane)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.ScrollbarPeer createScrollbar(java.awt.Scrollbar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.SystemTrayPeer createSystemTray(java.awt.SystemTray) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.TextAreaPeer createTextArea(java.awt.TextArea)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.TextFieldPeer createTextField(java.awt.TextField)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.TrayIconPeer createTrayIcon(java.awt.TrayIcon) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.WindowPeer createWindow(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.awt.peer.WindowPeer createWindow(java.awt.Window)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.lang.Object targetToPeer(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit java.lang.Object targetToPeer(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createDelegatedPeer(java.awt.Window, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow, sun.lwawt.LWWindowPeer.PeerType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createDelegatedPeer(java.awt.Window, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow, sun.lwawt.LWWindowPeer.PeerType) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createDelegatedPeer(java.awt.Window, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow, sun.lwawt.LWWindowPeer.PeerType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createEmbeddedFrame(sun.lwawt.macosx.CEmbeddedFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createEmbeddedFrame(sun.lwawt.macosx.CEmbeddedFrame)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createEmbeddedFrame(sun.lwawt.macosx.CViewEmbeddedFrame) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.LWWindowPeer createEmbeddedFrame(sun.lwawt.macosx.CViewEmbeddedFrame)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.macosx.CPrinterDialogPeer createCPrinterDialog(sun.lwawt.macosx.CPrinterDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit sun.lwawt.macosx.CPrinterDialogPeer createCPrinterDialog(sun.lwawt.macosx.CPrinterDialog)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit void access$000(sun.lwawt.LWToolkit, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit void grab(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit void postEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit void targetDisposedPeer(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit void targetDisposedPeer(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWToolkit void ungrab(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWToolkit.1 java.lang.ThreadGroup run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer LWWindowPeer(java.awt.Window, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow, sun.lwawt.LWWindowPeer.PeerType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer LWWindowPeer(java.awt.Window, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow, sun.lwawt.LWWindowPeer.PeerType) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer boolean isGrabbing()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer boolean isTextured()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer boolean updateGraphicsData(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer int getBackBufferCount()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer int getGraphicsConfigScreen(java.awt.GraphicsConfiguration) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer int getState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer java.awt.BufferCapabilities getBackBufferCaps()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer java.awt.Graphics getOnscreenGraphics(java.awt.Color, java.awt.Color, java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer java.awt.Graphics getOnscreenGraphics(java.awt.Color, java.awt.Color, java.awt.Font) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer java.awt.Graphics getOnscreenGraphics(java.awt.Color, java.awt.Color, java.awt.Font) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer java.awt.Graphics getOnscreenGraphics(java.awt.Color, java.awt.Color, java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer java.awt.GraphicsConfiguration getGraphicsConfiguration()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer sun.java2d.SurfaceData getSurfaceData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer sun.lwawt.LWComponentPeer&lt;?,?&gt; getPeerUnderCursor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer sun.lwawt.LWWindowPeer getBlocker()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer sun.lwawt.LWWindowPeer getOwnerFrameDialog(sun.lwawt.LWWindowPeer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer sun.lwawt.LWWindowPeer getOwnerFrameDialog(sun.lwawt.LWWindowPeer)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer sun.lwawt.LWWindowPeer getWindowPeerOrSelf()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer sun.lwawt.LWWindowPeer getWindowUnderCursor()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer sun.lwawt.LWWindowPeer.PeerType getPeerType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer sun.lwawt.PlatformWindow getPlatformWindow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer void beginValidate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer void blitSurfaceData(sun.java2d.SurfaceData, sun.java2d.SurfaceData) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void blitSurfaceData(sun.java2d.SurfaceData, sun.java2d.SurfaceData) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void blockWindows(java.util.List&lt;java.awt.Window&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void endValidate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer void flip(int, int, int, int, java.awt.BufferCapabilities.FlipContents) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void initializeContainerPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer void notifyActivation(boolean, sun.lwawt.LWWindowPeer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void notifyMouseEvent(int, long, int, int, int, int, int, int, int, boolean, byte[]) 10">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void notifyMouseWheelEvent(long, int, int, int, int, int, int, double, byte[]) 8">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void paletteChanged()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer void postMouseEnteredExitedEvent(java.awt.Component, int, long, int, java.awt.Point, int, int, int, boolean, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void postMouseEnteredExitedEvent(java.awt.Component, int, long, int, java.awt.Point, int, int, int, boolean, int) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void setMaximizedBounds(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void setMaximizedBounds(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.LWWindowPeer void setTitle(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void setZOrder(java.awt.peer.ComponentPeer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.LWWindowPeer void updateWindow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
</root>
