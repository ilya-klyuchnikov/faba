<root>
  <item name="sun.lwawt.macosx.CAccessibility T invokeAndWait(java.util.concurrent.Callable&lt;T&gt;, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility boolean contains(javax.accessibility.AccessibleContext, javax.accessibility.AccessibleState, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility boolean contains(javax.accessibility.AccessibleContext, javax.accessibility.AccessibleState, java.awt.Component) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility boolean contains(javax.accessibility.AccessibleContext, javax.accessibility.AccessibleState, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null,_-&gt;false;null,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility boolean isAccessibleChildSelected(javax.accessibility.Accessible, int, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility boolean isAccessibleChildSelected(javax.accessibility.Accessible, int, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility boolean isEnabled(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility boolean isEnabled(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility boolean isFocusTraversable(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility boolean isFocusTraversable(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility boolean[] getInitialAttributeStates(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility boolean[] getInitialAttributeStates(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility int getAccessibleIndexInParent(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility int getCharCount(javax.accessibility.AccessibleText, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.awt.Dimension getSize(javax.accessibility.AccessibleComponent, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.awt.Dimension getSize(javax.accessibility.AccessibleComponent, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.awt.Point getLocationOnScreen(javax.accessibility.AccessibleComponent, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.awt.Point getLocationOnScreen(javax.accessibility.AccessibleComponent, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.Number getCurrentAccessibleValue(javax.accessibility.AccessibleValue, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.Number getCurrentAccessibleValue(javax.accessibility.AccessibleValue, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.Number getMaximumAccessibleValue(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.Number getMaximumAccessibleValue(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.Number getMinimumAccessibleValue(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.Number getMinimumAccessibleValue(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.Object[] getChildren(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.Object[] getChildren(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.Object[] getChildrenAndRoles(javax.accessibility.Accessible, java.awt.Component, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.Object[] getChildrenAndRoles(javax.accessibility.Accessible, java.awt.Component, int, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.String getAccessibleActionDescription(javax.accessibility.AccessibleAction, int, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.String getAccessibleActionDescription(javax.accessibility.AccessibleAction, int, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.String getAccessibleDescription(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.String getAccessibleDescription(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.String getAccessibleName(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.String getAccessibleName(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.String getAccessibleRole(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.String getAccessibleRole(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.String getAccessibleRoleDisplayString(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.String getAccessibleRoleDisplayString(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.String getAccessibleRoleFor(javax.accessibility.Accessible) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.String getAccessibleRoleFor(javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility java.lang.reflect.Field getAccessibleBundleKeyFieldWithReflection()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.Accessible ax_getAccessibleSelection(javax.accessibility.AccessibleContext, int, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.Accessible ax_getAccessibleSelection(javax.accessibility.AccessibleContext, int, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.Accessible getAccessibleParent(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.Accessible getAccessibleParent(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleComponent getAccessibleComponent(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleComponent getAccessibleComponent(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleContext getAccessibleContext(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleContext getAccessibleContext(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleRole getAccessibleRole(javax.accessibility.Accessible) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleRole getAccessibleRole(javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleRole getAccessibleRoleForLabel(javax.swing.JLabel, javax.accessibility.AccessibleRole) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleSelection getAccessibleSelection(javax.accessibility.AccessibleContext, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleSelection getAccessibleSelection(javax.accessibility.AccessibleContext, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleStateSet getAccessibleStateSet(javax.accessibility.AccessibleContext, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleStateSet getAccessibleStateSet(javax.accessibility.AccessibleContext, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleText getAccessibleText(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleText getAccessibleText(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleValue getAccessibleValue(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility javax.accessibility.AccessibleValue getAccessibleValue(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility sun.lwawt.macosx.CAccessibility getAccessibility(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility void _addChildren(javax.accessibility.Accessible, int, boolean, java.util.ArrayList&lt;java.lang.Object&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility void access$000(javax.accessibility.Accessible, int, boolean, java.util.ArrayList) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility void addAccessibleSelection(javax.accessibility.AccessibleContext, int, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility void doAccessibleAction(javax.accessibility.AccessibleAction, int, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility void requestFocus(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.10 java.lang.Boolean call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.10 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.11 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.11 java.lang.String call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.14 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.14 javax.accessibility.Accessible call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.15 java.lang.Integer call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.15 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.16 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.16 javax.accessibility.AccessibleComponent call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.17 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.17 javax.accessibility.AccessibleValue call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.18 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.18 java.lang.String call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.19 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.19 javax.accessibility.AccessibleText call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.20 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.20 java.lang.String call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.21 java.lang.Boolean call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.21 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.22 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.22 javax.accessibility.Accessible call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.23 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.23 javax.accessibility.AccessibleAction call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.24 java.lang.Boolean call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.24 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.26 java.lang.Number call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.26 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.27 java.lang.Number call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.27 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.28 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.28 java.lang.String call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.30 30()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.30 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.30 javax.accessibility.Accessible call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.33 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.33 java.lang.Object[] call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.5 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibility.5 javax.accessibility.Accessible call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible CAccessible(javax.accessibility.Accessible) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible java.lang.reflect.Field getNativeAXResourceField()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible javax.accessibility.Accessible getSwingAccessible(javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CAccessible sun.lwawt.macosx.CAccessible getCAccessible(javax.accessibility.Accessible) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible sun.lwawt.macosx.CAccessible getCAccessible(javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible void addNotificationListeners(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible.AXProgressChangeNotifier AXProgressChangeNotifier(sun.lwawt.macosx.CAccessible, sun.lwawt.macosx.CAccessible.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible.AXProgressChangeNotifier void stateChanged(javax.swing.event.ChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible.AXTextChangeNotifier AXTextChangeNotifier(sun.lwawt.macosx.CAccessible, sun.lwawt.macosx.CAccessible.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible.AXTextChangeNotifier void caretUpdate(javax.swing.event.CaretEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible.AXTextChangeNotifier void changedUpdate(javax.swing.event.DocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible.AXTextChangeNotifier void insertUpdate(javax.swing.event.DocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessible.AXTextChangeNotifier void removeUpdate(javax.swing.event.DocumentEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText CAccessibleText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText double[] getBoundsForRange(javax.accessibility.Accessible, java.awt.Component, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText double[] getBoundsForRange(javax.accessibility.Accessible, java.awt.Component, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int getCharacterIndexAtPosition(javax.accessibility.Accessible, java.awt.Component, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int getLineNumberForIndex(javax.accessibility.Accessible, java.awt.Component, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int getLineNumberForInsertionPoint(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int[] getRangeForIndex(javax.accessibility.Accessible, java.awt.Component, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int[] getRangeForIndex(javax.accessibility.Accessible, java.awt.Component, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int[] getRangeForLine(javax.accessibility.Accessible, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int[] getRangeForLine(javax.accessibility.Accessible, java.awt.Component, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int[] getRangeForLine(javax.accessibility.Accessible, java.awt.Component, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int[] getSelectedTextRange(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int[] getSelectedTextRange(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int[] getVisibleCharacterRange(javax.accessibility.Accessible)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int[] getVisibleCharacterRange(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText int[] getVisibleCharacterRange(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText java.lang.String getSelectedText(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText java.lang.String getSelectedText(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText java.lang.String getStringForRange(javax.accessibility.Accessible, java.awt.Component, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText java.lang.String getStringForRange(javax.accessibility.Accessible, java.awt.Component, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText java.lang.String getTextRange(javax.accessibility.AccessibleEditableText, int, int, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText java.lang.String getTextRange(javax.accessibility.AccessibleEditableText, int, int, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText javax.accessibility.AccessibleEditableText getAccessibleEditableText(javax.accessibility.Accessible, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText javax.accessibility.AccessibleEditableText getAccessibleEditableText(javax.accessibility.Accessible, java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText void setSelectedText(javax.accessibility.Accessible, java.awt.Component, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText void setSelectedTextRange(javax.accessibility.Accessible, java.awt.Component, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.1 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.1 javax.accessibility.AccessibleEditableText call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.11 int[] call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.11 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.12 int[] call()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.12 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.14 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.14 java.lang.String call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.2 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.2 java.lang.String call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.6 java.lang.Integer call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.6 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.7 int[] call()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.7 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.8 int[] call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CAccessibleText.8 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CCheckboxMenuItem CCheckboxMenuItem(java.awt.CheckboxMenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CCheckboxMenuItem boolean isAutoToggle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CClipboard long getID()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CClipboard void clearNativeContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CClipboard void registerClipboardViewerChecked()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CClipboard void unregisterClipboardViewerChecked()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CCursorManager java.awt.Point getCursorPosition()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CCursorManager sun.lwawt.macosx.CCursorManager getInstance()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CCustomCursor java.awt.Dimension getBestCursorSize(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CCustomCursor java.awt.Point getHotSpot()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CCustomCursor java.awt.image.BufferedImage createTransparentImage(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer boolean isFileFormat(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer boolean isImageFormat(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer boolean isLocaleDependentTextFormat(long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer byte[] imageToPlatformBytes(java.awt.Image, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer byte[] translateTransferable(java.awt.datatransfer.Transferable, java.awt.datatransfer.DataFlavor, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer byte[] translateTransferable(java.awt.datatransfer.Transferable, java.awt.datatransfer.DataFlavor, long)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer java.awt.Image platformImageBytesOrStreamToImage(java.io.InputStream, byte[], long) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer java.io.ByteArrayOutputStream convertFileListToBytes(java.util.ArrayList&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer java.io.ByteArrayOutputStream convertFileListToBytes(java.util.ArrayList&lt;java.lang.String&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer java.lang.Long getFormatForNativeAsLong(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer java.lang.Long[] getImageFormatsAsLongArray()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer java.lang.Object translateBytesOrStream(java.io.InputStream, byte[], java.awt.datatransfer.DataFlavor, long, java.awt.datatransfer.Transferable)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer java.lang.String getDefaultUnicodeEncoding()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer java.lang.String[] dragQueryFile(byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer java.lang.String[] dragQueryFile(byte[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CDataTransferer sun.awt.datatransfer.ToolkitThreadBlockedHandler getToolkitThreadBlockedHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDesktopPeer CDesktopPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDesktopPeer boolean isSupported(java.awt.Desktop.Action) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CDesktopPeer boolean isSupported(java.awt.Desktop.Action)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;true;null-&gt;true&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDesktopPeer void browse(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDesktopPeer void edit(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDesktopPeer void lsOpen(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDesktopPeer void lsOpenFile(java.io.File, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDesktopPeer void mail(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDesktopPeer void open(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDesktopPeer void print(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer java.awt.Component access$500(java.awt.Component, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer java.awt.Component access$500(java.awt.Component, int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer java.awt.Component getDropTargetAt(java.awt.Component, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer java.awt.Component getDropTargetAt(java.awt.Component, int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer java.awt.Image access$302(sun.lwawt.macosx.CDragSourceContextPeer, java.awt.Image) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer java.awt.Image access$302(sun.lwawt.macosx.CDragSourceContextPeer, java.awt.Image)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer long access$000(sun.lwawt.macosx.CDragSourceContextPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer sun.lwawt.macosx.CImage access$400(sun.lwawt.macosx.CDragSourceContextPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer sun.lwawt.macosx.CImage access$400(sun.lwawt.macosx.CDragSourceContextPeer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer sun.lwawt.macosx.CImage access$402(sun.lwawt.macosx.CDragSourceContextPeer, sun.lwawt.macosx.CImage) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer sun.lwawt.macosx.CImage access$402(sun.lwawt.macosx.CDragSourceContextPeer, sun.lwawt.macosx.CImage)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer void access$100(sun.lwawt.macosx.CDragSourceContextPeer, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer void access$200(sun.lwawt.macosx.CDragSourceContextPeer, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer void setDefaultDragImage(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer void setDefaultDragImage(javax.swing.JList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer void setDefaultDragImage(javax.swing.JTable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer void setDefaultDragImage(javax.swing.JTree) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer void setDefaultDragImage(javax.swing.text.JTextComponent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer void setOutlineDragImage(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer void setOutlineDragImage(java.awt.Rectangle, java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer void setOutlineDragImage(java.awt.Rectangle, java.lang.Boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer.2 java.awt.Component call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CDragSourceContextPeer.2 java.lang.Object call()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CDropTarget CDropTarget(java.awt.dnd.DropTarget, java.awt.Component, java.awt.peer.ComponentPeer) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDropTarget java.awt.dnd.DropTarget getDropTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CDropTarget sun.lwawt.macosx.CDropTarget createDropTarget(java.awt.dnd.DropTarget, java.awt.Component, java.awt.peer.ComponentPeer) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDropTarget sun.lwawt.macosx.CDropTarget createDropTarget(java.awt.dnd.DropTarget, java.awt.Component, java.awt.peer.ComponentPeer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDropTargetContextPeer int postDropTargetEvent(java.awt.Component, int, int, int, int, long[], long, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDropTargetContextPeer sun.lwawt.macosx.CDropTargetContextPeer getDropTargetContextPeer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDropTargetContextPeer void processDropMessage(sun.awt.dnd.SunDropTargetEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDropTargetContextPeer void processMotionMessage(sun.awt.dnd.SunDropTargetEvent, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CDropTargetContextPeer.1 void run()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CEmbeddedFrame boolean isParentWindowActive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CEmbeddedFrame void handleInputEvent(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CEmbeddedFrame void handleKeyEvent(int, int, java.lang.String, java.lang.String, boolean, short, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CEmbeddedFrame void handleKeyEvent(int, int, java.lang.String, java.lang.String, boolean, short, boolean) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CEmbeddedFrame void registerAccelerator(java.awt.AWTKeyStroke) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CEmbeddedFrame void registerAccelerator(java.awt.AWTKeyStroke)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CEmbeddedFrame void unregisterAccelerator(java.awt.AWTKeyStroke) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CEmbeddedFrame void unregisterAccelerator(java.awt.AWTKeyStroke)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean canDetermineObscurity()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean handlesWheelScrolling()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean isFocusable()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean isObscured()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean isReparentSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean prepareImage(java.awt.Image, int, int, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean prepareImage(java.awt.Image, int, int, java.awt.image.ImageObserver) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean prepareImage(java.awt.Image, int, int, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null,_,_,_-&gt;false;_,_,_,!null-&gt;false;_,_,_,null-&gt;false;null,_,_,_-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean queryFilenameFilter(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean requestFocus(java.awt.Component, boolean, boolean, long, sun.awt.CausedFocusEvent.Cause) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean requestFocus(java.awt.Component, boolean, boolean, long, sun.awt.CausedFocusEvent.Cause) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean requestFocus(java.awt.Component, boolean, boolean, long, sun.awt.CausedFocusEvent.Cause)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null,_,_,_,_-&gt;false;_,_,_,_,!null-&gt;false;_,_,_,_,null-&gt;false;null,_,_,_,_-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean updateGraphicsData(java.awt.GraphicsConfiguration) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog boolean updateGraphicsData(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;false;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog int checkImage(java.awt.Image, int, int, java.awt.image.ImageObserver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog int checkImage(java.awt.Image, int, int, java.awt.image.ImageObserver) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog int checkImage(java.awt.Image, int, int, java.awt.image.ImageObserver)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.FileDialog access$000(sun.lwawt.macosx.CFileDialog) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.FileDialog access$000(sun.lwawt.macosx.CFileDialog)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.FontMetrics getFontMetrics(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.FontMetrics getFontMetrics(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;null;null-&gt;null&quot;,pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Graphics getGraphics()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.GraphicsConfiguration getGraphicsConfiguration()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Image createImage(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Image createImage(java.awt.image.ImageProducer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Image createImage(java.awt.image.ImageProducer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;null;null-&gt;null&quot;,pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Image getBackBuffer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Insets getInsets()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.Point getLocationOnScreen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.image.ColorModel getColorModel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.awt.image.VolatileImage createVolatileImage(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog java.lang.String[] access$100(sun.lwawt.macosx.CFileDialog, java.lang.String, int, boolean, boolean, boolean, boolean, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void applyShape(sun.java2d.pipe.Region) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void applyShape(sun.java2d.pipe.Region)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void beginLayout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void beginValidate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void blockWindows(java.util.List&lt;java.awt.Window&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void blockWindows(java.util.List&lt;java.awt.Window&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void coalescePaintEvent(java.awt.event.PaintEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void coalescePaintEvent(java.awt.event.PaintEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void createBuffers(int, java.awt.BufferCapabilities) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void createBuffers(int, java.awt.BufferCapabilities)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void destroyBuffers()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void endLayout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void endValidate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void flip(int, int, int, int, java.awt.BufferCapabilities.FlipContents) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void flip(int, int, int, int, java.awt.BufferCapabilities.FlipContents)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void handleEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void handleEvent(java.awt.AWTEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void layout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void paint(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void paint(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void print(java.awt.Graphics) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void print(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void reparent(java.awt.peer.ContainerPeer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void reparent(java.awt.peer.ContainerPeer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void repositionSecurityWarning()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setBackground(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setBackground(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setBounds(int, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setDirectory(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setDirectory(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setEnabled(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setFile(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setFile(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setFilenameFilter(java.io.FilenameFilter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setFilenameFilter(java.io.FilenameFilter)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setFont(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setForeground(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setForeground(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setModalBlocked(java.awt.Dialog, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setModalBlocked(java.awt.Dialog, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setOpacity(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setOpaque(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setResizable(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setTitle(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setTitle(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setZOrder(java.awt.peer.ComponentPeer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void setZOrder(java.awt.peer.ComponentPeer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void toBack()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void toFront()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void updateAlwaysOnTopState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void updateCursorImmediately()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void updateFocusableWindowState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void updateIconImages()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void updateMinimumSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog void updateWindow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CFileDialog.Task Task(sun.lwawt.macosx.CFileDialog, sun.lwawt.macosx.CFileDialog.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CImage java.awt.image.BufferedImage toImage()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CImage sun.lwawt.macosx.CImage resize(double, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CImage sun.lwawt.macosx.CImage.Creator getCreator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CImage.Creator Creator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CImage.Creator int getSelectorAsInt(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CImage.Creator int[] imageToArray(java.awt.Image, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CImage.Creator int[] imageToArray(java.awt.Image, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CImage.Creator java.awt.Image createImageFromName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CImage.Creator java.awt.image.BufferedImage createImageUsingNativeSize(long)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CImage.Creator java.awt.image.BufferedImage createSystemImageFromSelector(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CImage.Creator sun.lwawt.macosx.CImage createFromImage(java.awt.Image)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CImage.Creator sun.lwawt.macosx.CImage createFromImageImmediately(java.awt.Image)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod boolean hasMarkedText()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod int access$200(sun.lwawt.macosx.CInputMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod int access$200(sun.lwawt.macosx.CInputMethod)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod int[] firstRectForCharacterRange(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod int[] markedRange()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod int[] selectedRange()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod java.awt.Component access$100(sun.lwawt.macosx.CInputMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod java.awt.Component access$100(sun.lwawt.macosx.CInputMethod)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod java.awt.im.spi.InputMethodContext access$000(sun.lwawt.macosx.CInputMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod java.awt.im.spi.InputMethodContext access$000(sun.lwawt.macosx.CInputMethod)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod java.lang.Object getControlObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod java.lang.String access$400(sun.lwawt.macosx.CInputMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod java.lang.String access$400(sun.lwawt.macosx.CInputMethod)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod java.text.AttributedString access$300(sun.lwawt.macosx.CInputMethod) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod java.text.AttributedString access$300(sun.lwawt.macosx.CInputMethod)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod java.util.Map mapInputMethodHighlight(java.awt.im.InputMethodHighlight) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod java.util.Map mapInputMethodHighlight(java.awt.im.InputMethodHighlight)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod long getNativeViewPtr(sun.lwawt.LWComponentPeer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod sun.lwawt.LWComponentPeer getNearestNativePeer(java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod sun.lwawt.LWComponentPeer getNearestNativePeer(java.awt.Component)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void disableInputMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void dispatchEvent(java.awt.AWTEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void dispatchEvent(java.awt.AWTEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void hideWindows()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void insertText(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void setCharacterSubsets(java.lang.Character.Subset[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void setCharacterSubsets(java.lang.Character.Subset[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethod void startIMUpdate(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor CInputMethodDescriptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor boolean hasDynamicLocaleList()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor java.awt.Image getInputMethodIcon(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor java.awt.Image getInputMethodIcon(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;null;null-&gt;null&quot;,pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor java.awt.im.spi.InputMethod createInputMethod()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor java.lang.String getInputMethodDisplayName(java.util.Locale, java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor java.lang.String getInputMethodDisplayName(java.util.Locale, java.util.Locale) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CInputMethodDescriptor java.util.Locale[] getAvailableLocales()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CMenu void addItem(java.awt.MenuItem) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CMenu void addItem(java.awt.MenuItem)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenu void initialize(java.awt.MenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CMenuBar int getNextInsertionIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenuBar void addHelpMenu(java.awt.Menu) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CMenuBar void addMenu(java.awt.Menu) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CMenuBar void addMenu(java.awt.Menu)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenuComponent java.awt.MenuComponent getTarget()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenuComponent long getModel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenuComponent void setFont(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CMenuComponent void setFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenuItem boolean isEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMenuItem void setLabel(java.lang.String, char, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer CMouseDragGestureRecognizer(java.awt.dnd.DragSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer CMouseDragGestureRecognizer(java.awt.dnd.DragSource, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer CMouseDragGestureRecognizer(java.awt.dnd.DragSource, java.awt.Component, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer CMouseDragGestureRecognizer(java.awt.dnd.DragSource, java.awt.Component, int, java.awt.dnd.DragGestureListener) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer CMouseDragGestureRecognizer(java.awt.dnd.DragSource, java.awt.Component, int, java.awt.dnd.DragGestureListener) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer int mapDragOperationFromModifiers(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMouseDragGestureRecognizer void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CMouseInfoPeer CMouseInfoPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CMouseInfoPeer boolean isWindowUnderMouse(java.awt.Window) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformComponent long getPointer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformComponent void initialize(sun.lwawt.PlatformWindow) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame boolean isActive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame boolean isFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame boolean rejectFocusRequest(sun.awt.CausedFocusEvent.Cause) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame boolean requestWindowFocus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame java.awt.FontMetrics getFontMetrics(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame java.awt.Graphics transformGraphics(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame java.awt.Image createBackBuffer()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame java.awt.Insets getInsets()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame java.awt.Point getLocationOnScreen()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame sun.lwawt.LWWindowPeer getPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void enterFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void exitFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void flip(int, int, int, int, java.awt.BufferCapabilities.FlipContents) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void initialize(java.awt.Window, sun.lwawt.LWWindowPeer, sun.lwawt.PlatformWindow) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setAlwaysOnTop(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setMenuBar(java.awt.MenuBar) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setMenuBar(java.awt.MenuBar)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setModalBlocked(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setOpacity(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setOpaque(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setResizable(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setSizeConstraints(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setTitle(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setTitle(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setVisible(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void setWindowState(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void toBack()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void toFront()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void updateFocusableWindowState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformEmbeddedFrame void updateIconImages()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformResponder void handleInputEvent(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformResponder void handleKeyEvent(int, int, java.lang.String, short, boolean, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformView java.awt.Image createBackBuffer()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformView java.awt.Point getLocationOnScreen()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformView java.lang.Object getDestination()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformView long getAWTView()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformView sun.java2d.SurfaceData getSurfaceData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformView sun.java2d.opengl.CGLLayer createCGLayer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformView void deliverKeyEvent(sun.lwawt.macosx.event.NSEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformView void deliverMouseEvent(sun.lwawt.macosx.event.NSEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow boolean IS(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow boolean isFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow boolean isMaximized()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow boolean isVisible()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow boolean rejectFocusRequest(sun.awt.CausedFocusEvent.Cause) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow int SET(int, int, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow java.awt.FontMetrics getFontMetrics(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow java.awt.FontMetrics getFontMetrics(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow java.awt.Graphics transformGraphics(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow java.awt.Point getLocationOnScreen()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow java.awt.Window access$000(sun.lwawt.macosx.CPlatformWindow) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow java.awt.Window access$000(sun.lwawt.macosx.CPlatformWindow)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow long getNativeViewPtr(sun.lwawt.PlatformWindow) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow sun.java2d.SurfaceData getScreenSurface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow sun.lwawt.LWWindowPeer getPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow sun.lwawt.macosx.CImage getImageForTarget()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow sun.lwawt.macosx.CPlatformResponder createPlatformResponder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow sun.lwawt.macosx.CPlatformView createContentView()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow sun.lwawt.macosx.CPlatformView getContentView()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow void access$301(sun.lwawt.macosx.CPlatformWindow) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow void deliverWindowFocusEvent(boolean, sun.lwawt.macosx.CPlatformWindow) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow void flip(int, int, int, int, java.awt.BufferCapabilities.FlipContents) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow void initialize(java.awt.Window, sun.lwawt.LWWindowPeer, sun.lwawt.PlatformWindow) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow void setMenuBar(java.awt.MenuBar) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.1 void applyProperty(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.1 void applyProperty(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.1 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.1 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.10 void applyProperty(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.10 void applyProperty(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.10 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.10 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.11 11(com.apple.laf.ClientPropertyApplicator.Property...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.11 java.lang.Object convertJComponentToTarget(javax.swing.JComponent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.11 java.lang.Object convertJComponentToTarget(javax.swing.JComponent)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.11 sun.lwawt.macosx.CPlatformWindow convertJComponentToTarget(javax.swing.JRootPane) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.11 sun.lwawt.macosx.CPlatformWindow convertJComponentToTarget(javax.swing.JRootPane)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.12 void propertyChange(java.beans.PropertyChangeEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.14 void run()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.2 void applyProperty(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.2 void applyProperty(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.2 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.2 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.3 void applyProperty(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.3 void applyProperty(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.3 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.3 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.4 void applyProperty(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.4 void applyProperty(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.4 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.4 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.5 void applyProperty(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.5 void applyProperty(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.5 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.5 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.6 void applyProperty(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.6 void applyProperty(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.6 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.6 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.7 void applyProperty(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.7 void applyProperty(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.7 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.7 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.8 void applyProperty(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.8 void applyProperty(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.8 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.8 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.9 void applyProperty(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.9 void applyProperty(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.9 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPlatformWindow.9 void applyProperty(sun.lwawt.macosx.CPlatformWindow, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPopupMenu void show(java.awt.Event) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDevice int getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDevice java.awt.GraphicsConfiguration getDefaultConfiguration()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDevice java.awt.GraphicsConfiguration[] getConfigurations()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDevice java.lang.String getIDstring()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialog boolean getRetVal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer CPrinterDialogPeer(sun.lwawt.macosx.CPrinterDialog, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer CPrinterDialogPeer(sun.lwawt.macosx.CPrinterDialog, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer boolean handleEvent(java.awt.Event) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer boolean handleEvent(java.awt.Event)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;false;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer boolean isRestackSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer boolean requestFocus(boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void addDropTarget(java.awt.dnd.DropTarget) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void addDropTarget(java.awt.dnd.DropTarget)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void invalidate(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void removeDropTarget(java.awt.dnd.DropTarget) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void removeDropTarget(java.awt.dnd.DropTarget)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setBackground(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setBackground(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setBounds(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setEnabled(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setFont(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setFont(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setForeground(java.awt.Color) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setForeground(java.awt.Color)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setModalBlocked(java.awt.Dialog, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setModalBlocked(java.awt.Dialog, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void setResizable(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void start()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void toBack()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void toFront()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void updateAlwaysOnTopState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void updateFocusableWindowState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterDialogPeer void updateMinimumSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.GraphicsDevice getDevice()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.Rectangle getBounds()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.geom.AffineTransform getDefaultTransform()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.geom.AffineTransform getNormalizingTransform()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.image.BufferedImage createCompatibleImage(int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.image.BufferedImage createCompatibleImage(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.image.VolatileImage createCompatibleVolatileImage(int, int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.image.VolatileImage createCompatibleVolatileImage(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig java.awt.print.PageFormat getPageFormat()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterGraphicsConfig sun.lwawt.macosx.CPrinterGraphicsConfig getConfig(java.awt.print.PageFormat)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob boolean access$002(sun.lwawt.macosx.CPrinterJob, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob boolean access$100(sun.lwawt.macosx.CPrinterJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob boolean access$100(sun.lwawt.macosx.CPrinterJob)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPageHeight(java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPageHeight(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPageWidth(java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPageWidth(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPrintableHeight(java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPrintableHeight(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPrintableWidth(java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPrintableWidth(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPrintableX(java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPrintableX(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPrintableY(java.awt.print.Paper) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getPhysicalPrintableY(java.awt.print.Paper)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getXRes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob double getYRes()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.awt.Font access$300()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.awt.Font access$302(java.awt.Font)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.awt.geom.Rectangle2D access$400(sun.lwawt.macosx.CPrinterJob, java.awt.print.PageFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.awt.geom.Rectangle2D access$400(sun.lwawt.macosx.CPrinterJob, java.awt.print.PageFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.awt.geom.Rectangle2D access$400(sun.lwawt.macosx.CPrinterJob, java.awt.print.PageFormat)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.awt.geom.Rectangle2D getPageFormatArea(java.awt.print.PageFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.awt.geom.Rectangle2D getPageFormatArea(java.awt.print.PageFormat)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.awt.print.PageFormat defaultPage(java.awt.print.PageFormat) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.awt.print.PageFormat getPageFormat(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.awt.print.Pageable access$600(sun.lwawt.macosx.CPrinterJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.awt.print.Printable getPrintable(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.lang.Object[] getPageformatPrintablePeekgraphics(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob java.lang.String getPrinterName()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob sun.print.PeekGraphics access$700(sun.lwawt.macosx.CPrinterJob, java.awt.Graphics2D, java.awt.print.PrinterJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob sun.print.PeekGraphics createFirstPassGraphics(java.awt.print.PrinterJob, java.awt.print.PageFormat) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void access$200(sun.lwawt.macosx.CPrinterJob) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void access$500(sun.lwawt.macosx.CPrinterJob, java.awt.Graphics2D, java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void access$800(sun.lwawt.macosx.CPrinterJob, java.awt.Graphics2D, java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void endPage(java.awt.print.PageFormat, java.awt.print.Printable, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void endPage(java.awt.print.PageFormat, java.awt.print.Printable, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void printBand(byte[], int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void printToPathGraphics(sun.print.PeekGraphics, java.awt.print.PrinterJob, java.awt.print.Printable, java.awt.print.PageFormat, int, long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void setAttributes(javax.print.attribute.PrintRequestAttributeSet) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void startPage(java.awt.print.PageFormat, java.awt.print.Printable, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void startPage(java.awt.print.PageFormat, java.awt.print.Printable, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void startPage(java.awt.print.PageFormat, java.awt.print.Printable, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void startPage(java.awt.print.PageFormat, java.awt.print.Printable, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob void startPage(java.awt.print.PageFormat, java.awt.print.Printable, int, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterJob.2 boolean evaluate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CPrinterSurfaceData CPrinterSurfaceData(java.awt.GraphicsConfiguration, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterSurfaceData boolean xorSurfacePixels(sun.java2d.SunGraphics2D, java.awt.image.BufferedImage, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterSurfaceData boolean xorSurfacePixels(sun.java2d.SunGraphics2D, java.awt.image.BufferedImage, int, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterSurfaceData java.awt.image.BufferedImage copyArea(sun.java2d.SunGraphics2D, int, int, int, int, java.awt.image.BufferedImage) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterSurfaceData java.awt.image.BufferedImage copyArea(sun.java2d.SunGraphics2D, int, int, int, int, java.awt.image.BufferedImage) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterSurfaceData java.awt.image.BufferedImage copyArea(sun.java2d.SunGraphics2D, int, int, int, int, java.awt.image.BufferedImage)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterSurfaceData java.lang.Object getDestination()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterSurfaceData sun.java2d.SurfaceData createData(java.awt.print.PageFormat, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CPrinterSurfaceData sun.java2d.SurfaceData getReplacement()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CRobot CRobot(java.awt.Robot, sun.awt.CGraphicsDevice) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CRobot int[] getRGBPixels(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CRobot int[] getRGBPixels(java.awt.Rectangle)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CRobot void dispose()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CRobot void getScreenPixels(java.awt.Rectangle, int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CSystemTray CSystemTray()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CSystemTray java.awt.Dimension getTrayIconSize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe CTextPipe()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe long getNativeStrikePtr(sun.java2d.SunGraphics2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe sun.lwawt.macosx.CTextPipe traceWrap()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe void drawChars(sun.java2d.SunGraphics2D, char[], int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe void drawGlyphVector(sun.java2d.SunGraphics2D, java.awt.font.GlyphVector, float, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe void drawGlyphVector(sun.java2d.SunGraphics2D, java.awt.font.GlyphVector, float, float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe void drawGlyphVectorAsShape(sun.java2d.SunGraphics2D, java.awt.font.GlyphVector, float, float) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe void drawString(sun.java2d.SunGraphics2D, java.lang.String, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe void drawTextAsShape(sun.java2d.SunGraphics2D, java.lang.String, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTextPipe.Tracer Tracer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CThreading CThreading()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon CTrayIcon(java.awt.TrayIcon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon java.awt.TrayIcon access$000(sun.lwawt.macosx.CTrayIcon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon java.awt.TrayIcon access$000(sun.lwawt.macosx.CTrayIcon)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon java.awt.image.BufferedImage scaleIcon(javax.swing.Icon, double) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon java.awt.image.BufferedImage scaleIcon(javax.swing.Icon, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;null,_-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon javax.swing.Icon getIconForMessageType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon javax.swing.JDialog access$400(sun.lwawt.macosx.CTrayIcon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon javax.swing.JDialog access$400(sun.lwawt.macosx.CTrayIcon)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon javax.swing.JDialog createMessageDialog(java.lang.String, java.lang.String, int, javax.swing.Icon) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon javax.swing.JDialog createMessageDialog(java.lang.String, java.lang.String, int, javax.swing.Icon) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon javax.swing.JDialog createMessageDialog(java.lang.String, java.lang.String, int, javax.swing.Icon)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon javax.swing.JTextArea createTextArea(java.lang.String, int, boolean, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon long getModel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon sun.lwawt.macosx.CPopupMenu checkAndCreatePopupPeer()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon void access$200(sun.lwawt.macosx.CTrayIcon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon void access$300(sun.lwawt.macosx.CTrayIcon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon void displayMessageOnEDT(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon void displayMessageOnEDT(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon void displayMessageOnEDT(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon void handleMouseEvent(sun.lwawt.macosx.event.NSEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon void showPopupMenu(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon.DialogEventHandler DialogEventHandler(sun.lwawt.macosx.CTrayIcon, sun.lwawt.macosx.CTrayIcon.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CTrayIcon.DialogEventHandler void windowClosing(java.awt.event.WindowEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CViewEmbeddedFrame boolean isParentWindowActive()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewEmbeddedFrame long getEmbedderHandle()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewEmbeddedFrame void registerAccelerator(java.awt.AWTKeyStroke) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CViewEmbeddedFrame void registerAccelerator(java.awt.AWTKeyStroke)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewEmbeddedFrame void unregisterAccelerator(java.awt.AWTKeyStroke) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CViewEmbeddedFrame void unregisterAccelerator(java.awt.AWTKeyStroke)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame CViewPlatformEmbeddedFrame()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame boolean isFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame boolean rejectFocusRequest(sun.awt.CausedFocusEvent.Cause) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame boolean rejectFocusRequest(sun.awt.CausedFocusEvent.Cause)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;false;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame boolean requestWindowFocus()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame java.awt.FontMetrics getFontMetrics(java.awt.Font) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame java.awt.Graphics transformGraphics(java.awt.Graphics)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame java.awt.Insets getInsets()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame sun.lwawt.LWWindowPeer getPeer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void enterFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void exitFullScreenMode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void flip(int, int, int, int, java.awt.BufferCapabilities.FlipContents) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void initialize(java.awt.Window, sun.lwawt.LWWindowPeer, sun.lwawt.PlatformWindow) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setAlwaysOnTop(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setMenuBar(java.awt.MenuBar) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setMenuBar(java.awt.MenuBar)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setModalBlocked(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setOpacity(float)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setOpaque(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setResizable(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setSizeConstraints(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setTitle(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setTitle(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void setWindowState(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void toBack()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void toFront()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void updateFocusableWindowState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CViewPlatformEmbeddedFrame void updateIconImages()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow CWarningWindow(java.awt.Window, sun.lwawt.LWWindowPeer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow boolean isVisible()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow int access$600(sun.lwawt.macosx.CWarningWindow) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow int access$600(sun.lwawt.macosx.CWarningWindow)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow int access$610(sun.lwawt.macosx.CWarningWindow) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow int getInitialStyleBits()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow java.awt.Graphics getGraphics()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow java.lang.Runnable access$800(sun.lwawt.macosx.CWarningWindow) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow java.lang.Runnable access$800(sun.lwawt.macosx.CWarningWindow)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow java.lang.ref.WeakReference access$100(sun.lwawt.macosx.CWarningWindow) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow java.lang.ref.WeakReference access$100(sun.lwawt.macosx.CWarningWindow)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow java.util.concurrent.ScheduledExecutorService access$300(sun.lwawt.macosx.CWarningWindow) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow java.util.concurrent.ScheduledExecutorService access$300(sun.lwawt.macosx.CWarningWindow)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow java.util.concurrent.ScheduledFuture access$402(sun.lwawt.macosx.CWarningWindow, java.util.concurrent.ScheduledFuture) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow java.util.concurrent.ScheduledFuture access$402(sun.lwawt.macosx.CWarningWindow, java.util.concurrent.ScheduledFuture)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow java.util.concurrent.ScheduledFuture access$702(sun.lwawt.macosx.CWarningWindow, java.util.concurrent.ScheduledFuture) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow java.util.concurrent.ScheduledFuture access$702(sun.lwawt.macosx.CWarningWindow, java.util.concurrent.ScheduledFuture)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow sun.lwawt.macosx.CPlatformResponder createPlatformResponder()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow sun.lwawt.macosx.CPlatformView createContentView()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow sun.lwawt.macosx.CWarningWindow.Lock access$200(sun.lwawt.macosx.CWarningWindow) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow sun.lwawt.macosx.CWarningWindow.Lock access$200(sun.lwawt.macosx.CWarningWindow)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void access$500(sun.lwawt.macosx.CWarningWindow) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyActivation(boolean, sun.lwawt.LWWindowPeer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyActivation(boolean, sun.lwawt.LWWindowPeer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyExpose(java.awt.Rectangle) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyIconify(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyKeyEvent(int, long, int, int, char, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyMouseEvent(int, long, int, int, int, int, int, int, int, boolean, byte[]) 10">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyMouseWheelEvent(long, int, int, int, int, int, int, double, byte[]) 8">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyMouseWheelEvent(long, int, int, int, int, int, int, double, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyNCMouseDown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyReshape(int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyUpdateCursor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow void notifyZoom(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow.1 sun.java2d.opengl.CGLLayer createCGLayer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow.1.1 boolean isOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow.Lock Lock()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow.Lock Lock(sun.lwawt.macosx.CWarningWindow.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.CWarningWindow.Lock Lock(sun.lwawt.macosx.CWarningWindow.1)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWrapper CWrapper()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWrapper.NSColor NSColor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWrapper.NSObject NSObject()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWrapper.NSScreen NSScreen()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWrapper.NSView NSView()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CWrapper.NSWindow NSWindow()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.CocoaConstants CocoaConstants()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.EventDispatchAccess EventDispatchAccess()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.HTMLSupport HTMLSupport()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.HTMLSupport byte[] convertToHTMLFormat(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.HTMLSupport byte[] convertToHTMLFormat(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.HTMLSupport java.lang.String toPaddedString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit T createDragGestureRecognizer(java.lang.Class&lt;T&gt;, java.awt.dnd.DragSource, java.awt.Component, int, java.awt.dnd.DragGestureListener) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit T createDragGestureRecognizer(java.lang.Class&lt;T&gt;, java.awt.dnd.DragSource, java.awt.Component, int, java.awt.dnd.DragGestureListener)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean areExtraMouseButtonsEnabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean canPopupOverlapTaskBar()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean enableInputMethodsForTextComponent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isAlwaysOnTopSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isFrameStateSupported(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isModalExclusionTypeSupported(java.awt.Dialog.ModalExclusionType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isModalExclusionTypeSupported(java.awt.Dialog.ModalExclusionType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;true&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isModalityTypeSupported(java.awt.Dialog.ModalityType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isModalityTypeSupported(java.awt.Dialog.ModalityType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;true&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isPrintableCharacterModifiersMask(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isSwingBackbufferTranslucencySupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isTranslucencyCapable(java.awt.GraphicsConfiguration) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isTranslucencyCapable(java.awt.GraphicsConfiguration)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;true;null-&gt;true&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isTraySupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isWindowOpacitySupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isWindowShapingSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit boolean isWindowTranslucencySupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit int getFocusAcceleratorKeyMask()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit int getMenuShortcutKeyMask()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit int getNumberOfButtons()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit int[] access$000()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.Color getAppleColor(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.Cursor createCustomCursor(java.awt.Image, java.awt.Point, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.Dimension getBestCursorSize(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.Image checkForNSImage(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.Image checkForNSImage(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.Insets getScreenInsets(java.awt.GraphicsConfiguration) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.datatransfer.Clipboard createPlatformClipboard()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.CheckboxMenuItemPeer createCheckboxMenuItem(java.awt.CheckboxMenuItem) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.CheckboxMenuItemPeer createCheckboxMenuItem(java.awt.CheckboxMenuItem)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.FileDialogPeer createFileDialogPeer(java.awt.FileDialog)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.FontPeer getFontPeer(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.MenuBarPeer createMenuBar(java.awt.MenuBar)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.MenuItemPeer createMenuItem(java.awt.MenuItem)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.MenuPeer createMenu(java.awt.Menu)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.MouseInfoPeer createMouseInfoPeerImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.PopupMenuPeer createPopupMenu(java.awt.PopupMenu)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.RobotPeer createRobot(java.awt.Robot, java.awt.GraphicsDevice) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.RobotPeer createRobot(java.awt.Robot, java.awt.GraphicsDevice)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.SystemTrayPeer createSystemTray(java.awt.SystemTray) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.SystemTrayPeer createSystemTray(java.awt.SystemTray)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.TrayIconPeer createTrayIcon(java.awt.TrayIcon) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.awt.peer.TrayIconPeer createTrayIcon(java.awt.TrayIcon)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.util.Map mapInputMethodHighlight(java.awt.im.InputMethodHighlight) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit java.util.Map mapInputMethodHighlight(java.awt.im.InputMethodHighlight)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit sun.lwawt.LWCursorManager getCursorManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit sun.lwawt.PlatformComponent createPlatformComponent()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit sun.lwawt.PlatformWindow createPlatformWindow(sun.lwawt.LWWindowPeer.PeerType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit sun.lwawt.PlatformWindow createPlatformWindow(sun.lwawt.LWWindowPeer.PeerType)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit sun.lwawt.SecurityWarningWindow createSecurityWarning(java.awt.Window, sun.lwawt.LWWindowPeer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit sun.lwawt.SecurityWarningWindow createSecurityWarning(java.awt.Window, sun.lwawt.LWWindowPeer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit void loadSystemColors(int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit void platformCleanup()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit void platformInit()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit void platformRunMessage()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit void platformShutdown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit void sync()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.2 2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.2.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.4 4(java.lang.Object, java.lang.Runnable, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.AppleSpecificColor int getRGB()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.CallableWrapper T getResult()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.LWCToolkit.OSXPlatformFont char getMissingGlyphCharacter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo java.lang.Class&lt;? extends javax.print.attribute.Attribute&gt; getCategory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.lwawt.macosx.NSPrintInfo long getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
</root>
