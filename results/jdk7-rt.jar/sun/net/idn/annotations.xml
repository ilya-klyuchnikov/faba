<root>
  <item name="sun.net.idn.Punycode Punycode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.Punycode boolean isBasic(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.Punycode boolean isBasicUpperCase(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.Punycode boolean isSurrogate(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.Punycode char asciiCaseMap(char, boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.Punycode char digitToBasic(int, boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.Punycode int adaptBias(int, int, boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.Punycode java.lang.StringBuffer decode(java.lang.StringBuffer, boolean[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.Punycode java.lang.StringBuffer decode(java.lang.StringBuffer, boolean[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.net.idn.Punycode java.lang.StringBuffer encode(java.lang.StringBuffer, boolean[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.Punycode java.lang.StringBuffer encode(java.lang.StringBuffer, boolean[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.StringPrep java.lang.StringBuffer map(sun.text.normalizer.UCharacterIterator, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.StringPrep java.lang.StringBuffer normalize(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.StringPrep java.lang.StringBuffer normalize(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.StringPrep java.lang.StringBuffer prepare(sun.text.normalizer.UCharacterIterator, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.StringPrep sun.text.normalizer.VersionInfo getVersionInfo(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.StringPrep void getValues(char, sun.net.idn.StringPrep.Values) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.StringPrep.StringPrepTrieImpl StringPrepTrieImpl(sun.net.idn.StringPrep.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.net.idn.StringPrep.StringPrepTrieImpl int getFoldingOffset(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.StringPrep.StringPrepTrieImpl sun.text.normalizer.CharTrie access$000(sun.net.idn.StringPrep.StringPrepTrieImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.StringPrep.StringPrepTrieImpl sun.text.normalizer.CharTrie access$000(sun.net.idn.StringPrep.StringPrepTrieImpl)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.StringPrep.StringPrepTrieImpl sun.text.normalizer.CharTrie access$002(sun.net.idn.StringPrep.StringPrepTrieImpl, sun.text.normalizer.CharTrie) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.StringPrep.StringPrepTrieImpl sun.text.normalizer.CharTrie access$002(sun.net.idn.StringPrep.StringPrepTrieImpl, sun.text.normalizer.CharTrie)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="sun.net.idn.StringPrep.Values Values()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.StringPrep.Values Values(sun.net.idn.StringPrep.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="sun.net.idn.StringPrep.Values Values(sun.net.idn.StringPrep.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.StringPrepDataReader boolean isDataVersionAcceptable(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.StringPrepDataReader boolean isDataVersionAcceptable(byte[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.StringPrepDataReader byte[] getDataFormatVersion()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.StringPrepDataReader byte[] getUnicodeVersion()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.StringPrepDataReader void read(byte[], char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.StringPrepDataReader void read(byte[], char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="sun.net.idn.UCharacterDirection UCharacterDirection()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.UCharacterDirection java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="sun.net.idn.UCharacterEnums UCharacterEnums()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
</root>
