<root>
  <item name="java.awt.geom.AffineTransform AffineTransform(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform AffineTransform(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform AffineTransform(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.AffineTransform boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.AffineTransform double getScaleX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.AffineTransform double getScaleY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.AffineTransform double getShearX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.AffineTransform double getShearY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.AffineTransform double getTranslateX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.AffineTransform double getTranslateY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.Shape createTransformedShape(java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.Shape createTransformedShape(java.awt.Shape)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.AffineTransform createInverse()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.AffineTransform getQuadrantRotateInstance(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.AffineTransform getQuadrantRotateInstance(int, double, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.AffineTransform getRotateInstance(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.AffineTransform getRotateInstance(double, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.AffineTransform getRotateInstance(double, double, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.AffineTransform getRotateInstance(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.AffineTransform getScaleInstance(double, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.AffineTransform getShearInstance(double, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.AffineTransform getTranslateInstance(double, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.Point2D deltaTransform(java.awt.geom.Point2D, java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.Point2D deltaTransform(java.awt.geom.Point2D, java.awt.geom.Point2D) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.Point2D deltaTransform(java.awt.geom.Point2D, java.awt.geom.Point2D)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.Point2D inverseTransform(java.awt.geom.Point2D, java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.Point2D inverseTransform(java.awt.geom.Point2D, java.awt.geom.Point2D)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.Point2D transform(java.awt.geom.Point2D, java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.Point2D transform(java.awt.geom.Point2D, java.awt.geom.Point2D) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.AffineTransform java.awt.geom.Point2D transform(java.awt.geom.Point2D, java.awt.geom.Point2D)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.geom.AffineTransform java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform void concatenate(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform void getMatrix(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform void preConcatenate(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform void setTransform(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AffineTransform void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D boolean contains(double, double, double, double, java.awt.geom.Rectangle2D) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Arc2D boolean contains(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Arc2D int getArcType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D java.awt.geom.Point2D getEndPoint()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D java.awt.geom.Point2D getStartPoint()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D void setAngleStart(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D void setAngles(java.awt.geom.Point2D, java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D void setAngles(java.awt.geom.Point2D, java.awt.geom.Point2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D void setArc(java.awt.geom.Arc2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D void setArc(java.awt.geom.Point2D, java.awt.geom.Dimension2D, double, double, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D void setArc(java.awt.geom.Point2D, java.awt.geom.Dimension2D, double, double, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D void setArc(java.awt.geom.Rectangle2D, double, double, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D void setArcByTangent(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D void setArcByTangent(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D, double) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D void setArcByTangent(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D, double) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D.Double Double(java.awt.geom.Rectangle2D, double, double, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D.Double boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Double double getAngleExtent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Double double getAngleStart()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Double double getHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Double double getWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Double double getX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Double double getY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Double java.awt.geom.Rectangle2D makeBounds(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D.Double void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D.Double void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float Float(java.awt.geom.Rectangle2D, float, float, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float double getAngleExtent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float double getAngleStart()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float double getHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float double getWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float double getX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float double getY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float java.awt.geom.Rectangle2D makeBounds(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Arc2D.Float void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.ArcIterator ArcIterator(java.awt.geom.Arc2D, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.ArcIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.ArcIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Area Area(java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area boolean contains(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area boolean contains(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area boolean equals(java.awt.geom.Area) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Area boolean intersects(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area java.awt.geom.Area createTransformedArea(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area java.util.Vector pathToCurves(java.awt.geom.PathIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area void add(java.awt.geom.Area) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area void exclusiveOr(java.awt.geom.Area) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area void intersect(java.awt.geom.Area) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area void subtract(java.awt.geom.Area) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Area void transform(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AreaIterator AreaIterator(java.util.Vector, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.AreaIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.AreaIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D CubicCurve2D()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D boolean contains(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D boolean contains(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D boolean inInterval(double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D boolean intersects(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D boolean iszero(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D boolean oppositeSigns(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D boolean within(double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D double bisectRoot(double[], double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D double bisectRoot(double[], double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D double bisectRootWithHint(double[], double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D double getFlatness(double[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D double getFlatnessSq(double[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D double getRootUpperBound(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D double solveEqn(double[], int, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D double solveEqn(double[], int, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D int fixRoots(double[], double[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D int solveCubic(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D int solveCubic(double[], double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void setCurve(double[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void setCurve(java.awt.geom.CubicCurve2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void setCurve(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void setCurve(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void setCurve(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void setCurve(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void setCurve(java.awt.geom.Point2D[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void subdivide(double[], int, double[], int, double[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void subdivide(double[], int, double[], int, double[], int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void subdivide(double[], int, double[], int, double[], int) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void subdivide(java.awt.geom.CubicCurve2D, java.awt.geom.CubicCurve2D) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void subdivide(java.awt.geom.CubicCurve2D, java.awt.geom.CubicCurve2D) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void subdivide(java.awt.geom.CubicCurve2D, java.awt.geom.CubicCurve2D, java.awt.geom.CubicCurve2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void subdivide(java.awt.geom.CubicCurve2D, java.awt.geom.CubicCurve2D, java.awt.geom.CubicCurve2D) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D void subdivide(java.awt.geom.CubicCurve2D, java.awt.geom.CubicCurve2D, java.awt.geom.CubicCurve2D) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getCtrlX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getCtrlX2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getCtrlY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getCtrlY2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getX2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double double getY2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double java.awt.geom.Point2D getCtrlP1()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double java.awt.geom.Point2D getCtrlP2()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double java.awt.geom.Point2D getP1()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double java.awt.geom.Point2D getP2()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Double java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getCtrlX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getCtrlX2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getCtrlY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getCtrlY2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getX2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float double getY2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float java.awt.geom.Point2D getCtrlP1()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float java.awt.geom.Point2D getCtrlP2()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float java.awt.geom.Point2D getP1()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float java.awt.geom.Point2D getP2()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicCurve2D.Float java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.CubicIterator int currentSegment(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicIterator int currentSegment(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.CubicIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Dimension2D Dimension2D()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Dimension2D void setSize(java.awt.geom.Dimension2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Ellipse2D Ellipse2D()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Ellipse2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double double getHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double double getWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double double getX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double double getY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Double java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float double getHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float double getWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float double getX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float double getY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Ellipse2D.Float java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.EllipseIterator EllipseIterator(java.awt.geom.Ellipse2D, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.EllipseIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.EllipseIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.FlatteningPathIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.FlatteningPathIterator int getRecursionLimit()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.GeneralPath GeneralPath(java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D Line2D()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D boolean contains(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D boolean contains(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D boolean contains(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Line2D boolean contains(java.awt.geom.Point2D)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D boolean contains(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Line2D boolean contains(java.awt.geom.Rectangle2D)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D boolean intersects(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D boolean intersectsLine(java.awt.geom.Line2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D boolean linesIntersect(double, double, double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D double ptLineDist(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D double ptLineDistSq(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D double ptLineDistSq(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D double ptSegDist(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D double ptSegDistSq(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D double ptSegDistSq(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D int relativeCCW(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D int relativeCCW(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D void setLine(java.awt.geom.Line2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D void setLine(java.awt.geom.Point2D, java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D void setLine(java.awt.geom.Point2D, java.awt.geom.Point2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D.Double double getX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D.Double double getX2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D.Double double getY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D.Double double getY2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D.Double java.awt.geom.Point2D getP1()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D.Double java.awt.geom.Point2D getP2()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D.Double java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D.Float double getX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D.Float double getX2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D.Float double getY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D.Float double getY2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Line2D.Float java.awt.geom.Point2D getP1()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D.Float java.awt.geom.Point2D getP2()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Line2D.Float java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.LineIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.LineIterator int currentSegment(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.LineIterator int currentSegment(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.LineIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Path2D Path2D()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Path2D boolean contains(java.awt.geom.PathIterator, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D boolean contains(java.awt.geom.PathIterator, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D boolean contains(java.awt.geom.PathIterator, java.awt.geom.Point2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D boolean contains(java.awt.geom.PathIterator, java.awt.geom.Point2D)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D boolean contains(java.awt.geom.PathIterator, java.awt.geom.Rectangle2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D boolean contains(java.awt.geom.PathIterator, java.awt.geom.Rectangle2D)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D boolean contains(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D boolean contains(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D boolean intersects(java.awt.geom.PathIterator, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D boolean intersects(java.awt.geom.PathIterator, java.awt.geom.Rectangle2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D boolean intersects(java.awt.geom.PathIterator, java.awt.geom.Rectangle2D)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D boolean intersects(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Path2D java.awt.Shape createTransformedShape(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Path2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D void append(java.awt.Shape, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D void readObject(java.io.ObjectInputStream, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D void writeObject(java.io.ObjectOutputStream, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double Double(java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double Double(java.awt.Shape, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double double[] cloneCoordsDouble(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Path2D.Double double[] cloneCoordsDouble(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double float[] cloneCoordsFloat(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Path2D.Double float[] cloneCoordsFloat(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D.Double java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Path2D.Double java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double java.awt.geom.Point2D getPoint(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double void append(java.awt.geom.PathIterator, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double void transform(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double.CopyIterator CopyIterator(java.awt.geom.Path2D.Double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Double.TxIterator TxIterator(java.awt.geom.Path2D.Double, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float Float(java.awt.Shape) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float Float(java.awt.Shape, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float double[] cloneCoordsDouble(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Path2D.Float double[] cloneCoordsDouble(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.geom.Path2D.Float float[] cloneCoordsFloat(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Path2D.Float float[] cloneCoordsFloat(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Path2D.Float java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float java.awt.geom.Point2D getPoint(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float void append(java.awt.geom.PathIterator, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float void transform(java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float.CopyIterator CopyIterator(java.awt.geom.Path2D.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Float.TxIterator TxIterator(java.awt.geom.Path2D.Float, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Path2D.Iterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Path2D.Iterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Point2D Point2D()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Point2D boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Point2D double distance(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Point2D double distanceSq(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Point2D double distanceSq(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Point2D void setLocation(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Point2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Point2D.Double double getX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Point2D.Double double getY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Point2D.Double java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Point2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Point2D.Float double getX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Point2D.Float double getY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Point2D.Float java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D QuadCurve2D()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D boolean contains(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D boolean contains(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D boolean intersects(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D boolean inwards(int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D double getFlatness(double[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D double getFlatnessSq(double, double, double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D double getFlatnessSq(double[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D double getFlatnessSq(double[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D int evalQuadratic(double[], int, boolean, boolean, double[], double, double, double) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D int getTag(double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D int solveQuadratic(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D int solveQuadratic(double[], double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void fillEqn(double[], double, double, double, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void setCurve(double[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void setCurve(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void setCurve(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void setCurve(java.awt.geom.Point2D, java.awt.geom.Point2D, java.awt.geom.Point2D) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void setCurve(java.awt.geom.Point2D[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void setCurve(java.awt.geom.QuadCurve2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void subdivide(double[], int, double[], int, double[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void subdivide(double[], int, double[], int, double[], int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void subdivide(double[], int, double[], int, double[], int) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void subdivide(java.awt.geom.QuadCurve2D, java.awt.geom.QuadCurve2D) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void subdivide(java.awt.geom.QuadCurve2D, java.awt.geom.QuadCurve2D) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void subdivide(java.awt.geom.QuadCurve2D, java.awt.geom.QuadCurve2D, java.awt.geom.QuadCurve2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void subdivide(java.awt.geom.QuadCurve2D, java.awt.geom.QuadCurve2D, java.awt.geom.QuadCurve2D) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D void subdivide(java.awt.geom.QuadCurve2D, java.awt.geom.QuadCurve2D, java.awt.geom.QuadCurve2D) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double double getCtrlX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double double getCtrlY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double double getX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double double getX2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double double getY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double double getY2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double java.awt.geom.Point2D getCtrlPt()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double java.awt.geom.Point2D getP1()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double java.awt.geom.Point2D getP2()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Double java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float double getCtrlX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float double getCtrlY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float double getX1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float double getX2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float double getY1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float double getY2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float java.awt.geom.Point2D getCtrlPt()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float java.awt.geom.Point2D getP1()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float java.awt.geom.Point2D getP2()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadCurve2D.Float java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.QuadIterator int currentSegment(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadIterator int currentSegment(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.QuadIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RectIterator RectIterator(java.awt.geom.Rectangle2D, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RectIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D Rectangle2D()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.Rectangle2D boolean intersectsLine(java.awt.geom.Line2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D int outcode(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D void add(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D void add(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D void intersect(java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D void intersect(java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D void intersect(java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D void setRect(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D void union(java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D void union(java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D void union(java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D, java.awt.geom.Rectangle2D) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double double getHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double double getWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double double getX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double double getY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double int outcode(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double java.awt.geom.Rectangle2D createIntersection(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double java.awt.geom.Rectangle2D createIntersection(java.awt.geom.Rectangle2D)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Double void setRect(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float double getHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float double getWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float double getX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float double getY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float int outcode(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float java.awt.geom.Rectangle2D createIntersection(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float java.awt.geom.Rectangle2D createIntersection(java.awt.geom.Rectangle2D)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float java.awt.geom.Rectangle2D createUnion(java.awt.geom.Rectangle2D)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.Rectangle2D.Float void setRect(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape RectangularShape()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RectangularShape boolean contains(java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape boolean contains(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape boolean intersects(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape java.awt.Rectangle getBounds()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape java.awt.geom.Rectangle2D getFrame()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape void setFrame(java.awt.geom.Point2D, java.awt.geom.Dimension2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape void setFrame(java.awt.geom.Point2D, java.awt.geom.Dimension2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape void setFrame(java.awt.geom.Rectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape void setFrameFromCenter(java.awt.geom.Point2D, java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape void setFrameFromCenter(java.awt.geom.Point2D, java.awt.geom.Point2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape void setFrameFromDiagonal(java.awt.geom.Point2D, java.awt.geom.Point2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RectangularShape void setFrameFromDiagonal(java.awt.geom.Point2D, java.awt.geom.Point2D) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RoundRectIterator RoundRectIterator(java.awt.geom.RoundRectangle2D, java.awt.geom.AffineTransform) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RoundRectIterator boolean isDone()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectIterator int getWindingRule()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D RoundRectangle2D()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D int classify(double, double, double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D java.awt.geom.PathIterator getPathIterator(java.awt.geom.AffineTransform)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D void setRoundRect(java.awt.geom.RoundRectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double Double()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double double getArcHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double double getArcWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double double getHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double double getWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double double getX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double double getY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Double void setRoundRect(java.awt.geom.RoundRectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float Float()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float double getArcHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float double getArcWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float double getHeight()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float double getWidth()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float double getX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float double getY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float java.awt.geom.Rectangle2D getBounds2D()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.geom.RoundRectangle2D.Float void setRoundRect(java.awt.geom.RoundRectangle2D) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
