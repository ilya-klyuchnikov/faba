<root>
  <item name="java.awt.dnd.DnDConstants DnDConstants()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DnDEventMulticaster java.awt.dnd.DragSourceListener add(java.awt.dnd.DragSourceListener, java.awt.dnd.DragSourceListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DnDEventMulticaster java.awt.dnd.DragSourceListener remove(java.awt.dnd.DragSourceListener, java.awt.dnd.DragSourceListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DnDEventMulticaster java.awt.dnd.DragSourceMotionListener add(java.awt.dnd.DragSourceMotionListener, java.awt.dnd.DragSourceMotionListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DnDEventMulticaster java.awt.dnd.DragSourceMotionListener remove(java.awt.dnd.DragSourceMotionListener, java.awt.dnd.DragSourceMotionListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DnDEventMulticaster java.util.EventListener addInternal(java.util.EventListener, java.util.EventListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DnDEventMulticaster java.util.EventListener addInternal(java.util.EventListener, java.util.EventListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.dnd.DnDEventMulticaster java.util.EventListener removeInternal(java.util.EventListener, java.util.EventListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DnDEventMulticaster java.util.EventListener removeInternal(java.util.EventListener, java.util.EventListener)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.dnd.DnDEventMulticaster void save(java.io.ObjectOutputStream, java.lang.String, java.util.EventListener) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragGestureEvent DragGestureEvent(java.awt.dnd.DragGestureRecognizer, int, java.awt.Point, java.util.List&lt;? extends java.awt.event.InputEvent&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragGestureEvent DragGestureEvent(java.awt.dnd.DragGestureRecognizer, int, java.awt.Point, java.util.List&lt;? extends java.awt.event.InputEvent&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragGestureEvent DragGestureEvent(java.awt.dnd.DragGestureRecognizer, int, java.awt.Point, java.util.List&lt;? extends java.awt.event.InputEvent&gt;) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragGestureEvent int getDragAction()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragGestureEvent java.awt.Component getComponent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragGestureEvent java.awt.Point getDragOrigin()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragGestureEvent java.awt.dnd.DragSource getDragSource()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragGestureEvent void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragGestureEvent void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragGestureRecognizer DragGestureRecognizer(java.awt.dnd.DragSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragGestureRecognizer DragGestureRecognizer(java.awt.dnd.DragSource, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragGestureRecognizer DragGestureRecognizer(java.awt.dnd.DragSource, java.awt.Component, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragGestureRecognizer DragGestureRecognizer(java.awt.dnd.DragSource, java.awt.Component, int, java.awt.dnd.DragGestureListener) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragGestureRecognizer DragGestureRecognizer(java.awt.dnd.DragSource, java.awt.Component, int, java.awt.dnd.DragGestureListener) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragGestureRecognizer int getSourceActions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragGestureRecognizer java.awt.Component getComponent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragGestureRecognizer java.awt.dnd.DragSource getDragSource()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragGestureRecognizer void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragGestureRecognizer void setSourceActions(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.dnd.DragGestureRecognizer void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSource java.awt.datatransfer.FlavorMap getFlavorMap()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSource java.awt.dnd.DragSourceContext createDragSourceContext(java.awt.dnd.peer.DragSourceContextPeer, java.awt.dnd.DragGestureEvent, java.awt.Cursor, java.awt.Image, java.awt.Point, java.awt.datatransfer.Transferable, java.awt.dnd.DragSourceListener) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSource java.awt.dnd.DragSourceContext createDragSourceContext(java.awt.dnd.peer.DragSourceContextPeer, java.awt.dnd.DragGestureEvent, java.awt.Cursor, java.awt.Image, java.awt.Point, java.awt.datatransfer.Transferable, java.awt.dnd.DragSourceListener) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSource java.awt.dnd.DragSourceContext createDragSourceContext(java.awt.dnd.peer.DragSourceContextPeer, java.awt.dnd.DragGestureEvent, java.awt.Cursor, java.awt.Image, java.awt.Point, java.awt.datatransfer.Transferable, java.awt.dnd.DragSourceListener) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSource java.awt.dnd.DragSourceContext createDragSourceContext(java.awt.dnd.peer.DragSourceContextPeer, java.awt.dnd.DragGestureEvent, java.awt.Cursor, java.awt.Image, java.awt.Point, java.awt.datatransfer.Transferable, java.awt.dnd.DragSourceListener) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSource java.awt.dnd.DragSourceContext createDragSourceContext(java.awt.dnd.peer.DragSourceContextPeer, java.awt.dnd.DragGestureEvent, java.awt.Cursor, java.awt.Image, java.awt.Point, java.awt.datatransfer.Transferable, java.awt.dnd.DragSourceListener)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSource void addDragSourceListener(java.awt.dnd.DragSourceListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSource void addDragSourceMotionListener(java.awt.dnd.DragSourceMotionListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSource void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSource void removeDragSourceListener(java.awt.dnd.DragSourceListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSource void removeDragSourceMotionListener(java.awt.dnd.DragSourceMotionListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSource void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter DragSourceAdapter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter void dragDropEnd(java.awt.dnd.DragSourceDropEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter void dragDropEnd(java.awt.dnd.DragSourceDropEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter void dragEnter(java.awt.dnd.DragSourceDragEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter void dragEnter(java.awt.dnd.DragSourceDragEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter void dragExit(java.awt.dnd.DragSourceEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter void dragExit(java.awt.dnd.DragSourceEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter void dragMouseMoved(java.awt.dnd.DragSourceDragEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter void dragMouseMoved(java.awt.dnd.DragSourceDragEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter void dragOver(java.awt.dnd.DragSourceDragEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter void dragOver(java.awt.dnd.DragSourceDragEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter void dropActionChanged(java.awt.dnd.DragSourceDragEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSourceAdapter void dropActionChanged(java.awt.dnd.DragSourceDragEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext DragSourceContext(java.awt.dnd.peer.DragSourceContextPeer, java.awt.dnd.DragGestureEvent, java.awt.Cursor, java.awt.Image, java.awt.Point, java.awt.datatransfer.Transferable, java.awt.dnd.DragSourceListener) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext DragSourceContext(java.awt.dnd.peer.DragSourceContextPeer, java.awt.dnd.DragGestureEvent, java.awt.Cursor, java.awt.Image, java.awt.Point, java.awt.datatransfer.Transferable, java.awt.dnd.DragSourceListener) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext DragSourceContext(java.awt.dnd.peer.DragSourceContextPeer, java.awt.dnd.DragGestureEvent, java.awt.Cursor, java.awt.Image, java.awt.Point, java.awt.datatransfer.Transferable, java.awt.dnd.DragSourceListener) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext DragSourceContext(java.awt.dnd.peer.DragSourceContextPeer, java.awt.dnd.DragGestureEvent, java.awt.Cursor, java.awt.Image, java.awt.Point, java.awt.datatransfer.Transferable, java.awt.dnd.DragSourceListener) 5">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext int getSourceActions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext java.awt.Cursor getCursor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext java.awt.datatransfer.Transferable getTransferable()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext java.awt.dnd.DragGestureEvent getTrigger()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext void addDragSourceListener(java.awt.dnd.DragSourceListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext void dragEnter(java.awt.dnd.DragSourceDragEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext void dragOver(java.awt.dnd.DragSourceDragEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext void dropActionChanged(java.awt.dnd.DragSourceDragEvent) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext.1 1(java.awt.dnd.DragSourceContext)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext.1 boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext.1 boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;false;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext.1 java.awt.datatransfer.DataFlavor[] getTransferDataFlavors()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceContext.1 java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DragSourceDragEvent DragSourceDragEvent(java.awt.dnd.DragSourceContext, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceDragEvent DragSourceDragEvent(java.awt.dnd.DragSourceContext, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceDragEvent int getGestureModifiers()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceDragEvent int getGestureModifiersEx()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceDragEvent int getTargetActions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceDragEvent int getUserAction()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceDragEvent void setNewModifiers()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.dnd.DragSourceDragEvent void setOldModifiers()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.dnd.DragSourceDropEvent DragSourceDropEvent(java.awt.dnd.DragSourceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceDropEvent DragSourceDropEvent(java.awt.dnd.DragSourceContext, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceDropEvent DragSourceDropEvent(java.awt.dnd.DragSourceContext, int, boolean, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceDropEvent boolean getDropSuccess()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceDropEvent int getDropAction()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceEvent DragSourceEvent(java.awt.dnd.DragSourceContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceEvent DragSourceEvent(java.awt.dnd.DragSourceContext, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DragSourceEvent int getX()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DragSourceEvent int getY()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTarget DropTarget(java.awt.Component, int, java.awt.dnd.DropTargetListener) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTarget DropTarget(java.awt.Component, int, java.awt.dnd.DropTargetListener, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTarget DropTarget(java.awt.Component, int, java.awt.dnd.DropTargetListener, boolean, java.awt.datatransfer.FlavorMap) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTarget DropTarget(java.awt.Component, int, java.awt.dnd.DropTargetListener, boolean, java.awt.datatransfer.FlavorMap) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTarget DropTarget(java.awt.Component, java.awt.dnd.DropTargetListener) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTarget boolean isActive()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTarget int getDefaultActions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTarget java.awt.Component getComponent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTarget java.awt.datatransfer.FlavorMap getFlavorMap()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTarget java.awt.dnd.DropTarget.DropTargetAutoScroller createDropTargetAutoScroller(java.awt.Component, java.awt.Point)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTarget java.awt.dnd.DropTargetContext createDropTargetContext()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTarget java.awt.dnd.DropTargetContext getDropTargetContext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTarget void addDropTargetListener(java.awt.dnd.DropTargetListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTarget void doSetDefaultActions(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.dnd.DropTarget void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTarget void removeDropTargetListener(java.awt.dnd.DropTargetListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTarget void removeNotify(java.awt.peer.ComponentPeer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTarget void setFlavorMap(java.awt.datatransfer.FlavorMap) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTarget void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTarget.DropTargetAutoScroller void actionPerformed(java.awt.event.ActionEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTargetAdapter DropTargetAdapter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetAdapter void dragEnter(java.awt.dnd.DropTargetDragEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTargetAdapter void dragEnter(java.awt.dnd.DropTargetDragEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetAdapter void dragExit(java.awt.dnd.DropTargetEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTargetAdapter void dragExit(java.awt.dnd.DropTargetEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetAdapter void dragOver(java.awt.dnd.DropTargetDragEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTargetAdapter void dragOver(java.awt.dnd.DropTargetDragEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetAdapter void dropActionChanged(java.awt.dnd.DropTargetDragEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.DropTargetAdapter void dropActionChanged(java.awt.dnd.DropTargetDragEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetContext DropTargetContext(java.awt.dnd.DropTarget)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.dnd.DropTargetContext java.awt.datatransfer.Transferable createTransferableProxy(java.awt.datatransfer.Transferable, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTargetContext java.awt.dnd.DropTarget getDropTarget()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetContext java.awt.dnd.peer.DropTargetContextPeer getDropTargetContextPeer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetContext java.util.List&lt;java.awt.datatransfer.DataFlavor&gt; getCurrentDataFlavorsAsList()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTargetContext void addNotify(java.awt.dnd.peer.DropTargetContextPeer)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.dnd.DropTargetContext void removeNotify()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.awt.dnd.DropTargetDragEvent DropTargetDragEvent(java.awt.dnd.DropTargetContext, java.awt.Point, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTargetDragEvent DropTargetDragEvent(java.awt.dnd.DropTargetContext, java.awt.Point, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTargetDragEvent int getDropAction()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetDragEvent int getSourceActions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetDragEvent java.awt.Point getLocation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetDropEvent DropTargetDropEvent(java.awt.dnd.DropTargetContext, java.awt.Point, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTargetDropEvent DropTargetDropEvent(java.awt.dnd.DropTargetContext, java.awt.Point, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTargetDropEvent DropTargetDropEvent(java.awt.dnd.DropTargetContext, java.awt.Point, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTargetDropEvent DropTargetDropEvent(java.awt.dnd.DropTargetContext, java.awt.Point, int, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTargetDropEvent boolean isLocalTransfer()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetDropEvent int getDropAction()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetDropEvent int getSourceActions()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetDropEvent java.awt.Point getLocation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.DropTargetEvent DropTargetEvent(java.awt.dnd.DropTargetContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.DropTargetEvent java.awt.dnd.DropTargetContext getDropTargetContext()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer MouseDragGestureRecognizer(java.awt.dnd.DragSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer MouseDragGestureRecognizer(java.awt.dnd.DragSource, java.awt.Component) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer MouseDragGestureRecognizer(java.awt.dnd.DragSource, java.awt.Component, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer MouseDragGestureRecognizer(java.awt.dnd.DragSource, java.awt.Component, int, java.awt.dnd.DragGestureListener) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer MouseDragGestureRecognizer(java.awt.dnd.DragSource, java.awt.Component, int, java.awt.dnd.DragGestureListener) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mouseClicked(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mouseClicked(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mouseDragged(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mouseDragged(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mouseEntered(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mouseEntered(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mouseExited(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mouseExited(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mouseMoved(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mouseMoved(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mousePressed(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mousePressed(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mouseReleased(java.awt.event.MouseEvent) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.MouseDragGestureRecognizer void mouseReleased(java.awt.event.MouseEvent)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.SerializationTester SerializationTester()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.SerializationTester boolean test(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.dnd.SerializationTester boolean test(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.dnd.SerializationTester.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.awt.dnd.SerializationTester.1 void write(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
</root>
