<root>
  <item name="java.awt.datatransfer.Clipboard boolean isDataFlavorAvailable(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.Clipboard java.awt.datatransfer.Transferable getContents(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.Clipboard java.lang.Object getData(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.Clipboard java.util.Set getAvailableDataFlavorSet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.Clipboard void addFlavorListener(java.awt.datatransfer.FlavorListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.Clipboard void removeFlavorListener(java.awt.datatransfer.FlavorListener) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.Class&lt;?&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.String, java.lang.String, java.awt.datatransfer.MimeTypeParameterList, java.lang.Class, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.String, java.lang.String, java.awt.datatransfer.MimeTypeParameterList, java.lang.Class, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.String, java.lang.String, java.awt.datatransfer.MimeTypeParameterList, java.lang.Class, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.String, java.lang.String, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor DataFlavor(java.lang.String, java.lang.String, java.lang.ClassLoader) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor boolean equals(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor boolean equals(java.awt.datatransfer.DataFlavor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.DataFlavor boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.DataFlavor boolean equals(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor boolean equals(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.DataFlavor boolean isMimeTypeEqual(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor boolean isMimeTypeEqual(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor java.awt.datatransfer.DataFlavor createConstant(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor java.awt.datatransfer.DataFlavor getTextPlainUnicodeFlavor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor java.awt.datatransfer.DataFlavor selectBestTextFlavor(java.awt.datatransfer.DataFlavor[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor java.awt.datatransfer.DataFlavor selectBestTextFlavor(java.awt.datatransfer.DataFlavor[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.DataFlavor java.io.Reader getReaderForText(java.awt.datatransfer.Transferable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor java.lang.String getParameter(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor java.lang.String normalizeMimeType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.DataFlavor java.lang.String normalizeMimeTypeParameter(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor java.lang.String normalizeMimeTypeParameter(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.DataFlavor java.lang.String paramString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor void initialize(java.lang.String, java.lang.String, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor void initialize(java.lang.String, java.lang.String, java.lang.ClassLoader) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor void readExternal(java.io.ObjectInput) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor void writeExternal(java.io.ObjectOutput) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor.TextFlavorComparator int compare(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.DataFlavor.TextFlavorComparator int compare(java.lang.Object, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.FlavorEvent FlavorEvent(java.awt.datatransfer.Clipboard) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeType MimeType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeType MimeType(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeType MimeType(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeType MimeType(java.lang.String, java.lang.String, java.awt.datatransfer.MimeTypeParameterList) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeType MimeType(java.lang.String, java.lang.String, java.awt.datatransfer.MimeTypeParameterList) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeType MimeType(java.lang.String, java.lang.String, java.awt.datatransfer.MimeTypeParameterList) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeType boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.MimeType boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.MimeType boolean isValidToken(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeType boolean match(java.awt.datatransfer.MimeType) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.MimeType boolean match(java.awt.datatransfer.MimeType)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.MimeType boolean match(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.MimeType boolean match(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.MimeType java.lang.String getBaseType()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeType java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeType void parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeType void readExternal(java.io.ObjectInput) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeType void writeExternal(java.io.ObjectOutput) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeTypeParameterList boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.MimeTypeParameterList boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.MimeTypeParameterList int skipWhiteSpace(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeTypeParameterList java.lang.String get(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeTypeParameterList java.lang.String quote(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeTypeParameterList java.lang.String quote(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.MimeTypeParameterList java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeTypeParameterList java.lang.String unquote(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeTypeParameterList java.lang.String unquote(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeTypeParameterList void parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeTypeParameterList void remove(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.MimeTypeParameterList void set(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.StringSelection boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.StringSelection java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.StringSelection void lostOwnership(java.awt.datatransfer.Clipboard, java.awt.datatransfer.Transferable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.StringSelection void lostOwnership(java.awt.datatransfer.Clipboard, java.awt.datatransfer.Transferable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap boolean continueLine(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap boolean isJavaMIMEType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap boolean isJavaMIMEType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.awt.datatransfer.FlavorMap getDefaultFlavorMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.lang.String decodeJavaMIMEType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.lang.String encodeDataFlavor(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.lang.String encodeDataFlavor(java.awt.datatransfer.DataFlavor)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.lang.String encodeJavaMIMEType(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.lang.String encodeJavaMIMEType(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.lang.String loadConvert(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.lang.String loadConvert(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.util.List flavorToNativeLookup(java.awt.datatransfer.DataFlavor, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.util.List nativeToFlavorLookup(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.util.List&lt;java.lang.String&gt; getNativesForFlavor(java.awt.datatransfer.DataFlavor)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.util.Map&lt;java.awt.datatransfer.DataFlavor,java.lang.String&gt; getNativesForFlavors(java.awt.datatransfer.DataFlavor[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap java.util.Map&lt;java.lang.String,java.awt.datatransfer.DataFlavor&gt; getFlavorsForNatives(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap void addFlavorForUnencodedNative(java.lang.String, java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap void addFlavorForUnencodedNative(java.lang.String, java.awt.datatransfer.DataFlavor) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap void addUnencodedNativeForFlavor(java.awt.datatransfer.DataFlavor, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap void addUnencodedNativeForFlavor(java.awt.datatransfer.DataFlavor, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap void parseAndStoreReader(java.io.BufferedReader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap void setFlavorsForNative(java.lang.String, java.awt.datatransfer.DataFlavor[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap void setFlavorsForNative(java.lang.String, java.awt.datatransfer.DataFlavor[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap void setNativesForFlavor(java.awt.datatransfer.DataFlavor, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap void setNativesForFlavor(java.awt.datatransfer.DataFlavor, java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.SystemFlavorMap void store(java.lang.Object, java.lang.Object, java.util.Map) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.awt.datatransfer.UnsupportedFlavorException UnsupportedFlavorException(java.awt.datatransfer.DataFlavor) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
