<root>
  <item name="java.security.AccessControlContext AccessControlContext(java.security.AccessControlContext, java.security.DomainCombiner) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AccessControlContext AccessControlContext(java.security.ProtectionDomain[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AccessControlContext AccessControlContext(java.security.ProtectionDomain[], java.security.DomainCombiner) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.AccessControlContext boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.AccessControlContext boolean isPrivileged()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AccessControlContext java.security.AccessControlContext goCombiner(java.security.ProtectionDomain[], java.security.AccessControlContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AccessControlContext java.security.AccessControlContext goCombiner(java.security.ProtectionDomain[], java.security.AccessControlContext)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AccessControlContext java.security.DomainCombiner getAssignedCombiner()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.AccessControlContext java.security.ProtectionDomain[] getContext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AccessControlContext void checkPermission(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AccessControlContext.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.AccessControlContext.1 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.AccessControlException java.security.Permission getPermission()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AccessController AccessController()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AccessController java.security.AccessControlContext preserveCombiner(java.security.DomainCombiner, java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.AccessController java.security.AccessControlContext preserveCombiner(java.security.DomainCombiner, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AccessController void checkPermission(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AlgorithmParameterGenerator java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AlgorithmParameterGenerator java.security.AlgorithmParameterGenerator getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AlgorithmParameterGenerator java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AlgorithmParameterGeneratorSpi AlgorithmParameterGeneratorSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AlgorithmParameters java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AlgorithmParameters java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AlgorithmParameters java.security.AlgorithmParameters getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AlgorithmParameters java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AlgorithmParametersSpi AlgorithmParametersSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermission AllPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.AllPermission AllPermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.AllPermission boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.AllPermission boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermission boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.AllPermission boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;true;null-&gt;true&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermission int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermission java.lang.String getActions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AllPermission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AllPermissionCollection boolean access$000(java.security.AllPermissionCollection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AllPermissionCollection boolean access$000(java.security.AllPermissionCollection)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermissionCollection boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.AllPermissionCollection boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.AllPermissionCollection java.util.Enumeration&lt;java.security.Permission&gt; elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AllPermissionCollection void add(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.AllPermissionCollection.1 boolean hasMoreElements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.BasicPermission BasicPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.BasicPermission BasicPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.BasicPermission BasicPermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.BasicPermission boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.BasicPermission boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.BasicPermission boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.security.BasicPermission java.lang.String getActions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.BasicPermission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.BasicPermission void init(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.BasicPermission void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.BasicPermissionCollection boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.BasicPermissionCollection boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.security.BasicPermissionCollection java.util.Enumeration&lt;java.security.Permission&gt; elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.BasicPermissionCollection void add(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.BasicPermissionCollection void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.BasicPermissionCollection void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.CodeSigner CodeSigner(java.security.cert.CertPath, java.security.Timestamp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.CodeSigner boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.CodeSigner boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.security.CodeSigner java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.CodeSigner java.security.Timestamp getTimestamp()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.CodeSigner java.security.cert.CertPath getSignerCertPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.CodeSigner void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.CodeSource CodeSource(java.net.URL, java.security.CodeSigner[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.CodeSource CodeSource(java.net.URL, java.security.cert.Certificate[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.CodeSource boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.CodeSource boolean implies(java.security.CodeSource) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.CodeSource boolean implies(java.security.CodeSource)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.security.CodeSource boolean matchLocation(java.security.CodeSource) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.CodeSource java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.CodeSource java.net.URL getLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.CodeSource java.security.CodeSigner[] convertCertArrayToSignerArray(java.security.cert.Certificate[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.CodeSource java.security.CodeSigner[] convertCertArrayToSignerArray(java.security.cert.Certificate[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.CodeSource java.security.CodeSigner[] getCodeSigners()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.CodeSource java.security.cert.Certificate[] getCertificates()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.CodeSource void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.CodeSource void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.DigestInputStream java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.DigestInputStream java.security.MessageDigest getMessageDigest()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.DigestOutputStream java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.DigestOutputStream java.security.MessageDigest getMessageDigest()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.GuardedObject void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Identity boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Identity boolean identityEquals(java.security.Identity) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Identity boolean keyEquals(java.security.Key, java.security.Key) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Identity boolean keyEquals(java.security.Key, java.security.Key) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Identity java.lang.String getInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Identity java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Identity java.lang.String printCertificates()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Identity java.lang.String printKeys()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Identity java.security.Certificate[] certificates()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Identity java.security.IdentityScope getScope()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Identity java.security.PublicKey getPublicKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Identity void addCertificate(java.security.Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.IdentityScope java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.IdentityScope java.security.Identity getIdentity(java.security.Principal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.IdentityScope void setSystemScope(java.security.IdentityScope) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.IdentityScope.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyFactory java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyFactory java.security.KeyFactory getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyFactory java.security.KeyFactorySpi nextSpi(java.security.KeyFactorySpi)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyFactorySpi KeyFactorySpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPair java.security.PrivateKey getPrivate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPair java.security.PublicKey getPublic()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGenerator java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGenerator java.security.KeyPair genKeyPair()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyPairGenerator java.security.KeyPair generateKeyPair()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyPairGenerator java.security.KeyPairGenerator getInstance(sun.security.jca.GetInstance.Instance, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyPairGenerator void disableFailover()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGenerator void initialize(int, java.security.SecureRandom) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyPairGenerator void initialize(int, java.security.SecureRandom)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGenerator void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyPairGenerator void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyPairGenerator void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGenerator.Delegate Delegate(sun.security.jca.GetInstance.Instance, java.util.Iterator&lt;java.security.Provider.Service&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyPairGenerator.Delegate java.security.KeyPairGeneratorSpi nextSpi(java.security.KeyPairGeneratorSpi, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyPairGeneratorSpi KeyPairGeneratorSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyPairGeneratorSpi void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyPairGeneratorSpi void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyRep KeyRep(java.security.KeyRep.Type, java.lang.String, java.lang.String, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyRep KeyRep(java.security.KeyRep.Type, java.lang.String, java.lang.String, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyRep KeyRep(java.security.KeyRep.Type, java.lang.String, java.lang.String, byte[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyRep KeyRep(java.security.KeyRep.Type, java.lang.String, java.lang.String, byte[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore boolean access$000(java.security.KeyStore) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore boolean access$000(java.security.KeyStore)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore boolean entryInstanceOf(java.lang.String, java.lang.Class&lt;? extends java.security.KeyStore.Entry&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore boolean entryInstanceOf(java.lang.String, java.lang.Class&lt;? extends java.security.KeyStore.Entry&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore java.security.KeyStore getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore java.security.KeyStore getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore java.security.KeyStore.Entry getEntry(java.lang.String, java.security.KeyStore.ProtectionParameter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore void setEntry(java.lang.String, java.security.KeyStore.Entry, java.security.KeyStore.ProtectionParameter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore void setEntry(java.lang.String, java.security.KeyStore.Entry, java.security.KeyStore.ProtectionParameter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.Builder Builder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.io.File, java.security.KeyStore.ProtectionParameter)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.security.KeyStore.ProtectionParameter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.security.KeyStore.ProtectionParameter) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.lang.String, java.security.Provider, java.security.KeyStore.ProtectionParameter)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.security.KeyStore, java.security.KeyStore.ProtectionParameter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.security.KeyStore, java.security.KeyStore.ProtectionParameter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder java.security.KeyStore.Builder newInstance(java.security.KeyStore, java.security.KeyStore.ProtectionParameter)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder.1 java.security.KeyStore.ProtectionParameter getProtectionParameter(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder.2 boolean access$702(java.security.KeyStore.Builder.2, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder.2 java.io.IOException access$602(java.security.KeyStore.Builder.2, java.io.IOException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder.2 java.io.IOException access$602(java.security.KeyStore.Builder.2, java.io.IOException)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.Builder.2 java.security.KeyStore.ProtectionParameter getProtectionParameter(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder.2.1 java.security.KeyStore run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder java.io.File access$400(java.security.KeyStore.Builder.FileBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder java.io.File access$400(java.security.KeyStore.Builder.FileBuilder)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder java.lang.String access$300(java.security.KeyStore.Builder.FileBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder java.lang.String access$300(java.security.KeyStore.Builder.FileBuilder)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder java.security.KeyStore.ProtectionParameter access$100(java.security.KeyStore.Builder.FileBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder java.security.KeyStore.ProtectionParameter access$100(java.security.KeyStore.Builder.FileBuilder)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder java.security.KeyStore.ProtectionParameter access$502(java.security.KeyStore.Builder.FileBuilder, java.security.KeyStore.ProtectionParameter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder java.security.KeyStore.ProtectionParameter access$502(java.security.KeyStore.Builder.FileBuilder, java.security.KeyStore.ProtectionParameter)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder java.security.KeyStore.ProtectionParameter getProtectionParameter(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder java.security.Provider access$200(java.security.KeyStore.Builder.FileBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder java.security.Provider access$200(java.security.KeyStore.Builder.FileBuilder)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.Builder.FileBuilder.1 java.security.KeyStore run0()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.CallbackHandlerProtection CallbackHandlerProtection(javax.security.auth.callback.CallbackHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.CallbackHandlerProtection javax.security.auth.callback.CallbackHandler getCallbackHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.PasswordProtection PasswordProtection(char[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyStore.PasswordProtection boolean isDestroyed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.PrivateKeyEntry PrivateKeyEntry(java.security.PrivateKey, java.security.cert.Certificate[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.PrivateKeyEntry PrivateKeyEntry(java.security.PrivateKey, java.security.cert.Certificate[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.PrivateKeyEntry java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.PrivateKeyEntry java.security.PrivateKey getPrivateKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.PrivateKeyEntry java.security.cert.Certificate getCertificate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.SecretKeyEntry SecretKeyEntry(javax.crypto.SecretKey) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.SecretKeyEntry java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.SecretKeyEntry javax.crypto.SecretKey getSecretKey()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.SimpleLoadStoreParameter java.security.KeyStore.ProtectionParameter getProtectionParameter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStore.TrustedCertificateEntry TrustedCertificateEntry(java.security.cert.Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.TrustedCertificateEntry java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStore.TrustedCertificateEntry java.security.cert.Certificate getTrustedCertificate()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStoreSpi KeyStoreSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.KeyStoreSpi boolean engineEntryInstanceOf(java.lang.String, java.lang.Class&lt;? extends java.security.KeyStore.Entry&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyStoreSpi java.security.KeyStore.Entry engineGetEntry(java.lang.String, java.security.KeyStore.ProtectionParameter)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyStoreSpi void engineLoad(java.security.KeyStore.LoadStoreParameter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.KeyStoreSpi void engineSetEntry(java.lang.String, java.security.KeyStore.Entry, java.security.KeyStore.ProtectionParameter) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.KeyStoreSpi void engineStore(java.security.KeyStore.LoadStoreParameter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.MessageDigest boolean isEqual(byte[], byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest boolean isEqual(byte[], byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest boolean isEqual(byte[], byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigest int access$200(java.security.MessageDigest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest int access$200(java.security.MessageDigest)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigest int access$202(java.security.MessageDigest, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest int digest(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest java.lang.String access$000(java.security.MessageDigest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest java.lang.String access$000(java.security.MessageDigest)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigest java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest java.security.MessageDigest getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest java.security.Provider access$100(java.security.MessageDigest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest java.security.Provider access$100(java.security.MessageDigest)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigest java.security.Provider access$102(java.security.MessageDigest, java.security.Provider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest java.security.Provider access$102(java.security.MessageDigest, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigest java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigest void update(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest void update(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest void update(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigest.Delegate java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigestSpi MessageDigestSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigestSpi int engineDigest(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.MessageDigestSpi int engineGetDigestLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.MessageDigestSpi void engineUpdate(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Permission java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Permission java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Permission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Permission void checkGuard(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.PermissionCollection PermissionCollection()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.PermissionCollection boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.PermissionCollection java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Permissions java.security.PermissionCollection getPermissionCollection(java.security.Permission, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Permissions java.security.PermissionCollection getUnresolvedPermissions(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Permissions java.util.Enumeration&lt;java.security.Permission&gt; elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Permissions void add(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Permissions void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Permissions void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.PermissionsEnumerator java.util.Enumeration&lt;java.security.Permission&gt; getNextEnumWithMore()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.PermissionsHash java.util.Enumeration&lt;java.security.Permission&gt; elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.PermissionsHash void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.PermissionsHash void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Policy Policy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Policy boolean implies(java.security.ProtectionDomain, java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Policy boolean isSet()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Policy java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Policy java.security.PermissionCollection getPermissions(java.security.CodeSource) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Policy java.security.PermissionCollection getPermissions(java.security.CodeSource)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Policy java.security.PermissionCollection getPermissions(java.security.ProtectionDomain) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Policy java.security.PermissionCollection getPermissions(java.security.ProtectionDomain)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Policy java.security.Policy getInstance(java.lang.String, java.security.Policy.Parameters)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Policy java.security.Policy getInstance(java.lang.String, java.security.Policy.Parameters, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Policy java.security.Policy getInstance(java.lang.String, java.security.Policy.Parameters, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Policy java.security.Policy getInstance(java.lang.String, java.security.Policy.Parameters, java.security.Provider) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Policy java.security.Policy getInstance(java.lang.String, java.security.Policy.Parameters, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Policy java.security.Policy handleException(java.security.NoSuchAlgorithmException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Policy java.security.Policy.Parameters getParameters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Policy java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Policy sun.security.util.Debug access$000()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Policy void addStaticPerms(java.security.PermissionCollection, java.security.PermissionCollection) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Policy void checkPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Policy void initPolicy(java.security.Policy) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Policy void refresh()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Policy.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Policy.2 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Policy.2 java.security.Policy run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Policy.PolicyDelegate PolicyDelegate(java.security.PolicySpi, java.security.Provider, java.lang.String, java.security.Policy.Parameters, java.security.Policy.1) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Policy.PolicyDelegate java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Policy.PolicyDelegate java.security.Policy.Parameters getParameters()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Policy.PolicyDelegate java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Policy.UnsupportedEmptyCollection java.util.Enumeration&lt;java.security.Permission&gt; elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Policy.UnsupportedEmptyCollection void add(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.PolicySpi PolicySpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.PolicySpi java.security.PermissionCollection engineGetPermissions(java.security.CodeSource) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.PolicySpi java.security.PermissionCollection engineGetPermissions(java.security.CodeSource)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.PolicySpi java.security.PermissionCollection engineGetPermissions(java.security.ProtectionDomain) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.PolicySpi java.security.PermissionCollection engineGetPermissions(java.security.ProtectionDomain)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.PolicySpi void engineRefresh()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.PrivilegedActionException java.lang.Exception getException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.PrivilegedActionException java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.ProtectionDomain ProtectionDomain(java.security.CodeSource, java.security.PermissionCollection) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.ProtectionDomain ProtectionDomain(java.security.CodeSource, java.security.PermissionCollection, java.lang.ClassLoader, java.security.Principal[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.ProtectionDomain ProtectionDomain(java.security.CodeSource, java.security.PermissionCollection, java.lang.ClassLoader, java.security.Principal[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.ProtectionDomain java.lang.ClassLoader getClassLoader()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.ProtectionDomain java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.ProtectionDomain java.security.CodeSource getCodeSource()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.ProtectionDomain java.security.PermissionCollection getPermissions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.ProtectionDomain.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.ProtectionDomain.1 T doIntersectionPrivilege(java.security.PrivilegedAction&lt;T&gt;, java.security.AccessControlContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.ProtectionDomain.1 T doIntersectionPrivilege(java.security.PrivilegedAction&lt;T&gt;, java.security.AccessControlContext, java.security.AccessControlContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.ProtectionDomain.1 T doIntersectionPrivilege(java.security.PrivilegedAction&lt;T&gt;, java.security.AccessControlContext, java.security.AccessControlContext) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.ProtectionDomain.3 3()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.ProtectionDomain.3 sun.misc.JavaSecurityProtectionDomainAccess.ProtectionDomainCache getProtectionDomainCache()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.ProtectionDomain.3.1 java.security.PermissionCollection get(java.security.ProtectionDomain) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.ProtectionDomain.3.1 void put(java.security.ProtectionDomain, java.security.PermissionCollection) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider double getVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider java.lang.Object implPut(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider java.lang.Object implRemove(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider java.lang.Object put(java.lang.Object, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider java.lang.Object remove(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider java.lang.String getInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider java.lang.String getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider java.lang.String[] getTypeAndAlgorithm(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider java.lang.String[] getTypeAndAlgorithm(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider java.security.Provider.Service getService(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider java.util.Collection&lt;java.lang.Object&gt; values()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider java.util.Map access$1000()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider java.util.Set&lt;java.lang.Object&gt; keySet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void addEngine(java.lang.String, boolean, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void implPutAll(java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void implRemoveService(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider void parseLegacyPut(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void putAll(java.util.Map&lt;?,?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void putPropertyStrings(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void putService(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void removeInvalidServices(java.util.Map&lt;java.security.Provider.ServiceKey,java.security.Provider.Service&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void removePropertyStrings(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider void removeService(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.Service Service(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.util.List&lt;java.lang.String&gt;, java.util.Map&lt;java.lang.String,java.lang.String&gt;) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.Service Service(java.security.Provider, java.security.Provider.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.Service boolean access$000(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service boolean access$000(java.security.Provider.Service)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service boolean isValid()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service boolean supportsParameter(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.Service java.lang.Class getKeyClass(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.Service java.lang.Object newInstance(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.Service java.lang.Object newInstanceGeneric(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.Service java.lang.Object newInstanceGeneric(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.Service java.lang.String access$302(java.security.Provider.Service, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service java.lang.String access$302(java.security.Provider.Service, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.lang.String access$402(java.security.Provider.Service, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service java.lang.String access$402(java.security.Provider.Service, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.lang.String access$602(java.security.Provider.Service, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service java.lang.String access$602(java.security.Provider.Service, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.lang.String getAttribute(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.lang.String getType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.util.List access$700(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service java.util.List access$700(java.security.Provider.Service)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.util.List&lt;java.lang.String&gt; getAliases()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service java.util.Map access$800(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service java.util.Map access$800(java.security.Provider.Service)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.Service void access$500(java.security.Provider.Service, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.Service void addAttribute(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.ServiceKey ServiceKey(java.lang.String, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.ServiceKey ServiceKey(java.lang.String, java.lang.String, boolean, java.security.Provider.1) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.ServiceKey ServiceKey(java.lang.String, java.lang.String, boolean, java.security.Provider.1) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.ServiceKey boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.ServiceKey boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.ServiceKey boolean matches(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.ServiceKey boolean matches(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.ServiceKey boolean matches(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.UString UString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Provider.UString boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Provider.UString boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Provider.UString java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.SecureClassLoader java.lang.Class&lt;?&gt; defineClass(java.lang.String, byte[], int, int, java.security.CodeSource) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.SecureClassLoader java.lang.Class&lt;?&gt; defineClass(java.lang.String, java.nio.ByteBuffer, java.security.CodeSource) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.SecureClassLoader java.security.PermissionCollection getPermissions(java.security.CodeSource) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.SecureClassLoader java.security.PermissionCollection getPermissions(java.security.CodeSource)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SecureClassLoader java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.SecureClassLoader java.security.ProtectionDomain getProtectionDomain(java.security.CodeSource)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.SecureRandom byte[] longToByteArray(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SecureRandom java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.SecureRandom java.lang.String getPrngAlgorithm()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.SecureRandom java.security.Provider getProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SecureRandom java.security.SecureRandom getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SecureRandom java.security.SecureRandomSpi getSecureRandomSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.SecureRandomSpi SecureRandomSpi()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Security Security()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Security boolean isConstraintSatisfied(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security boolean isCriterionSatisfied(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security boolean isCriterionSatisfied(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security boolean isCriterionSatisfied(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security boolean isCriterionSatisfied(java.security.Provider, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security boolean isStandardAttr(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security int addProvider(java.security.Provider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security int insertProviderAt(java.security.Provider, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.io.File securityPropFile(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.io.File securityPropFile(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.lang.String, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.lang.String, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.security.Provider) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.security.Provider, java.lang.Object) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.Object[] getImpl(java.lang.String, java.lang.String, java.security.Provider, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.String getAlgorithmProperty(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.lang.String getAlgorithmProperty(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.lang.String getAlgorithmProperty(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.lang.String getProviderProperty(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.String[] getFilterComponents(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.String[] getFilterComponents(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.lang.String[] getFilterComponents(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.security.Provider getProvider(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.security.Provider getProvider(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.security.Provider[] getProviders(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.security.Provider[] getProviders(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.security.Provider[] getProviders(java.util.Map&lt;java.lang.String,java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.security.Provider[] getProviders(java.util.Map&lt;java.lang.String,java.lang.String&gt;)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.security.Security.ProviderProperty getProviderProperty(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getAllQualifyingCandidates(java.lang.String, java.lang.String, java.security.Provider[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getAllQualifyingCandidates(java.lang.String, java.lang.String, java.security.Provider[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getAllQualifyingCandidates(java.lang.String, java.lang.String, java.security.Provider[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getAllQualifyingCandidates(java.lang.String, java.lang.String, java.security.Provider[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getProvidersNotUsingCache(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.security.Provider[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getProvidersNotUsingCache(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.security.Provider[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getProvidersNotUsingCache(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.security.Provider[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getProvidersNotUsingCache(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.security.Provider[]) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.util.LinkedHashSet&lt;java.security.Provider&gt; getProvidersNotUsingCache(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.security.Provider[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security java.util.Set&lt;java.lang.String&gt; getAlgorithms(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security void invalidateSMCache(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security void removeProvider(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security void setProperty(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Security.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Security.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security.1 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security.2 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security.2 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security.ProviderProperty ProviderProperty()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Security.ProviderProperty ProviderProperty(java.security.Security.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Security.ProviderProperty ProviderProperty(java.security.Security.1)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.SecurityPermission SecurityPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SecurityPermission SecurityPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SecurityPermission SecurityPermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Signature boolean access$200(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature boolean isSpi(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature boolean verify(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature int sign(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature java.lang.String access$000(java.security.Signature) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature java.lang.String access$000(java.security.Signature)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Signature java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Signature java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature java.security.Signature getInstance(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature java.security.Signature getInstance(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature java.security.Signature getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature java.security.Signature getInstance(java.lang.String, java.security.Provider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature java.security.Signature getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature java.security.Signature getInstance(sun.security.jca.GetInstance.Instance, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature java.security.Signature getInstanceRSA(java.security.Provider) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature sun.security.util.Debug access$100()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Signature void chooseFirstProvider()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Signature void initVerify(java.security.cert.Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature void update(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature void update(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature.CipherAdapter java.lang.Object engineGetParameter(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Signature.CipherAdapter void engineSetParameter(java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Signature.CipherAdapter void engineSetParameter(java.lang.String, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Signature.Delegate java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature.Delegate java.security.SignatureSpi newInstance(java.security.Provider.Service) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signature.Delegate void init(java.security.SignatureSpi, int, java.security.Key, java.security.SecureRandom) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SignatureSpi int engineSign(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SignatureSpi void engineSetParameter(java.security.spec.AlgorithmParameterSpec) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.SignatureSpi void engineUpdate(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SignedObject SignedObject(java.io.Serializable, java.security.PrivateKey, java.security.Signature) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SignedObject boolean verify(java.security.PublicKey, java.security.Signature) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SignedObject java.lang.String getAlgorithm()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.SignedObject void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.SignedObject void sign(java.security.PrivateKey, java.security.Signature) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signer java.lang.String printKeys()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signer void setKeyPair(java.security.KeyPair) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Signer.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Signer.1 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Timestamp Timestamp(java.util.Date, java.security.cert.CertPath) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Timestamp Timestamp(java.util.Date, java.security.cert.CertPath) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Timestamp boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.Timestamp boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.security.Timestamp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Timestamp java.security.cert.CertPath getSignerCertPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.Timestamp java.util.Date getTimestamp()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.Timestamp void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.URIParameter URIParameter(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.URIParameter java.net.URI getURI()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.UnresolvedPermission UnresolvedPermission(java.lang.String, java.lang.String, java.lang.String, java.security.cert.Certificate[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.UnresolvedPermission UnresolvedPermission(java.lang.String, java.lang.String, java.lang.String, java.security.cert.Certificate[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.UnresolvedPermission boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.UnresolvedPermission boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.UnresolvedPermission boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;false;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="java.security.UnresolvedPermission java.lang.String getActions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.UnresolvedPermission java.lang.String getUnresolvedActions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.UnresolvedPermission java.lang.String getUnresolvedName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.UnresolvedPermission java.lang.String getUnresolvedType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.security.UnresolvedPermission java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.UnresolvedPermission java.security.Permission resolve(java.security.Permission, java.security.cert.Certificate[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.UnresolvedPermission java.security.Permission resolve(java.security.Permission, java.security.cert.Certificate[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.UnresolvedPermission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.UnresolvedPermission java.security.cert.Certificate[] getUnresolvedCerts()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.UnresolvedPermission void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.UnresolvedPermission void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.UnresolvedPermissionCollection boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.UnresolvedPermissionCollection boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;false;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="java.security.UnresolvedPermissionCollection java.util.Enumeration&lt;java.security.Permission&gt; elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.UnresolvedPermissionCollection java.util.List&lt;java.security.UnresolvedPermission&gt; getUnresolvedPermissions(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.UnresolvedPermissionCollection void add(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.UnresolvedPermissionCollection void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.UnresolvedPermissionCollection void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
