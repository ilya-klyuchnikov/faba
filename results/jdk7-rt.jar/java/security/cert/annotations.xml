<root>
  <item name="java.security.cert.CertPath boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.CertPath java.lang.Object writeReplace()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPath java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathBuilder java.lang.String getDefaultType()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathBuilder java.security.cert.CertPathBuilder getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathBuilder java.security.cert.CertPathBuilder getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathBuilder java.security.cert.CertPathBuilder getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathBuilder java.security.cert.CertPathBuilder getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathBuilder java.security.cert.CertPathBuilder getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathHelperImpl void implSetDateAndTime(java.security.cert.X509CRLSelector, java.util.Date, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathHelperImpl void implSetPathToNames(java.security.cert.X509CertSelector, java.util.Set&lt;sun.security.x509.GeneralNameInterface&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidator java.lang.String getDefaultType()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidator java.security.cert.CertPathValidator getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidator java.security.cert.CertPathValidator getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidator java.security.cert.CertPathValidator getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidator java.security.cert.CertPathValidator getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidator java.security.cert.CertPathValidator getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidatorException CertPathValidatorException(java.lang.String, java.lang.Throwable, java.security.cert.CertPath, int, java.security.cert.CertPathValidatorException.Reason) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertPathValidatorException void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertStore CertStore(java.security.cert.CertStoreSpi, java.security.Provider, java.lang.String, java.security.cert.CertStoreParameters) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.CertStore java.lang.String getDefaultType()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertStore java.security.cert.CertStore getInstance(java.lang.String, java.security.cert.CertStoreParameters)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertStore java.security.cert.CertStore getInstance(java.lang.String, java.security.cert.CertStoreParameters, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertStore java.security.cert.CertStore getInstance(java.lang.String, java.security.cert.CertStoreParameters, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertStore java.security.cert.CertStore handleException(java.security.NoSuchAlgorithmException) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertStoreSpi CertStoreSpi(java.security.cert.CertStoreParameters) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.Certificate boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.Certificate java.lang.Object writeReplace()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateFactory java.security.cert.CertificateFactory getInstance(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateFactory java.security.cert.CertificateFactory getInstance(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateFactory java.security.cert.CertificateFactory getInstance(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateFactory java.security.cert.CertificateFactory getInstance(java.lang.String, java.security.Provider) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateFactory java.security.cert.CertificateFactory getInstance(java.lang.String, java.security.Provider)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateFactorySpi java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.CertificateFactorySpi java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.CertificateFactorySpi java.security.cert.CertPath engineGenerateCertPath(java.io.InputStream, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.CertificateFactorySpi java.security.cert.CertPath engineGenerateCertPath(java.util.List&lt;? extends java.security.cert.Certificate&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map&lt;java.lang.String,java.security.cert.Extension&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map&lt;java.lang.String,java.security.cert.Extension&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map&lt;java.lang.String,java.security.cert.Extension&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException CertificateRevokedException(java.util.Date, java.security.cert.CRLReason, javax.security.auth.x500.X500Principal, java.util.Map&lt;java.lang.String,java.security.cert.Extension&gt;) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException java.lang.String getMessage()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException java.util.Map&lt;java.lang.String,java.security.cert.Extension&gt; getExtensions()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CertificateRevokedException void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CollectionCertStoreParameters CollectionCertStoreParameters(java.util.Collection&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.CollectionCertStoreParameters java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.LDAPCertStoreParameters LDAPCertStoreParameters(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.LDAPCertStoreParameters LDAPCertStoreParameters(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.LDAPCertStoreParameters java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXBuilderParameters PKIXBuilderParameters(java.security.KeyStore, java.security.cert.CertSelector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXBuilderParameters java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathBuilderResult PKIXCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathBuilderResult PKIXCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathBuilderResult PKIXCertPathBuilderResult(java.security.cert.CertPath, java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathBuilderResult java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathValidatorResult PKIXCertPathValidatorResult(java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathValidatorResult PKIXCertPathValidatorResult(java.security.cert.TrustAnchor, java.security.cert.PolicyNode, java.security.PublicKey) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXCertPathValidatorResult java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXParameters PKIXParameters(java.security.KeyStore) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXParameters java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXParameters java.util.List&lt;java.security.cert.CertStore&gt; getCertStores()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXParameters java.util.List&lt;java.security.cert.PKIXCertPathChecker&gt; getCertPathCheckers()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PKIXParameters void addCertPathChecker(java.security.cert.PKIXCertPathChecker) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.PKIXParameters void addCertStore(java.security.cert.CertStore) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.PKIXParameters void setCertPathCheckers(java.util.List&lt;java.security.cert.PKIXCertPathChecker&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.PKIXParameters void setCertStores(java.util.List&lt;java.security.cert.CertStore&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.PKIXParameters void setDate(java.util.Date) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.PKIXParameters void setInitialPolicies(java.util.Set&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.PKIXParameters void setTargetCertConstraints(java.security.cert.CertSelector) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.PKIXParameters void setTrustAnchors(java.util.Set&lt;java.security.cert.TrustAnchor&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.PolicyQualifierInfo PolicyQualifierInfo(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(java.lang.String, java.security.PublicKey, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(java.lang.String, java.security.PublicKey, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(java.lang.String, java.security.PublicKey, byte[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(java.security.cert.X509Certificate, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(java.security.cert.X509Certificate, byte[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(javax.security.auth.x500.X500Principal, java.security.PublicKey, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(javax.security.auth.x500.X500Principal, java.security.PublicKey, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor TrustAnchor(javax.security.auth.x500.X500Principal, java.security.PublicKey, byte[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.TrustAnchor java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.TrustAnchor void setNameConstraints(byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CRL boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CRL java.security.cert.X509CRLEntry getRevokedCertificate(java.security.cert.X509Certificate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLEntry boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CRLSelector boolean match(java.security.cert.CRL) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CRLSelector boolean match(java.security.cert.CRL)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CRLSelector java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLSelector java.util.HashSet&lt;java.lang.Object&gt; cloneAndCheckIssuerNames(java.util.Collection&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLSelector java.util.HashSet&lt;java.lang.Object&gt; cloneIssuerNames(java.util.Collection&lt;java.lang.Object&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLSelector java.util.HashSet&lt;javax.security.auth.x500.X500Principal&gt; parseIssuerNames(java.util.Collection&lt;java.lang.Object&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLSelector void addIssuer(javax.security.auth.x500.X500Principal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLSelector void addIssuerName(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CRLSelector void setDateAndTime(java.util.Date) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CRLSelector void setDateAndTime(java.util.Date, long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CRLSelector void setIssuerNames(java.util.Collection&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CRLSelector void setIssuers(java.util.Collection&lt;javax.security.auth.x500.X500Principal&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector boolean equalNames(java.util.Collection, java.util.Collection) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector boolean equalNames(java.util.Collection, java.util.Collection) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector boolean match(java.security.cert.Certificate) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector boolean match(java.security.cert.Certificate)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector boolean matchBasicConstraints(java.security.cert.X509Certificate)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector boolean matchExcluded(sun.security.x509.GeneralSubtrees) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector boolean matchKeyUsage(java.security.cert.X509Certificate)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector boolean matchPermitted(sun.security.x509.GeneralSubtrees)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector java.lang.String keyUsageToString(boolean[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.security.cert.Extension getExtensionObject(java.security.cert.X509Certificate, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.util.Set&lt;?&gt; cloneSet(java.util.Set&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.util.Set&lt;?&gt; cloneSet(java.util.Set&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.security.cert.X509CertSelector java.util.Set&lt;java.util.List&lt;?&gt;&gt; cloneAndCheckNames(java.util.Collection&lt;java.util.List&lt;?&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.util.Set&lt;java.util.List&lt;?&gt;&gt; cloneNames(java.util.Collection&lt;java.util.List&lt;?&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector java.util.Set&lt;sun.security.x509.GeneralNameInterface&gt; parseNames(java.util.Collection&lt;java.util.List&lt;?&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector sun.security.x509.GeneralNameInterface makeGeneralNameInterface(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector sun.security.x509.GeneralNameInterface makeGeneralNameInterface(int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void addPathToName(int, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void addPathToName(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void addPathToNameInternal(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void addSubjectAlternativeName(int, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void addSubjectAlternativeName(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void addSubjectAlternativeNameInternal(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setAuthorityKeyIdentifier(byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setCertificateValid(java.util.Date) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setExtendedKeyUsage(java.util.Set&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setIssuer(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setKeyUsage(boolean[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setNameConstraints(byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setPathToNames(java.util.Collection&lt;java.util.List&lt;?&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setPolicy(java.util.Set&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setPrivateKeyValid(java.util.Date) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setSubject(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setSubjectAlternativeNames(java.util.Collection&lt;java.util.List&lt;?&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setSubjectKeyIdentifier(byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setSubjectPublicKey(byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setSubjectPublicKey(java.security.PublicKey) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.security.cert.X509CertSelector void setSubjectPublicKeyAlgID(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
