<root>
  <item name="java.net.AbstractPlainDatagramSocketImpl boolean isClosed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainDatagramSocketImpl boolean nativeConnectDisabled()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainDatagramSocketImpl void joinGroup(java.net.SocketAddress, java.net.NetworkInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.AbstractPlainDatagramSocketImpl void leaveGroup(java.net.SocketAddress, java.net.NetworkInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.AbstractPlainDatagramSocketImpl void setOption(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl boolean isClosedOrPending()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainSocketImpl boolean isConnectionReset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainSocketImpl boolean isConnectionResetPending()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainSocketImpl boolean supportsUrgentData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainSocketImpl int getTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.AbstractPlainSocketImpl java.io.OutputStream getOutputStream()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl java.lang.Object getOption(int)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl void connect(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl void connect(java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl void connect(java.net.SocketAddress, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl void connectToAddress(java.net.InetAddress, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.AbstractPlainSocketImpl void setOption(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Authenticator Authenticator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator int getRequestingPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.lang.String getRequestingHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.lang.String getRequestingPrompt()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.lang.String getRequestingProtocol()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.lang.String getRequestingScheme()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.net.Authenticator.RequestorType getRequestorType()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.net.InetAddress getRequestingSite()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator java.net.PasswordAuthentication getPasswordAuthentication()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Authenticator java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String, java.net.InetAddress, int, java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Authenticator java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String, java.net.InetAddress, int, java.lang.String, java.lang.String, java.lang.String, java.net.URL, java.net.Authenticator.RequestorType)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Authenticator java.net.PasswordAuthentication requestPasswordAuthentication(java.net.InetAddress, int, java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Authenticator java.net.URL getRequestingURL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Authenticator void setDefault(java.net.Authenticator) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CacheRequest CacheRequest()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.CacheResponse CacheResponse()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.ContentHandler ContentHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.ContentHandler java.lang.Object getContent(java.net.URLConnection, java.lang.Class[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.ContentHandler java.lang.Object getContent(java.net.URLConnection, java.lang.Class[])">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookieHandler CookieHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.CookieHandler void setDefault(java.net.CookieHandler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookieManager CookieManager(java.net.CookieStore, java.net.CookiePolicy) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookieManager CookieManager(java.net.CookieStore, java.net.CookiePolicy) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookieManager boolean isInPortList(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.CookieManager boolean pathMatches(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookieManager boolean pathMatches(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookieManager boolean pathMatches(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.CookieManager java.net.CookieStore getCookieStore()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.CookieManager java.util.List&lt;java.lang.String&gt; sortByPath(java.util.List&lt;java.net.HttpCookie&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.CookieManager java.util.List&lt;java.lang.String&gt; sortByPath(java.util.List&lt;java.net.HttpCookie&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.CookieManager java.util.Map&lt;java.lang.String,java.util.List&lt;java.lang.String&gt;&gt; get(java.net.URI, java.util.Map&lt;java.lang.String,java.util.List&lt;java.lang.String&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.CookieManager java.util.Map&lt;java.lang.String,java.util.List&lt;java.lang.String&gt;&gt; get(java.net.URI, java.util.Map&lt;java.lang.String,java.util.List&lt;java.lang.String&gt;&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.CookieManager java.util.Map&lt;java.lang.String,java.util.List&lt;java.lang.String&gt;&gt; get(java.net.URI, java.util.Map&lt;java.lang.String,java.util.List&lt;java.lang.String&gt;&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.CookieManager void put(java.net.URI, java.util.Map&lt;java.lang.String,java.util.List&lt;java.lang.String&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.CookieManager void put(java.net.URI, java.util.Map&lt;java.lang.String,java.util.List&lt;java.lang.String&gt;&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.CookieManager void setCookiePolicy(java.net.CookiePolicy) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookieManager.CookiePathComparator CookiePathComparator()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.CookieManager.CookiePathComparator int compare(java.net.HttpCookie, java.net.HttpCookie) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookieManager.CookiePathComparator int compare(java.net.HttpCookie, java.net.HttpCookie) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookieManager.CookiePathComparator int compare(java.net.HttpCookie, java.net.HttpCookie)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.CookiePolicy.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.CookiePolicy.1 boolean shouldAccept(java.net.URI, java.net.HttpCookie) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookiePolicy.1 boolean shouldAccept(java.net.URI, java.net.HttpCookie) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookiePolicy.1 boolean shouldAccept(java.net.URI, java.net.HttpCookie)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null,_-&gt;true;_,!null-&gt;true;_,null-&gt;true;null,_-&gt;true&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="java.net.CookiePolicy.2 2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.CookiePolicy.2 boolean shouldAccept(java.net.URI, java.net.HttpCookie) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookiePolicy.2 boolean shouldAccept(java.net.URI, java.net.HttpCookie) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.CookiePolicy.2 boolean shouldAccept(java.net.URI, java.net.HttpCookie)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null,_-&gt;false;_,!null-&gt;false;_,null-&gt;false;null,_-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="java.net.CookiePolicy.3 3()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.CookiePolicy.3 boolean shouldAccept(java.net.URI, java.net.HttpCookie) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.CookiePolicy.3 boolean shouldAccept(java.net.URI, java.net.HttpCookie) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramPacket DatagramPacket(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramPacket DatagramPacket(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramPacket DatagramPacket(byte[], int, int, java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramPacket DatagramPacket(byte[], int, int, java.net.SocketAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramPacket DatagramPacket(byte[], int, int, java.net.SocketAddress) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramPacket DatagramPacket(byte[], int, java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramPacket DatagramPacket(byte[], int, java.net.SocketAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramPacket DatagramPacket(byte[], int, java.net.SocketAddress) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramPacket byte[] getData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramPacket int getLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramPacket int getOffset()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramPacket int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramPacket java.net.InetAddress getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramPacket java.net.SocketAddress getSocketAddress()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramPacket void setData(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramPacket void setData(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramPacket void setSocketAddress(java.net.SocketAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramSocket DatagramSocket(int, java.net.InetAddress) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DatagramSocket DatagramSocket(java.net.DatagramSocketImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramSocket DatagramSocket(java.net.SocketAddress) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DatagramSocket boolean isBound()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocket boolean isClosed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocket boolean isConnected()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocket int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocket java.net.InetAddress getInetAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocket java.net.InetAddress getLocalAddress()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DatagramSocket java.net.SocketAddress getLocalSocketAddress()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DatagramSocket java.net.SocketAddress getRemoteSocketAddress()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DatagramSocket java.nio.channels.DatagramChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DatagramSocket void checkAddress(java.net.InetAddress, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DatagramSocket void checkAddress(java.net.InetAddress, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DatagramSocket void connect(java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramSocket void connect(java.net.SocketAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramSocket void connectInternal(java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramSocket void receive(java.net.DatagramPacket) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramSocket void send(java.net.DatagramPacket) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.DatagramSocket void setDatagramSocketImplFactory(java.net.DatagramSocketImplFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DatagramSocket.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DatagramSocket.1 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DatagramSocketImpl DatagramSocketImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocketImpl int getLocalPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocketImpl java.io.FileDescriptor getFileDescriptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocketImpl void connect(java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DatagramSocketImpl void connect(java.net.InetAddress, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DatagramSocketImpl void disconnect()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DefaultDatagramSocketImplFactory DefaultDatagramSocketImplFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DefaultInterface DefaultInterface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.DefaultInterface java.net.NetworkInterface chooseDefaultInterface()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.DefaultInterface java.net.NetworkInterface getDefault()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.FactoryURLClassLoader FactoryURLClassLoader(java.net.URL[], java.lang.ClassLoader, java.security.AccessControlContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.FactoryURLClassLoader FactoryURLClassLoader(java.net.URL[], java.security.AccessControlContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie HttpCookie(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie HttpCookie(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie boolean domainMatches(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie boolean domainMatches(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie boolean domainMatches(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie boolean equalsIgnoreCase(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie boolean equalsIgnoreCase(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie boolean getDiscard()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie boolean getSecure()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie boolean isHttpOnly()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie boolean isToken(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie boolean startsWithIgnoreCase(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie boolean startsWithIgnoreCase(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie boolean startsWithIgnoreCase(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie int getVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie int guessCookieVersion(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.lang.String access$200(java.net.HttpCookie) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.lang.String access$200(java.net.HttpCookie)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getComment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getCommentURL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getDomain()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getPortlist()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String getValue()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String header()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String stripOffSurroundingQuote(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie java.lang.String toNetscapeHeaderString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.lang.String toRFC2965HeaderString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.net.HttpCookie parseInternal(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.util.List access$100(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.util.List access$100(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.util.List&lt;java.lang.String&gt; splitMultiCookies(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.util.List&lt;java.lang.String&gt; splitMultiCookies(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.util.List&lt;java.net.HttpCookie&gt; parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.util.List&lt;java.net.HttpCookie&gt; parse(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.util.List&lt;java.net.HttpCookie&gt; parse(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie java.util.List&lt;java.net.HttpCookie&gt; parse(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie long access$000(java.net.HttpCookie, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie long getMaxAge()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie void assignAttribute(java.net.HttpCookie, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.1 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.1 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.10 10()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.10 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.11 11()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.11 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.11 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.12 12()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.12 java.lang.String header(java.net.HttpCookie) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.12 java.lang.String header(java.net.HttpCookie)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.12 java.util.List&lt;java.net.HttpCookie&gt; parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.12 java.util.List&lt;java.net.HttpCookie&gt; parse(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.2 2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.2 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.2 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.3 3()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.3 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.3 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.3 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.4 4()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.4 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.4 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.5 5()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.5 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.5 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.5 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.6 6()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.6 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.6 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.7 7()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.7 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.7 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.7 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.8 8()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.8 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.8 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.8 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.9 9()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpCookie.9 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpCookie.9 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpCookie.9 void assign(java.net.HttpCookie, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpRetryException int responseCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpRetryException java.lang.String getLocation()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpURLConnection boolean getFollowRedirects()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpURLConnection boolean getInstanceFollowRedirects()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpURLConnection java.io.InputStream getErrorStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpURLConnection java.lang.String getHeaderField(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpURLConnection java.lang.String getHeaderFieldKey(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.HttpURLConnection java.lang.String getRequestMethod()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.HttpURLConnection java.security.Permission getPermission()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.HttpURLConnection void setRequestMethod(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN IDN()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.IDN boolean isAllASCII(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN boolean isLDHChar(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.IDN boolean startsWithACEPrefix(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN char toASCIILower(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.IDN int searchDots(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.String toASCII(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.String toASCII(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.String toASCII(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.String toASCII(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.String toASCIIInternal(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.String toASCIIInternal(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.String toUnicode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.String toUnicode(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.String toUnicode(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.String toUnicode(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.String toUnicodeInternal(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.String toUnicodeInternal(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.IDN java.lang.StringBuffer toASCIILower(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN java.lang.StringBuffer toASCIILower(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.IDN.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.IDN.1 java.io.InputStream run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.IDN.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InMemoryCookieStore boolean netscapeDomainMatches(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InMemoryCookieStore boolean netscapeDomainMatches(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InMemoryCookieStore boolean netscapeDomainMatches(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.InMemoryCookieStore boolean remove(java.net.URI, java.net.HttpCookie) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InMemoryCookieStore boolean remove(java.net.URI, java.net.HttpCookie) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InMemoryCookieStore java.net.URI getEffectiveURI(java.net.URI)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.InMemoryCookieStore java.util.List&lt;java.net.HttpCookie&gt; get(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InMemoryCookieStore java.util.List&lt;java.net.HttpCookie&gt; get(java.net.URI)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InMemoryCookieStore java.util.List&lt;java.net.HttpCookie&gt; getCookies()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InMemoryCookieStore java.util.List&lt;java.net.URI&gt; getURIs()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InMemoryCookieStore void add(java.net.URI, java.net.HttpCookie) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InMemoryCookieStore void add(java.net.URI, java.net.HttpCookie) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InMemoryCookieStore void addIndex(java.util.Map&lt;T,java.util.List&lt;java.net.HttpCookie&gt;&gt;, T, java.net.HttpCookie) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InMemoryCookieStore void getInternal1(java.util.List&lt;java.net.HttpCookie&gt;, java.util.Map&lt;java.lang.String,java.util.List&lt;java.net.HttpCookie&gt;&gt;, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InMemoryCookieStore void getInternal1(java.util.List&lt;java.net.HttpCookie&gt;, java.util.Map&lt;java.lang.String,java.util.List&lt;java.net.HttpCookie&gt;&gt;, java.lang.String, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InMemoryCookieStore void getInternal2(java.util.List&lt;java.net.HttpCookie&gt;, java.util.Map&lt;T,java.util.List&lt;java.net.HttpCookie&gt;&gt;, java.lang.Comparable&lt;T&gt;, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet4Address Inet4Address(java.lang.String, byte[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Inet4Address boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Inet4Address boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.Inet4Address boolean isMCNodeLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet4Address byte[] getAddress()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet4Address java.lang.Object writeReplace()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet4Address java.lang.String getHostAddress()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet4Address java.lang.String numericToTextFormat(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet4Address java.lang.String numericToTextFormat(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet4AddressImpl Inet4AddressImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet4AddressImpl boolean isReachable(java.net.InetAddress, int, java.net.NetworkInterface, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet4AddressImpl boolean isReachable(java.net.InetAddress, int, java.net.NetworkInterface, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Inet6Address Inet6Address(java.lang.String, byte[], java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address Inet6Address(java.lang.String, byte[], java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address Inet6Address(java.lang.String, byte[], java.net.NetworkInterface) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address boolean differentLocalAddressTypes(byte[], byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address boolean differentLocalAddressTypes(byte[], byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Inet6Address boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address boolean isLinkLocalAddress(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address boolean isLinkLocalAddress(byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address boolean isSiteLocalAddress(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address boolean isSiteLocalAddress(byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address int access$000(byte[], java.net.NetworkInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address int access$000(byte[], java.net.NetworkInterface) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address int deriveNumericScope(byte[], java.net.NetworkInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address int deriveNumericScope(byte[], java.net.NetworkInterface) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address int deriveNumericScope(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Inet6Address int getScopeId()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address java.lang.String numericToTextFormat(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address java.net.Inet6Address getByAddress(java.lang.String, byte[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address java.net.Inet6Address getByAddress(java.lang.String, byte[], int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address java.net.Inet6Address getByAddress(java.lang.String, byte[], java.net.NetworkInterface) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address java.net.Inet6Address getByAddress(java.lang.String, byte[], java.net.NetworkInterface)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address java.net.NetworkInterface getScopedInterface()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address void initif(java.lang.String, byte[], java.net.NetworkInterface) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address void initstr(java.lang.String, byte[], java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address void initstr(java.lang.String, byte[], java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder Inet6AddressHolder(java.net.Inet6Address, byte[], int, boolean, java.net.NetworkInterface, boolean, java.net.Inet6Address.1) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder Inet6AddressHolder(java.net.Inet6Address, java.net.Inet6Address.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isAnyLocalAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isIPv4CompatibleAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isLinkLocalAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isLoopbackAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isMCGlobal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isMCLinkLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isMCNodeLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isMCOrgLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isMCSiteLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isMulticastAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder boolean isSiteLocalAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder java.lang.String getHostAddress()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder void init(byte[], java.net.NetworkInterface) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Inet6Address.Inet6AddressHolder void setAddr(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Inet6AddressImpl Inet6AddressImpl()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Inet6AddressImpl boolean isReachable(java.net.InetAddress, int, java.net.NetworkInterface, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Inet6AddressImpl boolean isReachable(java.net.InetAddress, int, java.net.NetworkInterface, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;false;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isAnyLocalAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isLinkLocalAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isLoopbackAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isMCGlobal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isMCLinkLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isMCNodeLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isMCOrgLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isMCSiteLocal()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isMulticastAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress boolean isSiteLocalAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress byte[] getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress int checkNumericZone(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress int hashCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress java.lang.Object readResolve()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress java.lang.String getHostAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress java.lang.String getHostFromNameService(java.net.InetAddress, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress getByAddress(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress getByAddress(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress getByAddress(java.lang.String, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress getByAddress(java.lang.String, byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress getByName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress getByName(java.lang.String, java.net.InetAddress) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress.InetAddressHolder holder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress[] checkLookupTable(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress[] getAllByName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress[] getAllByName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress[] getAllByName(java.lang.String, java.net.InetAddress) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress[] getAllByName(java.lang.String, java.net.InetAddress)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress[] getAllByName0(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress[] getAllByName0(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress[] getAllByName0(java.lang.String, java.net.InetAddress, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress[] getCachedAddresses(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress java.net.InetAddress[] getCachedAddresses(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress sun.net.spi.nameservice.NameService createNSProvider(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress sun.net.spi.nameservice.NameService createNSProvider(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress void cacheAddresses(java.lang.String, java.net.InetAddress[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress void readObjectNoData(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress.2 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress.2 sun.net.spi.nameservice.NameService run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress.Cache int getPolicy()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress.Cache java.net.InetAddress.Cache put(java.lang.String, java.net.InetAddress[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetAddress.Cache java.net.InetAddress.CacheEntry get(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetAddress.InetAddressHolder InetAddressHolder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress.InetAddressHolder int getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress.InetAddressHolder int getFamily()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddress.InetAddressHolder java.lang.String getHostName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddressContainer InetAddressContainer()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetAddressImplFactory InetAddressImplFactory()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress InetSocketAddress(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress InetSocketAddress(java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetSocketAddress boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetSocketAddress boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress boolean isUnresolved()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress java.lang.String checkHost(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress java.lang.String checkHost(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress java.lang.String getHostName()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetSocketAddress java.lang.String getHostString()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetSocketAddress java.net.InetAddress getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress java.net.InetSocketAddress createUnresolved(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress java.net.InetSocketAddress createUnresolved(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder InetSocketAddressHolder(java.lang.String, java.net.InetAddress, int, java.net.InetSocketAddress.1) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder boolean access$800(java.net.InetSocketAddress.InetSocketAddressHolder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder boolean access$800(java.net.InetSocketAddress.InetSocketAddressHolder)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder boolean isUnresolved()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder int access$300(java.net.InetSocketAddress.InetSocketAddressHolder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder int access$300(java.net.InetSocketAddress.InetSocketAddressHolder)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder int access$400(java.net.InetSocketAddress.InetSocketAddressHolder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder int access$400(java.net.InetSocketAddress.InetSocketAddressHolder)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.lang.String access$100(java.net.InetSocketAddress.InetSocketAddressHolder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.lang.String access$100(java.net.InetSocketAddress.InetSocketAddressHolder)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.lang.String access$600(java.net.InetSocketAddress.InetSocketAddressHolder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.lang.String access$600(java.net.InetSocketAddress.InetSocketAddressHolder)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.lang.String access$700(java.net.InetSocketAddress.InetSocketAddressHolder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.lang.String access$700(java.net.InetSocketAddress.InetSocketAddressHolder)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.lang.String getHostName()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.lang.String getHostString()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.net.InetAddress access$200(java.net.InetSocketAddress.InetSocketAddressHolder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.net.InetAddress access$200(java.net.InetSocketAddress.InetSocketAddressHolder)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.net.InetAddress access$500(java.net.InetSocketAddress.InetSocketAddressHolder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.net.InetAddress access$500(java.net.InetSocketAddress.InetSocketAddressHolder)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InetSocketAddress.InetSocketAddressHolder java.net.InetAddress getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InterfaceAddress boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.InterfaceAddress boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.InterfaceAddress java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.InterfaceAddress java.net.InetAddress getAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InterfaceAddress java.net.InetAddress getBroadcast()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.InterfaceAddress short getNetworkPrefixLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.JarURLConnection JarURLConnection(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.JarURLConnection java.lang.String getEntryName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.JarURLConnection java.net.URL getJarFileURL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.JarURLConnection java.security.cert.Certificate[] getCertificates()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.JarURLConnection java.util.jar.Attributes getAttributes()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.JarURLConnection java.util.jar.Attributes getMainAttributes()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.JarURLConnection void parseSpecs(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.MulticastSocket MulticastSocket(java.net.SocketAddress) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.MulticastSocket void joinGroup(java.net.InetAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.MulticastSocket void joinGroup(java.net.SocketAddress, java.net.NetworkInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.MulticastSocket void leaveGroup(java.net.InetAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.MulticastSocket void leaveGroup(java.net.SocketAddress, java.net.NetworkInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.MulticastSocket void send(java.net.DatagramPacket, byte) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.NetPermission NetPermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.NetPermission NetPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.NetPermission NetPermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.NetUtil NetUtil()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.NetUtil.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.NetworkInterface boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface boolean isVirtual()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface byte[] getHardwareAddress()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.NetworkInterface int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface java.lang.String getDisplayName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.NetworkInterface java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.NetworkInterface java.net.InetAddress[] access$000(java.net.NetworkInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.NetworkInterface java.net.InetAddress[] access$000(java.net.NetworkInterface)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface java.net.NetworkInterface getByInetAddress(java.net.InetAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.NetworkInterface java.net.NetworkInterface getByName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.NetworkInterface java.net.NetworkInterface getDefault()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface java.net.NetworkInterface getParent()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface java.net.NetworkInterface[] access$100(java.net.NetworkInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.NetworkInterface java.net.NetworkInterface[] access$100(java.net.NetworkInterface)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface java.util.Enumeration&lt;java.net.InetAddress&gt; getInetAddresses()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.NetworkInterface java.util.Enumeration&lt;java.net.NetworkInterface&gt; getNetworkInterfaces()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.NetworkInterface java.util.Enumeration&lt;java.net.NetworkInterface&gt; getSubInterfaces()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.NetworkInterface java.util.List&lt;java.net.InterfaceAddress&gt; getInterfaceAddresses()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.NetworkInterface.1 boolean hasMoreElements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface.1checkedAddresses 1checkedAddresses(java.net.NetworkInterface) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.NetworkInterface.1checkedAddresses boolean hasMoreElements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.NetworkInterface.1subIFs boolean hasMoreElements()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Parts Parts(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Parts java.lang.String getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Parts java.lang.String getQuery()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Parts java.lang.String getRef()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.PasswordAuthentication PasswordAuthentication(java.lang.String, char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.PasswordAuthentication char[] getPassword()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.PasswordAuthentication java.lang.String getUserName()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Proxy Proxy(java.net.Proxy.Type, java.net.SocketAddress) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Proxy boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Proxy boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.Proxy java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Proxy java.net.Proxy.Type type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Proxy java.net.SocketAddress address()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.ProxySelector ProxySelector()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.ProxySelector void setDefault(java.net.ProxySelector) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.ResponseCache ResponseCache()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.ResponseCache void setDefault(java.net.ResponseCache) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SecureCacheResponse SecureCacheResponse()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.ServerSocket ServerSocket(int, int, java.net.InetAddress) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.ServerSocket ServerSocket(java.net.SocketImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.ServerSocket boolean isBound()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.ServerSocket boolean isClosed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.ServerSocket java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.ServerSocket java.net.InetAddress getInetAddress()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.ServerSocket java.net.Socket accept()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.ServerSocket java.net.SocketAddress getLocalSocketAddress()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.ServerSocket java.net.SocketImpl access$000(java.net.ServerSocket) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.ServerSocket java.net.SocketImpl access$000(java.net.ServerSocket)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.ServerSocket java.nio.channels.ServerSocketChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.ServerSocket void implAccept(java.net.Socket) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.ServerSocket void setPerformancePreferences(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.ServerSocket void setSocketFactory(java.net.SocketImplFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.ServerSocket.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.ServerSocket.1 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket Socket(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket Socket(java.lang.String, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket Socket(java.lang.String, int, java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket Socket(java.lang.String, int, java.net.InetAddress, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket Socket(java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket Socket(java.net.InetAddress, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket Socket(java.net.InetAddress, int, java.net.InetAddress, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket Socket(java.net.InetAddress, int, java.net.InetAddress, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket Socket(java.net.Proxy) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Socket Socket(java.net.SocketAddress, java.net.SocketAddress, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Socket boolean isBound()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Socket boolean isClosed()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Socket boolean isConnected()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Socket boolean isInputShutdown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Socket boolean isOutputShutdown()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Socket java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Socket java.net.InetAddress getInetAddress()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket java.net.SocketAddress getLocalSocketAddress()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket java.net.SocketAddress getRemoteSocketAddress()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket java.nio.channels.SocketChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket void bind(java.net.SocketAddress) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket void checkAddress(java.net.InetAddress, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket void checkAddress(java.net.InetAddress, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.Socket void connect(java.net.SocketAddress, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.Socket void setPerformancePreferences(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.Socket void setSocketImplFactory(java.net.SocketImplFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocketAddress SocketAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl boolean supportsUrgentData()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl int getLocalPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl java.io.FileDescriptor getFileDescriptor()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketImpl java.net.InetAddress getInetAddress()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl java.net.ServerSocket getServerSocket()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl java.net.Socket getSocket()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocketImpl void setPerformancePreferences(int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocketInputStream SocketInputStream(java.net.AbstractPlainSocketImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketInputStream int read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketInputStream java.nio.channels.FileChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocketInputStream void finalize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocketOutputStream SocketOutputStream(java.net.AbstractPlainSocketImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketOutputStream java.nio.channels.FileChannel getChannel()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocketOutputStream void finalize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocketOutputStream void write(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission SocketPermission(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission SocketPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission SocketPermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission boolean authorized(java.lang.String, byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocketPermission boolean authorized(java.lang.String, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission boolean authorizedIPv4(java.lang.String, byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocketPermission boolean authorizedIPv4(java.lang.String, byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.SocketPermission boolean authorizedIPv6(java.lang.String, byte[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocketPermission boolean compareHostnames(java.net.SocketPermission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocketPermission boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocketPermission boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.SocketPermission boolean impliesIgnoreMask(java.net.SocketPermission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission boolean match(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission boolean match(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission int getMask()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocketPermission int getMask(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission int[] parsePort(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocketPermission int[] parsePort(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission java.lang.String getActions(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission java.lang.String getHost(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission java.lang.String getHost(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission java.security.PermissionCollection newPermissionCollection()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission void init(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermission void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermissionCollection boolean implies(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocketPermissionCollection boolean implies(java.security.Permission)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.SocketPermissionCollection java.util.Enumeration elements()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermissionCollection void add(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermissionCollection void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocketPermissionCollection void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl SocksSocketImpl(java.net.Proxy) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl int access$400(java.net.SocksSocketImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl int access$400(java.net.SocksSocketImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocksSocketImpl int readSocksReply(java.io.InputStream, byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl int readSocksReply(java.io.InputStream, byte[], long) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl java.io.InputStream access$102(java.net.SocksSocketImpl, java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl java.io.InputStream access$102(java.net.SocksSocketImpl, java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.SocksSocketImpl java.io.OutputStream access$202(java.net.SocksSocketImpl, java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl java.io.OutputStream access$202(java.net.SocksSocketImpl, java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.SocksSocketImpl java.lang.String access$300(java.net.SocksSocketImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl java.lang.String access$300(java.net.SocksSocketImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocksSocketImpl java.net.Socket access$500(java.net.SocksSocketImpl) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl java.net.Socket access$500(java.net.SocksSocketImpl)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.SocksSocketImpl java.net.Socket access$502(java.net.SocksSocketImpl, java.net.Socket) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl java.net.Socket access$502(java.net.SocksSocketImpl, java.net.Socket)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.SocksSocketImpl void access$000(java.net.SocksSocketImpl, java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl void access$000(java.net.SocksSocketImpl, java.lang.String, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl void bindV4(java.io.InputStream, java.io.OutputStream, java.net.InetAddress, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl void bindV4(java.io.InputStream, java.io.OutputStream, java.net.InetAddress, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl void connect(java.net.SocketAddress, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl void connectV4(java.io.InputStream, java.io.OutputStream, java.net.InetSocketAddress, long) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl void connectV4(java.io.InputStream, java.io.OutputStream, java.net.InetSocketAddress, long) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl void superConnectServer(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.SocksSocketImpl.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocksSocketImpl.1 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocksSocketImpl.2 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocksSocketImpl.2 java.net.PasswordAuthentication run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocksSocketImpl.6 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocksSocketImpl.6 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocksSocketImpl.7 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.SocksSocketImpl.7 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.StandardSocketOptions StandardSocketOptions()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.StandardSocketOptions.StdSocketOption java.lang.Class&lt;T&gt; type()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.StandardSocketOptions.StdSocketOption java.lang.String name()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.StandardSocketOptions.StdSocketOption java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI URI(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI boolean access$300(char, long, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI boolean equal(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI boolean equal(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI boolean equalIgnoringCase(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI boolean equalIgnoringCase(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI boolean isAbsolute()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI boolean isOpaque()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI boolean match(char, long, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI int access$2502(java.net.URI, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI int compare(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI int compare(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI int compare(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI int compareIgnoringCase(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI int compareIgnoringCase(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI int compareTo(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI int hash(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI int hashIgnoringCase(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI int join(char[], int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI int join(char[], int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI int needsNormalization(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI int toLower(char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String access$002(java.net.URI, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String access$002(java.net.URI, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String access$1002(java.net.URI, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String access$1002(java.net.URI, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String access$1102(java.net.URI, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String access$1102(java.net.URI, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String access$1402(java.net.URI, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String access$1402(java.net.URI, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String access$1502(java.net.URI, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String access$1502(java.net.URI, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String access$2202(java.net.URI, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String access$2202(java.net.URI, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String access$2302(java.net.URI, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String access$2302(java.net.URI, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String access$2402(java.net.URI, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String access$2402(java.net.URI, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String access$702(java.net.URI, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String access$702(java.net.URI, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String decode(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String encode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String encode(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getRawAuthority()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getRawFragment()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getRawPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getRawQuery()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getRawUserInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String getScheme()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String normalize(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String normalize(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String quote(java.lang.String, long, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String quote(java.lang.String, long, long)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URI java.lang.String resolvePath(java.lang.String, java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String resolvePath(java.lang.String, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.lang.String toString(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI java.lang.String toString(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI java.lang.String toString(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI java.lang.String toString(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI java.lang.String toString(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI java.lang.String toString(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI java.lang.String toString(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI java.lang.String toString(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) 8">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI java.lang.String toString(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI create(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI normalize()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI normalize(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI normalize(java.net.URI)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI parseServerAuthority()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI relativize(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI relativize(java.net.URI)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI relativize(java.net.URI, java.net.URI) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI relativize(java.net.URI, java.net.URI)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI resolve(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI resolve(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI resolve(java.net.URI)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI resolve(java.net.URI, java.net.URI) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URI resolve(java.net.URI, java.net.URI)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI java.net.URL toURL()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI long access$100()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$1200()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$1300()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$1600()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$1700()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$1800()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$1900()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$200()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$2000()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$2100()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$2600()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$2700()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$2800()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$2900()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$3000()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$3100()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$3200()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$3300()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$3400()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$400()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$500()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$600()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$800()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long access$900()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long highMask(char, char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long highMask(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI long lowMask(char, char)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URI long lowMask(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI void appendAuthority(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI void appendAuthority(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI void appendAuthority(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, int) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI void appendEscape(java.lang.StringBuffer, byte) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI void appendFragment(java.lang.StringBuffer, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI void appendSchemeSpecificPart(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI void appendSchemeSpecificPart(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI void appendSchemeSpecificPart(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI void appendSchemeSpecificPart(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI void appendSchemeSpecificPart(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) 6">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI void appendSchemeSpecificPart(java.lang.StringBuffer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) 7">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI void checkPath(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI void checkPath(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI void maybeAddLeadingDot(char[], int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI void removeDots(char[], int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI void removeDots(char[], int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI void split(char[], int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI void split(char[], int[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI.Parser Parser(java.net.URI, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI.Parser boolean at(int, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI.Parser int takeIPv4Address(int, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI.Parser java.lang.String substring(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI.Parser void checkChar(int, long, long, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI.Parser void checkChars(int, int, long, long, java.lang.String) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI.Parser void fail(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI.Parser void fail(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URI.Parser void failExpecting(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI.Parser void failExpecting(java.lang.String, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URI.Parser void failExpecting(java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URISyntaxException URISyntaxException(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URISyntaxException URISyntaxException(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URISyntaxException URISyntaxException(java.lang.String, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URISyntaxException URISyntaxException(java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URISyntaxException int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URISyntaxException java.lang.String getInput()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URISyntaxException java.lang.String getMessage()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL URL(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL URL(java.lang.String, java.lang.String, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL URL(java.lang.String, java.lang.String, int, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL URL(java.lang.String, java.lang.String, int, java.lang.String, java.net.URLStreamHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL URL(java.lang.String, java.lang.String, int, java.lang.String, java.net.URLStreamHandler) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL URL(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL URL(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL URL(java.net.URL, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL URL(java.net.URL, java.lang.String, java.net.URLStreamHandler) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URL boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URL boolean isValidProtocol(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL int getPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getAuthority()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getFile()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getHost()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getProtocol()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getQuery()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getRef()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.lang.String getUserInfo()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URL java.net.URI toURI()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL java.net.URLConnection openConnection(java.net.Proxy) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL void checkSpecifyHandler(java.lang.SecurityManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL void set(java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL void setURLStreamHandlerFactory(java.net.URLStreamHandlerFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URL void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URL.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLClassLoader URLClassLoader(java.net.URL[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader URLClassLoader(java.net.URL[], java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader URLClassLoader(java.net.URL[], java.lang.ClassLoader, java.net.URLStreamHandlerFactory) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader URLClassLoader(java.net.URL[], java.lang.ClassLoader, java.net.URLStreamHandlerFactory) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLClassLoader URLClassLoader(java.net.URL[], java.lang.ClassLoader, java.security.AccessControlContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader URLClassLoader(java.net.URL[], java.security.AccessControlContext) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader boolean isSealed(java.lang.String, java.util.jar.Manifest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader boolean isSealed(java.lang.String, java.util.jar.Manifest) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader java.io.InputStream getResourceAsStream(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLClassLoader java.lang.Class access$100(java.net.URLClassLoader, java.lang.String, sun.misc.Resource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader java.lang.Class access$100(java.net.URLClassLoader, java.lang.String, sun.misc.Resource) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader java.lang.Class access$100(java.net.URLClassLoader, java.lang.String, sun.misc.Resource) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader java.lang.Class defineClass(java.lang.String, sun.misc.Resource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader java.lang.Class defineClass(java.lang.String, sun.misc.Resource) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader java.lang.Package definePackage(java.lang.String, java.util.jar.Manifest, java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader java.lang.Package definePackage(java.lang.String, java.util.jar.Manifest, java.net.URL) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader java.lang.Package getAndVerifyPackage(java.lang.String, java.util.jar.Manifest, java.net.URL) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLClassLoader java.net.URL findResource(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLClassLoader java.security.AccessControlContext access$200(java.net.URLClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader java.security.AccessControlContext access$200(java.net.URLClassLoader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLClassLoader java.security.PermissionCollection getPermissions(java.security.CodeSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader java.security.PermissionCollection getPermissions(java.security.CodeSource)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader java.util.Enumeration&lt;java.net.URL&gt; findResources(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader sun.misc.URLClassPath access$000(java.net.URLClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader sun.misc.URLClassPath access$000(java.net.URLClassLoader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLClassLoader.3.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLClassLoader.3.1 java.net.URL run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLClassLoader.4 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLClassLoader.4 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLClassLoader.5 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader.5 java.net.URLClassLoader run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader.6 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader.6 java.net.URLClassLoader run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader.7 7()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLClassLoader.7 sun.misc.URLClassPath getURLClassPath(java.net.URLClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLClassLoader.7 sun.misc.URLClassPath getURLClassPath(java.net.URLClassLoader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection boolean checkfpx(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLConnection boolean getAllowUserInteraction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection boolean getDefaultAllowUserInteraction()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection boolean getDefaultUseCaches()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection boolean getDoInput()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection boolean getDoOutput()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection boolean getUseCaches()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection int getConnectTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection int getReadTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection int readBytes(int[], int, java.io.InputStream) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLConnection java.lang.String getContentEncoding()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection java.lang.String getContentHandlerPkgPrefixes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLConnection java.lang.String getContentType()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection java.lang.String getDefaultRequestProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection java.lang.String getDefaultRequestProperty(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;null;null-&gt;null&quot;,pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection java.lang.String getHeaderField(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection java.lang.String getHeaderField(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection java.lang.String getHeaderField(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;null;null-&gt;null&quot;,pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection java.lang.String getHeaderFieldKey(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection java.lang.String getRequestProperty(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection java.lang.String guessContentTypeFromStream(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLConnection java.lang.String guessContentTypeFromStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection java.lang.String stripOffParameters(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection java.lang.String stripOffParameters(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLConnection java.lang.String typeToPackageName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLConnection java.lang.String typeToPackageName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLConnection java.net.ContentHandler lookupContentHandlerClassFor(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLConnection java.net.FileNameMap access$000()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection java.net.FileNameMap getFileNameMap()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLConnection java.net.URL getURL()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection java.security.Permission getPermission()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection java.util.Map&lt;java.lang.String,java.util.List&lt;java.lang.String&gt;&gt; getHeaderFields()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection long getIfModifiedSince()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection void addRequestProperty(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLConnection void setContentHandlerFactory(java.net.ContentHandlerFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection void setDefaultRequestProperty(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection void setDefaultRequestProperty(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection void setDefaultRequestProperty(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLConnection void setFileNameMap(java.net.FileNameMap) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLConnection void setRequestProperty(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLDecoder URLDecoder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLDecoder java.lang.String decode(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLDecoder java.lang.String decode(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLDecoder java.lang.String decode(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLDecoder java.lang.String decode(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URLEncoder URLEncoder()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLEncoder java.lang.String encode(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLEncoder java.lang.String encode(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLEncoder java.lang.String encode(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLEncoder java.lang.String encode(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.net.URLStreamHandler URLStreamHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLStreamHandler boolean equals(java.net.URL, java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLStreamHandler boolean equals(java.net.URL, java.net.URL) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLStreamHandler boolean sameFile(java.net.URL, java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLStreamHandler boolean sameFile(java.net.URL, java.net.URL) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLStreamHandler int getDefaultPort()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.URLStreamHandler int hashCode(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLStreamHandler java.lang.String toExternalForm(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLStreamHandler java.lang.String toExternalForm(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLStreamHandler java.net.InetAddress getHostAddress(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLStreamHandler java.net.InetAddress getHostAddress(java.net.URL)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLStreamHandler java.net.URLConnection openConnection(java.net.URL, java.net.Proxy) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLStreamHandler java.net.URLConnection openConnection(java.net.URL, java.net.Proxy) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLStreamHandler void parseURL(java.net.URL, java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLStreamHandler void setURL(java.net.URL, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.URLStreamHandler void setURL(java.net.URL, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.net.URLStreamHandler void setURL(java.net.URL, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.net.UnknownContentHandler UnknownContentHandler()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.net.UnknownContentHandler java.lang.Object getContent(java.net.URLConnection) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
