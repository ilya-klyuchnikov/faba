<root>
  <item name="java.nio.channels.AsynchronousChannelGroup AsynchronousChannelGroup(java.nio.channels.spi.AsynchronousChannelProvider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.channels.AsynchronousChannelGroup java.nio.channels.spi.AsynchronousChannelProvider provider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.AsynchronousFileChannel AsynchronousFileChannel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.AsynchronousFileChannel java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousFileChannel java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousFileChannel java.nio.channels.AsynchronousFileChannel open(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.util.concurrent.ExecutorService, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.AsynchronousServerSocketChannel AsynchronousServerSocketChannel(java.nio.channels.spi.AsynchronousChannelProvider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.channels.AsynchronousServerSocketChannel java.nio.channels.spi.AsynchronousChannelProvider provider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel AsynchronousSocketChannel(java.nio.channels.spi.AsynchronousChannelProvider)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.channels.AsynchronousSocketChannel java.nio.channels.spi.AsynchronousChannelProvider provider()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.Channels Channels()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.Channels java.io.InputStream newInputStream(java.nio.channels.AsynchronousByteChannel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.InputStream newInputStream(java.nio.channels.AsynchronousByteChannel)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.InputStream newInputStream(java.nio.channels.ReadableByteChannel)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.OutputStream newOutputStream(java.nio.channels.AsynchronousByteChannel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.OutputStream newOutputStream(java.nio.channels.AsynchronousByteChannel)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.OutputStream newOutputStream(java.nio.channels.WritableByteChannel)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Reader newReader(java.nio.channels.ReadableByteChannel, java.nio.charset.CharsetDecoder, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.io.Writer newWriter(java.nio.channels.WritableByteChannel, java.nio.charset.CharsetEncoder, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.nio.channels.ReadableByteChannel newChannel(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.nio.channels.Channels java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels java.nio.channels.WritableByteChannel newChannel(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.nio.channels.Channels void access$000(java.nio.channels.WritableByteChannel, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels void checkNotNull(java.lang.Object, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels void checkNotNull(java.lang.Object, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.channels.Channels void writeFully(java.nio.channels.WritableByteChannel, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels void writeFullyImpl(java.nio.channels.WritableByteChannel, java.nio.ByteBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels.1 1(java.nio.channels.WritableByteChannel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.channels.Channels.1 void write(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels.2 2(java.nio.channels.AsynchronousByteChannel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.channels.Channels.2 int read(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels.3 3(java.nio.channels.AsynchronousByteChannel)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.channels.Channels.3 void write(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels.ReadableByteChannelImpl int read(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.Channels.WritableByteChannelImpl int write(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.DatagramChannel int validOps()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.DatagramChannel long read(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.DatagramChannel long write(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileChannel java.nio.channels.FileChannel open(java.nio.file.Path, java.nio.file.OpenOption...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileChannel java.nio.channels.FileChannel open(java.nio.file.Path, java.nio.file.OpenOption...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileChannel java.nio.channels.FileChannel open(java.nio.file.Path, java.util.Set&lt;? extends java.nio.file.OpenOption&gt;, java.nio.file.attribute.FileAttribute&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileChannel long read(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileChannel long write(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileChannel.MapMode MapMode(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.channels.FileChannel.MapMode java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.FileLock boolean isShared()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.FileLock boolean overlaps(long, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.FileLock java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.FileLock java.nio.channels.Channel acquiredBy()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.FileLock java.nio.channels.FileChannel channel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.FileLock long position()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.FileLock long size()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.MembershipKey MembershipKey()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.Pipe Pipe()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.Pipe.SinkChannel int validOps()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.Pipe.SourceChannel int validOps()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.SelectionKey SelectionKey()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.channels.SelectionKey java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.Selector Selector()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.ServerSocketChannel int validOps()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.SocketChannel int validOps()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.channels.SocketChannel long read(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.channels.SocketChannel long write(java.nio.ByteBuffer[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
