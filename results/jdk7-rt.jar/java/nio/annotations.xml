<root>
  <item name="java.nio.Bits Bits()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte char0(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte char1(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte int0(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte int1(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte int2(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte int3(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte long0(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte long1(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte long2(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte long3(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte long4(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte long5(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte long6(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte long7(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte short0(short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits byte short1(short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits char getChar(java.nio.ByteBuffer, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits char getCharB(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits char getCharL(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits char makeChar(byte, byte)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits char swap(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits double getDouble(java.nio.ByteBuffer, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits double getDoubleB(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits double getDoubleL(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits float getFloat(java.nio.ByteBuffer, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits float getFloatB(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits float getFloatL(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits int getInt(java.nio.ByteBuffer, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits int getIntB(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits int getIntL(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits int makeInt(byte, byte, byte, byte)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits int swap(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits long access$000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits long access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits long access$200()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits long getLong(java.nio.ByteBuffer, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits long getLongB(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits long getLongL(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits long makeLong(byte, byte, byte, byte, byte, byte, byte, byte)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits long swap(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits short getShort(java.nio.ByteBuffer, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits short getShortB(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits short getShortL(java.nio.ByteBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits short makeShort(byte, byte)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits short swap(short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits sun.misc.Unsafe unsafe()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits void putChar(java.nio.ByteBuffer, int, char, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putCharB(java.nio.ByteBuffer, int, char) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putCharL(java.nio.ByteBuffer, int, char) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putDouble(java.nio.ByteBuffer, int, double, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putDoubleB(java.nio.ByteBuffer, int, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putDoubleL(java.nio.ByteBuffer, int, double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putFloat(java.nio.ByteBuffer, int, float, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putFloatB(java.nio.ByteBuffer, int, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putFloatL(java.nio.ByteBuffer, int, float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putInt(java.nio.ByteBuffer, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putIntB(java.nio.ByteBuffer, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putIntL(java.nio.ByteBuffer, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putLong(java.nio.ByteBuffer, int, long, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putLongB(java.nio.ByteBuffer, int, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putLongL(java.nio.ByteBuffer, int, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putShort(java.nio.ByteBuffer, int, short, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putShortB(java.nio.ByteBuffer, int, short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits void putShortL(java.nio.ByteBuffer, int, short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits.1 java.nio.ByteBuffer newDirectByteBuffer(long, int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits.1 sun.misc.JavaNioAccess.BufferPool getDirectBufferPool()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits.1 void truncate(java.nio.Buffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Bits.1.1 1(java.nio.Bits.1)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.Bits.1.1 java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits.1.1 long getCount()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits.1.1 long getMemoryUsed()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Bits.1.1 long getTotalCapacity()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Buffer boolean hasRemaining()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Buffer int capacity()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Buffer int limit()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Buffer int markValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Buffer int position()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Buffer int remaining()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.Buffer java.nio.Buffer clear()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.Buffer java.nio.Buffer flip()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.Buffer java.nio.Buffer limit(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Buffer java.nio.Buffer mark()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.Buffer java.nio.Buffer position(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Buffer java.nio.Buffer reset()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.Buffer java.nio.Buffer rewind()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.Buffer void discardMark()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.Buffer void truncate()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.ByteBuffer boolean equals(byte, byte)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBuffer boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.ByteBuffer boolean hasArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBuffer int compare(byte, byte)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBuffer int compareTo(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer allocate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer allocateDirect(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer get(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer get(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer get(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer order(java.nio.ByteOrder) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer order(java.nio.ByteOrder)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer put(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer put(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer put(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer put(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer put(java.nio.ByteBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer wrap(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer wrap(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer wrap(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteBuffer wrap(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBuffer java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferB ByteBufferAsCharBufferB(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferB boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferB int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferB java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferB java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferB java.nio.CharBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferB java.nio.CharBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferB java.nio.CharBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferB java.nio.CharBuffer put(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferB java.nio.CharBuffer put(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferB java.nio.CharBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferB java.nio.CharBuffer subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferL ByteBufferAsCharBufferL(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferL boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferL int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferL java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferL java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferL java.nio.CharBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferL java.nio.CharBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferL java.nio.CharBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferL java.nio.CharBuffer put(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferL java.nio.CharBuffer put(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferL java.nio.CharBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferL java.nio.CharBuffer subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRB ByteBufferAsCharBufferRB(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRB boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRB java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRB java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRB java.nio.CharBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRB java.nio.CharBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRB java.nio.CharBuffer subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRL ByteBufferAsCharBufferRL(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRL boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRL java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRL java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRL java.nio.CharBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRL java.nio.CharBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsCharBufferRL java.nio.CharBuffer subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferB ByteBufferAsDoubleBufferB(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferB boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferB int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferB java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferB java.nio.DoubleBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferB java.nio.DoubleBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferB java.nio.DoubleBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferB java.nio.DoubleBuffer put(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferB java.nio.DoubleBuffer put(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferB java.nio.DoubleBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferL ByteBufferAsDoubleBufferL(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferL boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferL int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferL java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferL java.nio.DoubleBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferL java.nio.DoubleBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferL java.nio.DoubleBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferL java.nio.DoubleBuffer put(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferL java.nio.DoubleBuffer put(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferL java.nio.DoubleBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferRB ByteBufferAsDoubleBufferRB(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferRB boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferRB java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferRB java.nio.DoubleBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferRB java.nio.DoubleBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferRL ByteBufferAsDoubleBufferRL(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferRL boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferRL java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferRL java.nio.DoubleBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsDoubleBufferRL java.nio.DoubleBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferB ByteBufferAsFloatBufferB(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferB boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferB int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferB java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferB java.nio.FloatBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferB java.nio.FloatBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferB java.nio.FloatBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferB java.nio.FloatBuffer put(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferB java.nio.FloatBuffer put(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferB java.nio.FloatBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferL ByteBufferAsFloatBufferL(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferL boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferL int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferL java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferL java.nio.FloatBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferL java.nio.FloatBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferL java.nio.FloatBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferL java.nio.FloatBuffer put(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferL java.nio.FloatBuffer put(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferL java.nio.FloatBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferRB ByteBufferAsFloatBufferRB(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferRB boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferRB java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferRB java.nio.FloatBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferRB java.nio.FloatBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferRL ByteBufferAsFloatBufferRL(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferRL boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferRL java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferRL java.nio.FloatBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsFloatBufferRL java.nio.FloatBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferB ByteBufferAsIntBufferB(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferB boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferB int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferB java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferB java.nio.IntBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferB java.nio.IntBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferB java.nio.IntBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferB java.nio.IntBuffer put(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferB java.nio.IntBuffer put(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferB java.nio.IntBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferL ByteBufferAsIntBufferL(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferL boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferL int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferL java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferL java.nio.IntBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferL java.nio.IntBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferL java.nio.IntBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferL java.nio.IntBuffer put(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferL java.nio.IntBuffer put(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferL java.nio.IntBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferRB ByteBufferAsIntBufferRB(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferRB boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferRB java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferRB java.nio.IntBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferRB java.nio.IntBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferRL ByteBufferAsIntBufferRL(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferRL boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferRL java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferRL java.nio.IntBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsIntBufferRL java.nio.IntBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferB ByteBufferAsLongBufferB(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferB boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferB int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferB java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferB java.nio.LongBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferB java.nio.LongBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferB java.nio.LongBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferB java.nio.LongBuffer put(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferB java.nio.LongBuffer put(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferB java.nio.LongBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferL ByteBufferAsLongBufferL(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferL boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferL int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferL java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferL java.nio.LongBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferL java.nio.LongBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferL java.nio.LongBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferL java.nio.LongBuffer put(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferL java.nio.LongBuffer put(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferL java.nio.LongBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferRB ByteBufferAsLongBufferRB(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferRB boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferRB java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferRB java.nio.LongBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferRB java.nio.LongBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferRL ByteBufferAsLongBufferRL(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferRL boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferRL java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferRL java.nio.LongBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsLongBufferRL java.nio.LongBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferB ByteBufferAsShortBufferB(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferB boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferB int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferB java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferB java.nio.ShortBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferB java.nio.ShortBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferB java.nio.ShortBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferB java.nio.ShortBuffer put(int, short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferB java.nio.ShortBuffer put(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferB java.nio.ShortBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferL ByteBufferAsShortBufferL(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferL boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferL int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferL java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferL java.nio.ShortBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferL java.nio.ShortBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferL java.nio.ShortBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferL java.nio.ShortBuffer put(int, short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferL java.nio.ShortBuffer put(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferL java.nio.ShortBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferRB ByteBufferAsShortBufferRB(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferRB boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferRB java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferRB java.nio.ShortBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferRB java.nio.ShortBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferRL ByteBufferAsShortBufferRL(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferRL boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferRL java.nio.ByteOrder order()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferRL java.nio.ShortBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteBufferAsShortBufferRL java.nio.ShortBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ByteOrder ByteOrder(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.nio.ByteOrder java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.CharBuffer boolean equals(char, char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.CharBuffer boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.CharBuffer boolean hasArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.CharBuffer int compare(char, char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.CharBuffer int compareTo(java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer int read(java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer allocate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer append(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer append(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer get(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer get(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer get(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer put(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer put(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer put(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer put(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer put(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer put(java.lang.String, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer put(java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer put(java.nio.CharBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer wrap(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer wrap(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer wrap(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer wrap(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer wrap(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer wrap(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer wrap(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.CharBuffer java.nio.CharBuffer wrap(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer DirectByteBuffer(int, long, java.io.FileDescriptor, java.lang.Runnable) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectByteBuffer DirectByteBuffer(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectByteBuffer boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer get(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer put(byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer put(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer put(int, byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer put(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer put(java.nio.ByteBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putChar(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putChar(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putChar(long, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putDouble(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putDouble(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putDouble(long, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putFloat(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putFloat(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putFloat(long, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putInt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putInt(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putInt(long, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putLong(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putLong(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putLong(long, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putShort(int, short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putShort(long, short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer putShort(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ByteBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.CharBuffer asCharBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.DoubleBuffer asDoubleBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.FloatBuffer asFloatBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.IntBuffer asIntBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.LongBuffer asLongBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer java.nio.ShortBuffer asShortBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBuffer long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectByteBuffer long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectByteBuffer sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectByteBuffer.Deallocator Deallocator(long, long, int, java.nio.DirectByteBuffer.1) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectByteBufferR DirectByteBufferR(int, long, java.io.FileDescriptor, java.lang.Runnable) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectByteBufferR DirectByteBufferR(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBufferR boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectByteBufferR boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectByteBufferR java.nio.ByteBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBufferR java.nio.ByteBuffer put(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectByteBufferR java.nio.ByteBuffer put(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectByteBufferR java.nio.ByteBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBufferR java.nio.CharBuffer asCharBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBufferR java.nio.DoubleBuffer asDoubleBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBufferR java.nio.FloatBuffer asFloatBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBufferR java.nio.IntBuffer asIntBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBufferR java.nio.LongBuffer asLongBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectByteBufferR java.nio.ShortBuffer asShortBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferRS DirectCharBufferRS(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferRS boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferRS boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferRS java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferRS java.nio.CharBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferRS java.nio.CharBuffer put(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectCharBufferRS java.nio.CharBuffer put(java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectCharBufferRS java.nio.CharBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferRS java.nio.CharBuffer subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferRU DirectCharBufferRU(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferRU boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferRU boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferRU java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferRU java.nio.CharBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferRU java.nio.CharBuffer put(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectCharBufferRU java.nio.CharBuffer put(java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectCharBufferRU java.nio.CharBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferRU java.nio.CharBuffer subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS DirectCharBufferS(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferS boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer get(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer get(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer put(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer put(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer put(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer put(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer put(java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer put(java.nio.CharBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS java.nio.CharBuffer subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferS long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferS long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferS sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferU DirectCharBufferU(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferU boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer get(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer get(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer put(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer put(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer put(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer put(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer put(java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer put(java.nio.CharBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU java.nio.CharBuffer subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectCharBufferU long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferU long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectCharBufferU sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRS DirectDoubleBufferRS(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRS boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRS boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRS java.nio.DoubleBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRS java.nio.DoubleBuffer put(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRS java.nio.DoubleBuffer put(java.nio.DoubleBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRS java.nio.DoubleBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRU DirectDoubleBufferRU(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRU boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRU boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRU java.nio.DoubleBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRU java.nio.DoubleBuffer put(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRU java.nio.DoubleBuffer put(java.nio.DoubleBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectDoubleBufferRU java.nio.DoubleBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS DirectDoubleBufferS(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.nio.DoubleBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.nio.DoubleBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.nio.DoubleBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.nio.DoubleBuffer get(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.nio.DoubleBuffer get(double[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.nio.DoubleBuffer put(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.nio.DoubleBuffer put(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.nio.DoubleBuffer put(double[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.nio.DoubleBuffer put(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.nio.DoubleBuffer put(java.nio.DoubleBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.nio.DoubleBuffer put(java.nio.DoubleBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS java.nio.DoubleBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferS sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU DirectDoubleBufferU(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.nio.DoubleBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.nio.DoubleBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.nio.DoubleBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.nio.DoubleBuffer get(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.nio.DoubleBuffer get(double[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.nio.DoubleBuffer put(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.nio.DoubleBuffer put(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.nio.DoubleBuffer put(double[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.nio.DoubleBuffer put(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.nio.DoubleBuffer put(java.nio.DoubleBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.nio.DoubleBuffer put(java.nio.DoubleBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU java.nio.DoubleBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectDoubleBufferU sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferRS DirectFloatBufferRS(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferRS boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferRS boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferRS java.nio.FloatBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferRS java.nio.FloatBuffer put(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectFloatBufferRS java.nio.FloatBuffer put(java.nio.FloatBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectFloatBufferRS java.nio.FloatBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferRU DirectFloatBufferRU(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferRU boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferRU boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferRU java.nio.FloatBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferRU java.nio.FloatBuffer put(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectFloatBufferRU java.nio.FloatBuffer put(java.nio.FloatBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectFloatBufferRU java.nio.FloatBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS DirectFloatBufferS(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferS boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.nio.FloatBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.nio.FloatBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.nio.FloatBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.nio.FloatBuffer get(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.nio.FloatBuffer get(float[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.nio.FloatBuffer put(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.nio.FloatBuffer put(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.nio.FloatBuffer put(float[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.nio.FloatBuffer put(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.nio.FloatBuffer put(java.nio.FloatBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.nio.FloatBuffer put(java.nio.FloatBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS java.nio.FloatBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferS long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferS long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferS sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferU DirectFloatBufferU(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferU boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.nio.FloatBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.nio.FloatBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.nio.FloatBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.nio.FloatBuffer get(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.nio.FloatBuffer get(float[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.nio.FloatBuffer put(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.nio.FloatBuffer put(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.nio.FloatBuffer put(float[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.nio.FloatBuffer put(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.nio.FloatBuffer put(java.nio.FloatBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.nio.FloatBuffer put(java.nio.FloatBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU java.nio.FloatBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectFloatBufferU long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferU long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectFloatBufferU sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferRS DirectIntBufferRS(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferRS boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferRS boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferRS java.nio.IntBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferRS java.nio.IntBuffer put(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectIntBufferRS java.nio.IntBuffer put(java.nio.IntBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectIntBufferRS java.nio.IntBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferRU DirectIntBufferRU(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferRU boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferRU boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferRU java.nio.IntBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferRU java.nio.IntBuffer put(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectIntBufferRU java.nio.IntBuffer put(java.nio.IntBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectIntBufferRU java.nio.IntBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS DirectIntBufferS(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferS boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.nio.IntBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.nio.IntBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.nio.IntBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.nio.IntBuffer get(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.nio.IntBuffer get(int[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.nio.IntBuffer put(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.nio.IntBuffer put(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.nio.IntBuffer put(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.nio.IntBuffer put(int[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.nio.IntBuffer put(java.nio.IntBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.nio.IntBuffer put(java.nio.IntBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS java.nio.IntBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferS long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferS long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferS sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferU DirectIntBufferU(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferU boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.nio.IntBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.nio.IntBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.nio.IntBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.nio.IntBuffer get(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.nio.IntBuffer get(int[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.nio.IntBuffer put(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.nio.IntBuffer put(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.nio.IntBuffer put(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.nio.IntBuffer put(int[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.nio.IntBuffer put(java.nio.IntBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.nio.IntBuffer put(java.nio.IntBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU java.nio.IntBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectIntBufferU long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferU long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectIntBufferU sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferRS DirectLongBufferRS(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferRS boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferRS boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferRS java.nio.LongBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferRS java.nio.LongBuffer put(java.nio.LongBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectLongBufferRS java.nio.LongBuffer put(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectLongBufferRS java.nio.LongBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferRU DirectLongBufferRU(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferRU boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferRU boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferRU java.nio.LongBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferRU java.nio.LongBuffer put(java.nio.LongBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectLongBufferRU java.nio.LongBuffer put(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectLongBufferRU java.nio.LongBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS DirectLongBufferS(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferS boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.nio.LongBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.nio.LongBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.nio.LongBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.nio.LongBuffer get(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.nio.LongBuffer get(long[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.nio.LongBuffer put(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.nio.LongBuffer put(java.nio.LongBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.nio.LongBuffer put(java.nio.LongBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.nio.LongBuffer put(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.nio.LongBuffer put(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.nio.LongBuffer put(long[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS java.nio.LongBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferS long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferS long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferS sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferU DirectLongBufferU(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferU boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.nio.LongBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.nio.LongBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.nio.LongBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.nio.LongBuffer get(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.nio.LongBuffer get(long[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.nio.LongBuffer put(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.nio.LongBuffer put(java.nio.LongBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.nio.LongBuffer put(java.nio.LongBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.nio.LongBuffer put(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.nio.LongBuffer put(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.nio.LongBuffer put(long[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU java.nio.LongBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectLongBufferU long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferU long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectLongBufferU sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferRS DirectShortBufferRS(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferRS boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferRS boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferRS java.nio.ShortBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferRS java.nio.ShortBuffer put(java.nio.ShortBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectShortBufferRS java.nio.ShortBuffer put(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectShortBufferRS java.nio.ShortBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferRU DirectShortBufferRU(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferRU boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferRU boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferRU java.nio.ShortBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferRU java.nio.ShortBuffer put(java.nio.ShortBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectShortBufferRU java.nio.ShortBuffer put(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DirectShortBufferRU java.nio.ShortBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS DirectShortBufferS(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferS boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.nio.ShortBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.nio.ShortBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.nio.ShortBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.nio.ShortBuffer get(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.nio.ShortBuffer get(short[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.nio.ShortBuffer put(int, short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.nio.ShortBuffer put(java.nio.ShortBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.nio.ShortBuffer put(java.nio.ShortBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.nio.ShortBuffer put(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.nio.ShortBuffer put(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.nio.ShortBuffer put(short[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS java.nio.ShortBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferS long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferS long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferS sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferU DirectShortBufferU(sun.nio.ch.DirectBuffer, int, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferU boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.lang.Object attachment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.nio.ShortBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.nio.ShortBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.nio.ShortBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.nio.ShortBuffer get(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.nio.ShortBuffer get(short[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.nio.ShortBuffer put(int, short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.nio.ShortBuffer put(java.nio.ShortBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.nio.ShortBuffer put(java.nio.ShortBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.nio.ShortBuffer put(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.nio.ShortBuffer put(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.nio.ShortBuffer put(short[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU java.nio.ShortBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DirectShortBufferU long address()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferU long ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DirectShortBufferU sun.misc.Cleaner cleaner()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DoubleBuffer boolean equals(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DoubleBuffer boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.DoubleBuffer boolean hasArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DoubleBuffer int compare(double, double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.DoubleBuffer int compareTo(java.nio.DoubleBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer allocate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer get(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer get(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer get(double[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer put(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer put(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer put(double[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer put(java.nio.DoubleBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer put(java.nio.DoubleBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer wrap(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer wrap(double[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer wrap(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.DoubleBuffer java.nio.DoubleBuffer wrap(double[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer boolean equals(float, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.FloatBuffer boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.FloatBuffer boolean hasArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.FloatBuffer int compare(float, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.FloatBuffer int compareTo(java.nio.FloatBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer allocate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer get(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer get(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer get(float[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer put(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer put(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer put(float[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer put(java.nio.FloatBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer put(java.nio.FloatBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer wrap(float[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer wrap(float[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer wrap(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.FloatBuffer java.nio.FloatBuffer wrap(float[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer HeapByteBuffer(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapByteBuffer boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapByteBuffer byte _get(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapByteBuffer int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer get(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer get(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer put(byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer put(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer put(byte[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer put(int, byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer put(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer put(java.nio.ByteBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer putChar(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer putChar(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer putDouble(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer putDouble(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer putFloat(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer putFloat(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer putInt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer putInt(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer putLong(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer putLong(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer putShort(int, short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer putShort(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ByteBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.CharBuffer asCharBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.DoubleBuffer asDoubleBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.FloatBuffer asFloatBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.IntBuffer asIntBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.LongBuffer asLongBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBuffer java.nio.ShortBuffer asShortBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBufferR HeapByteBufferR(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBufferR boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapByteBufferR byte _get(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapByteBufferR java.nio.ByteBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBufferR java.nio.ByteBuffer put(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapByteBufferR java.nio.ByteBuffer put(java.nio.ByteBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapByteBufferR java.nio.ByteBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBufferR java.nio.CharBuffer asCharBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBufferR java.nio.DoubleBuffer asDoubleBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBufferR java.nio.FloatBuffer asFloatBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBufferR java.nio.IntBuffer asIntBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBufferR java.nio.LongBuffer asLongBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapByteBufferR java.nio.ShortBuffer asShortBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer HeapCharBuffer(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapCharBuffer boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapCharBuffer int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer get(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer get(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer put(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer put(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer put(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer put(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer put(java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer put(java.nio.CharBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBuffer java.nio.CharBuffer subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBufferR HeapCharBufferR(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBufferR boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapCharBufferR java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBufferR java.nio.CharBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBufferR java.nio.CharBuffer put(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapCharBufferR java.nio.CharBuffer put(java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapCharBufferR java.nio.CharBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapCharBufferR java.nio.CharBuffer subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer HeapDoubleBuffer(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer java.nio.DoubleBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer java.nio.DoubleBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer java.nio.DoubleBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer java.nio.DoubleBuffer get(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer java.nio.DoubleBuffer get(double[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer java.nio.DoubleBuffer put(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer java.nio.DoubleBuffer put(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer java.nio.DoubleBuffer put(double[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer java.nio.DoubleBuffer put(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer java.nio.DoubleBuffer put(java.nio.DoubleBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer java.nio.DoubleBuffer put(java.nio.DoubleBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBuffer java.nio.DoubleBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBufferR HeapDoubleBufferR(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBufferR boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapDoubleBufferR java.nio.DoubleBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapDoubleBufferR java.nio.DoubleBuffer put(double[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapDoubleBufferR java.nio.DoubleBuffer put(java.nio.DoubleBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapDoubleBufferR java.nio.DoubleBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer HeapFloatBuffer(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapFloatBuffer boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapFloatBuffer int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapFloatBuffer java.nio.FloatBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer java.nio.FloatBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer java.nio.FloatBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer java.nio.FloatBuffer get(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer java.nio.FloatBuffer get(float[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer java.nio.FloatBuffer put(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer java.nio.FloatBuffer put(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer java.nio.FloatBuffer put(float[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer java.nio.FloatBuffer put(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer java.nio.FloatBuffer put(java.nio.FloatBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer java.nio.FloatBuffer put(java.nio.FloatBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBuffer java.nio.FloatBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBufferR HeapFloatBufferR(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBufferR boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapFloatBufferR java.nio.FloatBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapFloatBufferR java.nio.FloatBuffer put(float[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapFloatBufferR java.nio.FloatBuffer put(java.nio.FloatBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapFloatBufferR java.nio.FloatBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer HeapIntBuffer(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapIntBuffer boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapIntBuffer int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapIntBuffer java.nio.IntBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer java.nio.IntBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer java.nio.IntBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer java.nio.IntBuffer get(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer java.nio.IntBuffer get(int[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer java.nio.IntBuffer put(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer java.nio.IntBuffer put(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer java.nio.IntBuffer put(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer java.nio.IntBuffer put(int[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer java.nio.IntBuffer put(java.nio.IntBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer java.nio.IntBuffer put(java.nio.IntBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBuffer java.nio.IntBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBufferR HeapIntBufferR(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBufferR boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapIntBufferR java.nio.IntBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapIntBufferR java.nio.IntBuffer put(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapIntBufferR java.nio.IntBuffer put(java.nio.IntBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapIntBufferR java.nio.IntBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer HeapLongBuffer(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapLongBuffer boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapLongBuffer int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapLongBuffer java.nio.LongBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer java.nio.LongBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer java.nio.LongBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer java.nio.LongBuffer get(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer java.nio.LongBuffer get(long[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer java.nio.LongBuffer put(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer java.nio.LongBuffer put(java.nio.LongBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer java.nio.LongBuffer put(java.nio.LongBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer java.nio.LongBuffer put(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer java.nio.LongBuffer put(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer java.nio.LongBuffer put(long[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBuffer java.nio.LongBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBufferR HeapLongBufferR(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBufferR boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapLongBufferR java.nio.LongBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapLongBufferR java.nio.LongBuffer put(java.nio.LongBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapLongBufferR java.nio.LongBuffer put(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapLongBufferR java.nio.LongBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer HeapShortBuffer(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapShortBuffer boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapShortBuffer int ix(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapShortBuffer java.nio.ShortBuffer asReadOnlyBuffer()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer java.nio.ShortBuffer compact()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer java.nio.ShortBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer java.nio.ShortBuffer get(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer java.nio.ShortBuffer get(short[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer java.nio.ShortBuffer put(int, short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer java.nio.ShortBuffer put(java.nio.ShortBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer java.nio.ShortBuffer put(java.nio.ShortBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer java.nio.ShortBuffer put(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer java.nio.ShortBuffer put(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer java.nio.ShortBuffer put(short[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBuffer java.nio.ShortBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBufferR HeapShortBufferR(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBufferR boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.HeapShortBufferR java.nio.ShortBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.HeapShortBufferR java.nio.ShortBuffer put(java.nio.ShortBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapShortBufferR java.nio.ShortBuffer put(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.HeapShortBufferR java.nio.ShortBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer boolean equals(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.IntBuffer boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.IntBuffer boolean hasArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.IntBuffer int compare(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.IntBuffer int compareTo(java.nio.IntBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer allocate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer get(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer get(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer get(int[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer put(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer put(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer put(int[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer put(java.nio.IntBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer put(java.nio.IntBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer wrap(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer wrap(int[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer wrap(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.IntBuffer java.nio.IntBuffer wrap(int[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.LongBuffer boolean equals(long, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.LongBuffer boolean hasArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.LongBuffer int compare(long, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.LongBuffer int compareTo(java.nio.LongBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer allocate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer get(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer get(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer get(long[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer put(java.nio.LongBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer put(java.nio.LongBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer put(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer put(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer put(long[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer wrap(long[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer wrap(long[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer wrap(long[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.LongBuffer java.nio.LongBuffer wrap(long[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.MappedByteBuffer java.nio.MappedByteBuffer force()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.MappedByteBuffer java.nio.MappedByteBuffer load()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.MappedByteBuffer long mappingAddress(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ShortBuffer boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.nio.ShortBuffer boolean equals(short, short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ShortBuffer boolean hasArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ShortBuffer int compare(short, short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.ShortBuffer int compareTo(java.nio.ShortBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer allocate(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer get(short[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer get(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer get(short[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer put(java.nio.ShortBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer put(java.nio.ShortBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer put(short[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer put(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer put(short[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer wrap(short[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer wrap(short[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer wrap(short[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.ShortBuffer java.nio.ShortBuffer wrap(short[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.StringCharBuffer StringCharBuffer(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.StringCharBuffer boolean isDirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.StringCharBuffer boolean isReadOnly()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.nio.StringCharBuffer java.lang.CharSequence subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.StringCharBuffer java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.StringCharBuffer java.nio.CharBuffer duplicate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.StringCharBuffer java.nio.CharBuffer slice()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.nio.StringCharBuffer java.nio.CharBuffer subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
