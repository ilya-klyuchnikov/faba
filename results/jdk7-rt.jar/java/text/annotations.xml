<root>
  <item name="java.text.Annotation java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributeEntry boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.AttributeEntry boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.text.AttributeEntry java.lang.Object setValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.AttributeEntry java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedCharacterIterator.Attribute boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.AttributedCharacterIterator.Attribute java.lang.Object readResolve()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedCharacterIterator.Attribute java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString AttributedString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString AttributedString(java.lang.String, java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute,?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString AttributedString(java.lang.String, java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute,?&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString AttributedString(java.text.AttributedCharacterIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString AttributedString(java.text.AttributedCharacterIterator, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString AttributedString(java.text.AttributedCharacterIterator, int, int, java.text.AttributedCharacterIterator.Attribute[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString AttributedString(java.text.AttributedCharacterIterator, int, int, java.text.AttributedCharacterIterator.Attribute[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.AttributedString AttributedString(java.text.AttributedCharacterIterator[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString boolean access$200(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.AttributedString boolean access$300(java.text.AttributedString, java.util.Set, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString boolean access$300(java.text.AttributedString, java.util.Set, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString boolean attributeValuesMatch(java.util.Set, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString boolean mapsDiffer(java.util.Map, java.util.Map) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.AttributedString boolean valuesMatch(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.AttributedString char access$000(java.text.AttributedString, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString java.lang.Object access$100(java.text.AttributedString, java.text.AttributedCharacterIterator.Attribute, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString java.lang.Object access$400(java.text.AttributedString, java.text.AttributedCharacterIterator.Attribute, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator.Attribute[], int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.AttributedString java.text.AttributedCharacterIterator getIterator(java.text.AttributedCharacterIterator.Attribute[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString void addAttribute(java.text.AttributedCharacterIterator.Attribute, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString void addAttribute(java.text.AttributedCharacterIterator.Attribute, java.lang.Object, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString void addAttributes(java.util.Map&lt;? extends java.text.AttributedCharacterIterator.Attribute,?&gt;, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString void appendContents(java.lang.StringBuffer, java.text.CharacterIterator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString void setAttributes(java.util.Map, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.AttributedString.AttributedStringIterator AttributedStringIterator(java.text.AttributedString, java.text.AttributedCharacterIterator.Attribute[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.AttributedString.AttributedStringIterator AttributedStringIterator(java.text.AttributedString, java.text.AttributedCharacterIterator.Attribute[], int, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.AttributedString.AttributedStringIterator boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.AttributedString.AttributedStringIterator java.util.Map&lt;java.text.AttributedCharacterIterator.Attribute,java.lang.Object&gt; getAttributes()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Bidi Bidi(char[], int, byte[], int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Bidi Bidi(char[], int, byte[], int, int, int) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.Bidi Bidi(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Bidi Bidi(java.text.AttributedCharacterIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Bidi boolean requiresBidi(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Bidi void reorderVisually(byte[], int, java.lang.Object[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Bidi void reorderVisually(byte[], int, java.lang.Object[], int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.BreakDictionary.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.BreakIterator int getInt(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.BreakIterator java.text.BreakIterator createBreakInstance(java.util.Locale, int, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.BreakIterator java.util.Locale[] getAvailableLocales()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.BreakIterator long getLong(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.BreakIterator short getShort(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.BreakIterator void setText(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.BreakIterator.BreakIteratorCache BreakIteratorCache(java.util.Locale, java.text.BreakIterator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.BreakIterator.BreakIteratorGetter java.text.BreakIterator getObject(java.text.spi.BreakIteratorProvider, java.util.Locale, java.lang.String, java.lang.Object...) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.BreakIterator.BreakIteratorGetter java.text.BreakIterator getObject(java.text.spi.BreakIteratorProvider, java.util.Locale, java.lang.String, java.lang.Object...) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.BreakIterator.BreakIteratorGetter java.text.BreakIterator getObject(java.text.spi.BreakIteratorProvider, java.util.Locale, java.lang.String, java.lang.Object...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.CalendarBuilder java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CalendarBuilder java.text.CalendarBuilder addYear(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CalendarBuilder java.text.CalendarBuilder clear(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CalendarBuilder java.text.CalendarBuilder set(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CalendarBuilder java.util.Calendar establish(java.util.Calendar) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CalendarBuilder java.util.Calendar establish(java.util.Calendar)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.CharacterIteratorFieldDelegate java.text.AttributedCharacterIterator getIterator(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.ChoiceFormat boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.text.ChoiceFormat double[] doubleArraySize(double[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat double[] doubleArraySize(double[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat java.lang.Number parse(java.lang.String, java.text.ParsePosition) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat java.lang.Number parse(java.lang.String, java.text.ParsePosition)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat java.lang.String toPattern()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.FieldPosition) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.FieldPosition) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.ChoiceFormat java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.FieldPosition)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat java.lang.String[] doubleArraySize(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat java.lang.String[] doubleArraySize(java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat void applyPattern(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat void setChoices(double[], java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.ChoiceFormat void setChoices(double[], java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CollationElementIterator CollationElementIterator(java.lang.String, java.text.RuleBasedCollator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CollationElementIterator CollationElementIterator(java.lang.String, java.text.RuleBasedCollator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CollationElementIterator CollationElementIterator(java.text.CharacterIterator, java.text.RuleBasedCollator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CollationElementIterator CollationElementIterator(java.text.CharacterIterator, java.text.RuleBasedCollator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CollationElementIterator int[] makeReorderedBuffer(int, int, int[], boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.CollationElementIterator int[] makeReorderedBuffer(int, int, int[], boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CollationElementIterator void setText(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CollationElementIterator void setText(java.text.CharacterIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.CollationKey CollationKey(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Collator boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.Collator java.util.Locale[] getAvailableLocales()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Collator.CollatorGetter java.text.Collator getObject(java.text.spi.CollatorProvider, java.util.Locale, java.lang.String, java.lang.Object...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Collator.CollatorGetter java.text.Collator getObject(java.text.spi.CollatorProvider, java.util.Locale, java.lang.String, java.lang.Object...) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.Collator.CollatorGetter java.text.Collator getObject(java.text.spi.CollatorProvider, java.util.Locale, java.lang.String, java.lang.Object...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DateFormat boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DateFormat java.lang.String format(java.util.Date)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.text.DateFormat get(int, int, int, java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.text.DateFormat getDateInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.text.DateFormat getDateInstance(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.text.DateFormat getDateInstance(int, java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.text.DateFormat getDateTimeInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.text.DateFormat getDateTimeInstance(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.text.DateFormat getDateTimeInstance(int, int, java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.text.DateFormat getInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.text.DateFormat getTimeInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.text.DateFormat getTimeInstance(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.text.DateFormat getTimeInstance(int, java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat java.util.Locale[] getAvailableLocales()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat.DateFormatGetter java.text.DateFormat getObject(java.text.spi.DateFormatProvider, java.util.Locale, java.lang.String, java.lang.Object...) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DateFormat.DateFormatGetter java.text.DateFormat getObject(java.text.spi.DateFormatProvider, java.util.Locale, java.lang.String, java.lang.Object...) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormat.DateFormatGetter java.text.DateFormat getObject(java.text.spi.DateFormatProvider, java.util.Locale, java.lang.String, java.lang.Object...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DateFormat.Field java.lang.Object readResolve()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DateFormatSymbols java.lang.String[] toOneBasedArray(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols java.util.Locale[] getAvailableLocales()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols void copyMembers(java.text.DateFormatSymbols, java.text.DateFormatSymbols) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols void copyMembers(java.text.DateFormatSymbols, java.text.DateFormatSymbols) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols void setAmPmStrings(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols void setEras(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols void setLocalPatternChars(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols void setMonths(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols void setShortMonths(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols void setShortWeekdays(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols void setWeekdays(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols void setZoneStrings(java.lang.String[][]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols.DateFormatSymbolsGetter java.text.DateFormatSymbols getObject(java.text.spi.DateFormatSymbolsProvider, java.util.Locale, java.lang.String, java.lang.Object...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DateFormatSymbols.DateFormatSymbolsGetter java.text.DateFormatSymbols getObject(java.text.spi.DateFormatSymbolsProvider, java.util.Locale, java.lang.String, java.lang.Object...) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DecimalFormat DecimalFormat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat DecimalFormat(java.lang.String, java.text.DecimalFormatSymbols) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat DecimalFormat(java.lang.String, java.text.DecimalFormatSymbols) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DecimalFormat boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DecimalFormat boolean subparse(java.lang.String, java.text.ParsePosition, java.lang.String, java.lang.String, java.text.DigitList, boolean, boolean[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat boolean subparse(java.lang.String, java.text.ParsePosition, java.lang.String, java.lang.String, java.text.DigitList, boolean, boolean[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat boolean subparse(java.lang.String, java.text.ParsePosition, java.lang.String, java.lang.String, java.text.DigitList, boolean, boolean[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat boolean subparse(java.lang.String, java.text.ParsePosition, java.lang.String, java.lang.String, java.text.DigitList, boolean, boolean[]) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat boolean subparse(java.lang.String, java.text.ParsePosition, java.lang.String, java.lang.String, java.text.DigitList, boolean, boolean[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,_,_,_,_,null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DecimalFormat java.lang.Number parse(java.lang.String, java.text.ParsePosition) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.Number parse(java.lang.String, java.text.ParsePosition) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.String expandAffix(java.lang.String, java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.String expandAffix(java.lang.String, java.lang.StringBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.String expandAffix(java.lang.String, java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.String toLocalizedPattern()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.String toPattern()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.String toPattern(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.FieldPosition) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.FieldPosition) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.FieldPosition)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.Format.FieldDelegate) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.Format.FieldDelegate) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(double, java.lang.StringBuffer, java.text.Format.FieldDelegate)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigDecimal, java.lang.StringBuffer, java.text.FieldPosition) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigDecimal, java.lang.StringBuffer, java.text.FieldPosition) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigDecimal, java.lang.StringBuffer, java.text.FieldPosition) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigDecimal, java.lang.StringBuffer, java.text.FieldPosition)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigDecimal, java.lang.StringBuffer, java.text.Format.FieldDelegate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigDecimal, java.lang.StringBuffer, java.text.Format.FieldDelegate) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigDecimal, java.lang.StringBuffer, java.text.Format.FieldDelegate) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigDecimal, java.lang.StringBuffer, java.text.Format.FieldDelegate)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigInteger, java.lang.StringBuffer, java.text.FieldPosition) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigInteger, java.lang.StringBuffer, java.text.FieldPosition) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigInteger, java.lang.StringBuffer, java.text.FieldPosition) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigInteger, java.lang.StringBuffer, java.text.FieldPosition)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigInteger, java.lang.StringBuffer, java.text.Format.FieldDelegate, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigInteger, java.lang.StringBuffer, java.text.Format.FieldDelegate, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigInteger, java.lang.StringBuffer, java.text.Format.FieldDelegate, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(java.math.BigInteger, java.lang.StringBuffer, java.text.Format.FieldDelegate, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(long, java.lang.StringBuffer, java.text.FieldPosition) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(long, java.lang.StringBuffer, java.text.FieldPosition) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(long, java.lang.StringBuffer, java.text.FieldPosition)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(long, java.lang.StringBuffer, java.text.Format.FieldDelegate) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(long, java.lang.StringBuffer, java.text.Format.FieldDelegate) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer format(long, java.lang.StringBuffer, java.text.Format.FieldDelegate)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer subformat(java.lang.StringBuffer, java.text.Format.FieldDelegate, boolean, boolean, int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer subformat(java.lang.StringBuffer, java.text.Format.FieldDelegate, boolean, boolean, int, int, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.lang.StringBuffer subformat(java.lang.StringBuffer, java.text.Format.FieldDelegate, boolean, boolean, int, int, int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_,_,_,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DecimalFormat java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat java.text.FieldPosition[] expandAffix(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat void append(java.lang.StringBuffer, java.lang.String, java.text.Format.FieldDelegate, java.text.FieldPosition[], java.text.Format.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat void append(java.lang.StringBuffer, java.lang.String, java.text.Format.FieldDelegate, java.text.FieldPosition[], java.text.Format.Field) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat void appendAffix(java.lang.StringBuffer, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat void appendAffix(java.lang.StringBuffer, java.lang.String, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DecimalFormat void applyLocalizedPattern(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat void applyPattern(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat void applyPattern(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormat void setRoundingMode(java.math.RoundingMode) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormatSymbols DecimalFormatSymbols(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormatSymbols boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DecimalFormatSymbols boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.text.DecimalFormatSymbols java.text.DecimalFormatSymbols getInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormatSymbols java.text.DecimalFormatSymbols getInstance(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormatSymbols java.util.Locale[] getAvailableLocales()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormatSymbols void initialize(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormatSymbols void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormatSymbols void setCurrency(java.util.Currency) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormatSymbols void setExponentSeparator(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormatSymbols.DecimalFormatSymbolsGetter java.text.DecimalFormatSymbols getObject(java.text.spi.DecimalFormatSymbolsProvider, java.util.Locale, java.lang.String, java.lang.Object...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DecimalFormatSymbols.DecimalFormatSymbolsGetter java.text.DecimalFormatSymbols getObject(java.text.spi.DecimalFormatSymbolsProvider, java.util.Locale, java.lang.String, java.lang.Object...) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DictionaryBasedBreakIterator void prepareCategoryFlags(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DictionaryBasedBreakIterator void setText(java.text.CharacterIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DigitList boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DigitList int parseInt(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DigitList java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DigitList void set(boolean, java.lang.String, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DigitList void set(boolean, java.math.BigDecimal, int, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DigitList void set(boolean, java.math.BigInteger, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.DontCareFieldPosition.1 void formatted(int, java.text.Format.Field, java.lang.Object, int, int, java.lang.StringBuffer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DontCareFieldPosition.1 void formatted(int, java.text.Format.Field, java.lang.Object, int, int, java.lang.StringBuffer) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DontCareFieldPosition.1 void formatted(int, java.text.Format.Field, java.lang.Object, int, int, java.lang.StringBuffer) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DontCareFieldPosition.1 void formatted(java.text.Format.Field, java.lang.Object, int, int, java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DontCareFieldPosition.1 void formatted(java.text.Format.Field, java.lang.Object, int, int, java.lang.StringBuffer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.DontCareFieldPosition.1 void formatted(java.text.Format.Field, java.lang.Object, int, int, java.lang.StringBuffer) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.FieldPosition boolean access$100(java.text.FieldPosition, java.text.Format.Field) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.FieldPosition boolean access$200(java.text.FieldPosition, java.text.Format.Field, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.FieldPosition boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.FieldPosition boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.text.FieldPosition java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.FieldPosition java.text.Format.FieldDelegate getFieldDelegate()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.FieldPosition.Delegate Delegate(java.text.FieldPosition, java.text.FieldPosition.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.FieldPosition.Delegate void formatted(int, java.text.Format.Field, java.lang.Object, int, int, java.lang.StringBuffer) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.FieldPosition.Delegate void formatted(int, java.text.Format.Field, java.lang.Object, int, int, java.lang.StringBuffer) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.FieldPosition.Delegate void formatted(java.text.Format.Field, java.lang.Object, int, int, java.lang.StringBuffer) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.FieldPosition.Delegate void formatted(java.text.Format.Field, java.lang.Object, int, int, java.lang.StringBuffer) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.Format java.lang.String format(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Format java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Format java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.lang.String, java.text.AttributedCharacterIterator.Attribute, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Format java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.text.AttributedCharacterIterator, java.text.AttributedCharacterIterator.Attribute, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Format java.text.AttributedCharacterIterator createAttributedCharacterIterator(java.text.AttributedCharacterIterator[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MergeCollation MergeCollation(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MergeCollation int findLastEntry(java.text.PatternEntry, java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MergeCollation java.lang.String emitPattern()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MergeCollation java.lang.String emitPattern(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MergeCollation java.lang.String getPattern()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MergeCollation java.lang.String getPattern(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MergeCollation void addPattern(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MergeCollation void fixEntry(java.text.PatternEntry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MergeCollation void setPattern(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MessageFormat boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MessageFormat int findKeyword(java.lang.String, java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MessageFormat int findKeyword(java.lang.String, java.lang.String[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MessageFormat java.lang.Object[] parse(java.lang.String, java.text.ParsePosition) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MessageFormat java.lang.Object[] parse(java.lang.String, java.text.ParsePosition)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;!null;null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.MessageFormat java.lang.String toPattern()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer format(java.lang.Object[], java.lang.StringBuffer, java.text.FieldPosition) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer format(java.lang.Object[], java.lang.StringBuffer, java.text.FieldPosition) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer format(java.lang.Object[], java.lang.StringBuffer, java.text.FieldPosition) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer format(java.lang.Object[], java.lang.StringBuffer, java.text.FieldPosition)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer subformat(java.lang.Object[], java.lang.StringBuffer, java.text.FieldPosition, java.util.List) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer subformat(java.lang.Object[], java.lang.StringBuffer, java.text.FieldPosition, java.util.List) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer subformat(java.lang.Object[], java.lang.StringBuffer, java.text.FieldPosition, java.util.List) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer subformat(java.lang.Object[], java.lang.StringBuffer, java.text.FieldPosition, java.util.List) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.MessageFormat java.lang.StringBuffer subformat(java.lang.Object[], java.lang.StringBuffer, java.text.FieldPosition, java.util.List)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.MessageFormat java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MessageFormat java.text.Format[] getFormats()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MessageFormat void append(java.lang.StringBuffer, java.text.CharacterIterator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MessageFormat void applyPattern(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MessageFormat void makeFormat(int, int, java.lang.StringBuilder[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MessageFormat void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.MessageFormat void setFormats(java.text.Format[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Normalizer boolean isNormalized(java.lang.CharSequence, java.text.Normalizer.Form) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Normalizer boolean isNormalized(java.lang.CharSequence, java.text.Normalizer.Form) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Normalizer java.lang.String normalize(java.lang.CharSequence, java.text.Normalizer.Form) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.Normalizer java.lang.String normalize(java.lang.CharSequence, java.text.Normalizer.Form) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.NumberFormat boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.text.NumberFormat java.lang.String format(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.lang.String format(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.lang.StringBuffer format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getCurrencyInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getCurrencyInstance(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getInstance(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getInstance(java.util.Locale, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getIntegerInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getIntegerInstance(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getNumberInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getNumberInstance(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getPercentInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getPercentInstance(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getScientificInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.text.NumberFormat getScientificInstance(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat java.util.Locale[] getAvailableLocales()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat void setCurrency(java.util.Currency) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.NumberFormat void setRoundingMode(java.math.RoundingMode) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.NumberFormat void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat.Field java.lang.Object readResolve()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat.NumberFormatGetter java.text.NumberFormat getObject(java.text.spi.NumberFormatProvider, java.util.Locale, java.lang.String, java.lang.Object...) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.NumberFormat.NumberFormatGetter java.text.NumberFormat getObject(java.text.spi.NumberFormatProvider, java.util.Locale, java.lang.String, java.lang.Object...) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.NumberFormat.NumberFormatGetter java.text.NumberFormat getObject(java.text.spi.NumberFormatProvider, java.util.Locale, java.lang.String, java.lang.Object...)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.ParsePosition boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.ParsePosition boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.text.ParsePosition java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.PatternEntry PatternEntry(int, java.lang.StringBuffer, java.lang.StringBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.PatternEntry PatternEntry(int, java.lang.StringBuffer, java.lang.StringBuffer) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.PatternEntry boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.PatternEntry boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.text.PatternEntry java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.PatternEntry void addToBuffer(java.lang.StringBuffer, boolean, boolean, java.text.PatternEntry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.PatternEntry void addToBuffer(java.lang.StringBuffer, boolean, boolean, java.text.PatternEntry) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.PatternEntry void appendQuoted(java.lang.String, java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.PatternEntry void appendQuoted(java.lang.String, java.lang.StringBuffer) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.PatternEntry void appendQuotedChars(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.PatternEntry void appendQuotedExtension(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBCollationTables RBCollationTables(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBCollationTables boolean access$102(java.text.RBCollationTables, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBCollationTables boolean access$102(java.text.RBCollationTables, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="java.text.RBCollationTables boolean access$202(java.text.RBCollationTables, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBCollationTables boolean access$202(java.text.RBCollationTables, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="java.text.RBCollationTables int getEntry(java.util.Vector, java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBCollationTables int getEntry(java.util.Vector, java.lang.String, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.RBCollationTables java.util.Vector access$402(java.text.RBCollationTables, java.util.Vector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBCollationTables java.util.Vector access$402(java.text.RBCollationTables, java.util.Vector)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.RBCollationTables java.util.Vector access$502(java.text.RBCollationTables, java.util.Vector) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBCollationTables java.util.Vector access$502(java.text.RBCollationTables, java.util.Vector)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.RBCollationTables short access$702(java.text.RBCollationTables, short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBCollationTables short access$802(java.text.RBCollationTables, short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBCollationTables sun.text.IntHashtable access$602(java.text.RBCollationTables, sun.text.IntHashtable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBCollationTables sun.text.IntHashtable access$602(java.text.RBCollationTables, sun.text.IntHashtable)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.RBCollationTables sun.text.UCompactIntArray access$302(java.text.RBCollationTables, sun.text.UCompactIntArray) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBCollationTables sun.text.UCompactIntArray access$302(java.text.RBCollationTables, sun.text.UCompactIntArray)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.RBCollationTables.BuildAPI BuildAPI(java.text.RBCollationTables, java.text.RBCollationTables.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.RBTableBuilder int addExpansion(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBTableBuilder void addContractFlags(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBTableBuilder void addContractOrder(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBTableBuilder void addContractOrder(java.lang.String, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBTableBuilder void addExpandOrder(int, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBTableBuilder void addExpandOrder(java.lang.String, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBTableBuilder void addExpandOrder(java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RBTableBuilder void build(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedBreakIterator boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.RuleBasedBreakIterator boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.text.RuleBasedBreakIterator byte[] readFile(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedBreakIterator java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedBreakIterator void checkOffset(int, java.text.CharacterIterator) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedBreakIterator void setText(java.text.CharacterIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedBreakIterator.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedBreakIterator.SafeCharIterator SafeCharIterator(java.text.CharacterIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollationKey RuleBasedCollationKey(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollationKey boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.RuleBasedCollationKey int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollationKey int compareTo(java.text.CollationKey) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollator RuleBasedCollator(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollator RuleBasedCollator(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollator RuleBasedCollator(java.text.RuleBasedCollator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollator boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.RuleBasedCollator boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.text.RuleBasedCollator int compare(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollator int compare(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollator java.text.CollationElementIterator getCollationElementIterator(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollator java.text.CollationElementIterator getCollationElementIterator(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollator java.text.CollationElementIterator getCollationElementIterator(java.text.CharacterIterator) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollator java.text.CollationElementIterator getCollationElementIterator(java.text.CharacterIterator)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.RuleBasedCollator java.text.CollationKey getCollationKey(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.RuleBasedCollator java.text.CollationKey getCollationKey(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.SimpleDateFormat SimpleDateFormat(int, int, java.util.Locale) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat SimpleDateFormat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat SimpleDateFormat(java.lang.String, java.text.DateFormatSymbols) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat SimpleDateFormat(java.lang.String, java.text.DateFormatSymbols) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat SimpleDateFormat(java.lang.String, java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat SimpleDateFormat(java.lang.String, java.util.Locale) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.text.SimpleDateFormat boolean matchDSTString(java.lang.String, int, int, int, java.lang.String[][]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat boolean matchDSTString(java.lang.String, int, int, int, java.lang.String[][]) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat char[] compile(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat char[] compile(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat int matchString(java.lang.String, int, int, java.lang.String[], java.text.CalendarBuilder) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat int matchString(java.lang.String, int, int, java.util.Map&lt;java.lang.String,java.lang.Integer&gt;, java.text.CalendarBuilder) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.SimpleDateFormat int subParse(java.lang.String, int, int, int, boolean, boolean[], java.text.ParsePosition, boolean, java.text.CalendarBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat java.lang.String toLocalizedPattern()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat java.lang.String translatePattern(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat java.lang.String translatePattern(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null;_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.SimpleDateFormat java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer, java.text.Format.FieldDelegate) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat java.lang.StringBuffer format(java.util.Date, java.lang.StringBuffer, java.text.Format.FieldDelegate)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null,_-&gt;!null;_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.text.SimpleDateFormat java.text.AttributedCharacterIterator formatToCharacterIterator(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat java.util.Date parse(java.lang.String, java.text.ParsePosition) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat java.util.Date parse(java.lang.String, java.text.ParsePosition) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat void applyLocalizedPattern(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat void applyPattern(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat void encode(int, int, java.lang.StringBuilder) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat void parseAmbiguousDatesAsAfter(java.util.Date) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat void set2DigitYearStart(java.util.Date) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat void setDateFormatSymbols(java.text.DateFormatSymbols) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat void subFormat(int, int, java.text.Format.FieldDelegate, java.lang.StringBuffer, boolean) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.SimpleDateFormat void subFormat(int, int, java.text.Format.FieldDelegate, java.lang.StringBuffer, boolean) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.StringCharacterIterator StringCharacterIterator(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.StringCharacterIterator StringCharacterIterator(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.StringCharacterIterator StringCharacterIterator(java.lang.String, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.text.StringCharacterIterator boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.text.StringCharacterIterator void setText(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
