<root>
  <item name="java.util.jar.Attributes Attributes(java.util.jar.Attributes) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Attributes java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Attributes java.lang.String getValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Attributes java.lang.String putValue(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Attributes void putAll(java.util.Map&lt;?,?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Attributes void read(java.util.jar.Manifest.FastInputStream, byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Attributes void write(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Attributes void writeMain(java.io.DataOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Attributes.Name Name(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Attributes.Name boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.jar.Attributes.Name boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.util.jar.Attributes.Name boolean isValid(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarEntry JarEntry(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarEntry JarEntry(java.util.jar.JarEntry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarEntry JarEntry(java.util.zip.ZipEntry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile JarFile(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile JarFile(java.io.File, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile JarFile(java.io.File, boolean, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile JarFile(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile JarFile(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile byte[] getBytes(java.util.zip.ZipEntry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile java.io.InputStream getInputStream(java.util.zip.ZipEntry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile java.util.Enumeration&lt;java.lang.String&gt; unsignedEntryNames()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile java.util.Enumeration&lt;java.util.jar.JarEntry&gt; entries()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile java.util.jar.JarEntry newEntry(java.util.zip.ZipEntry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile java.util.jar.JarEntry newEntry(java.util.zip.ZipEntry)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile java.util.jar.JarVerifier access$100(java.util.jar.JarFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile java.util.zip.ZipEntry getEntry(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile void access$000(java.util.jar.JarFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile.1 java.util.jar.JarFile.JarFileEntry nextElement()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile.3 java.util.jar.JarFile.JarFileEntry nextElement()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarFile.JarFileEntry JarFileEntry(java.util.jar.JarFile, java.util.zip.ZipEntry) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarInputStream JarInputStream(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarInputStream JarInputStream(java.io.InputStream, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarInputStream byte[] getBytes(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarInputStream java.util.jar.JarEntry checkManifest(java.util.jar.JarEntry)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.util.jar.JarInputStream java.util.zip.ZipEntry createZipEntry(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarInputStream java.util.zip.ZipEntry createZipEntry(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarOutputStream JarOutputStream(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarOutputStream JarOutputStream(java.io.OutputStream, java.util.jar.Manifest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarOutputStream JarOutputStream(java.io.OutputStream, java.util.jar.Manifest) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarOutputStream boolean hasMagic(byte[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.util.jar.JarOutputStream int get16(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarOutputStream void putNextEntry(java.util.zip.ZipEntry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarOutputStream void set16(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier boolean isSigningRelated(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.security.CodeSigner[] findMatchingSigners(java.security.CodeSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.security.CodeSigner[] getCodeSigners(java.util.jar.JarFile, java.util.jar.JarEntry) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.security.CodeSource getCodeSource(java.net.URL, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.security.CodeSource getCodeSource(java.net.URL, java.util.jar.JarFile, java.util.jar.JarEntry)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.security.CodeSource getUnsignedCS(java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.security.CodeSource mapSignersToCodeSource(java.net.URL, java.security.CodeSigner[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.security.CodeSource[] getCodeSources(java.util.jar.JarFile, java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.security.CodeSource[] mapSignersToCodeSources(java.net.URL, java.util.List, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.jar.JarVerifier java.security.cert.Certificate[] mapSignersToCertArray(java.security.CodeSigner[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.util.jar.JarVerifier java.util.Enumeration&lt;java.lang.String&gt; entryNames(java.util.jar.JarFile, java.security.CodeSource[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.util.Enumeration&lt;java.lang.String&gt; entryNames(java.util.jar.JarFile, java.security.CodeSource[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.util.Enumeration&lt;java.lang.String&gt; unsignedEntryNames(java.util.jar.JarFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.util.Enumeration&lt;java.lang.String&gt; unsignedEntryNames(java.util.jar.JarFile)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.util.Enumeration&lt;java.util.jar.JarEntry&gt; entries2(java.util.jar.JarFile, java.util.Enumeration)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier java.util.List getManifestDigests()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier void beginEntry(java.util.jar.JarEntry, sun.security.util.ManifestEntryVerifier) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.jar.JarVerifier.VerifierCodeSource boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.jar.JarVerifier.VerifierCodeSource boolean isSameDomain(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.jar.JarVerifier.VerifierCodeSource java.security.CodeSigner[] access$000(java.util.jar.JarVerifier.VerifierCodeSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JarVerifier.VerifierStream VerifierStream(java.util.jar.Manifest, java.util.jar.JarEntry, java.io.InputStream, java.util.jar.JarVerifier) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JavaUtilJarAccessImpl boolean jarFileHasClassPathAttribute(java.util.jar.JarFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JavaUtilJarAccessImpl java.security.CodeSource getCodeSource(java.util.jar.JarFile, java.net.URL, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JavaUtilJarAccessImpl java.security.CodeSource[] getCodeSources(java.util.jar.JarFile, java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JavaUtilJarAccessImpl java.util.Enumeration&lt;java.lang.String&gt; entryNames(java.util.jar.JarFile, java.security.CodeSource[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JavaUtilJarAccessImpl java.util.Enumeration&lt;java.util.jar.JarEntry&gt; entries2(java.util.jar.JarFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JavaUtilJarAccessImpl java.util.List getManifestDigests(java.util.jar.JarFile) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.JavaUtilJarAccessImpl void setEagerValidation(java.util.jar.JarFile, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Manifest Manifest(java.util.jar.Manifest) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Manifest boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.jar.Manifest boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.util.jar.Manifest java.lang.Object clone()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Manifest java.lang.String parseName(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Manifest void make72Safe(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.jar.Manifest.FastInputStream int readLine(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
