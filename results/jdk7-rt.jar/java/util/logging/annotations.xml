<root>
  <item name="java.util.logging.ErrorManager void error(java.lang.String, java.lang.Exception, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.ErrorManager void error(java.lang.String, java.lang.Exception, int) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.FileHandler FileHandler(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.FileHandler FileHandler(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.FileHandler FileHandler(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.FileHandler FileHandler(java.lang.String, int, int, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.FileHandler java.io.File generate(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.FileHandler void access$100(java.util.logging.FileHandler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.FileHandler void open(java.io.File, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.FileHandler.InitializationErrorManager InitializationErrorManager(java.util.logging.FileHandler.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.FileHandler.InitializationErrorManager void error(java.lang.String, java.lang.Exception, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.FileHandler.MeteredStream void write(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Formatter Formatter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Formatter java.lang.String formatMessage(java.util.logging.LogRecord) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Formatter java.lang.String getHead(java.util.logging.Handler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Formatter java.lang.String getHead(java.util.logging.Handler)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Formatter java.lang.String getTail(java.util.logging.Handler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Formatter java.lang.String getTail(java.util.logging.Handler)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Handler boolean isLoggable(java.util.logging.LogRecord) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Handler java.lang.String getEncoding()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Handler java.util.logging.Filter getFilter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Handler java.util.logging.Formatter getFormatter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Handler java.util.logging.Level getLevel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Handler void setErrorManager(java.util.logging.ErrorManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Handler void setFormatter(java.util.logging.Formatter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Handler void setLevel(java.util.logging.Level) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Level Level(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Level Level(java.lang.String, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Level boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Level int access$100(java.util.logging.Level) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Level int access$100(java.util.logging.Level)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Level int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Level int intValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Level java.lang.String access$000(java.util.logging.Level) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Level java.lang.String access$000(java.util.logging.Level)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Level java.lang.String access$200(java.util.logging.Level) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Level java.lang.String access$200(java.util.logging.Level)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Level java.lang.String getLevelName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Level java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Level java.lang.String getResourceBundleName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Level java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Level java.util.logging.Level findLevel(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Level java.util.logging.Level parse(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Level.KnownLevel KnownLevel(java.util.logging.Level) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Level.KnownLevel java.util.logging.Level.KnownLevel findByLocalizedLevelName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.util.logging.Level.KnownLevel java.util.logging.Level.KnownLevel findByLocalizedName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.util.logging.Level.KnownLevel java.util.logging.Level.KnownLevel matches(java.util.logging.Level) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Level.KnownLevel void add(java.util.logging.Level) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager boolean access$602(java.util.logging.LogManager, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager boolean access$602(java.util.logging.LogManager, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="java.util.logging.LogManager boolean access$702(java.util.logging.LogManager, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager boolean access$702(java.util.logging.LogManager, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,false-&gt;false;_,true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="java.util.logging.LogManager boolean addLogger(java.util.logging.Logger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager java.lang.String getStringProperty(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.util.logging.LogManager java.lang.String[] access$1200(java.util.logging.LogManager, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager java.lang.ref.ReferenceQueue access$1300(java.util.logging.LogManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager java.lang.ref.ReferenceQueue access$1300(java.util.logging.LogManager)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogManager java.util.List&lt;java.util.logging.LogManager.LoggerContext&gt; contexts()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.Level access$1400()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.LogManager access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.LogManager access$102(java.util.logging.LogManager)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.LogManager.LoggerContext access$400(java.util.logging.LogManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.LogManager.LoggerContext access$400(java.util.logging.LogManager)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.LogManager.LoggerContext access$500(java.util.logging.LogManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.LogManager.LoggerContext access$500(java.util.logging.LogManager)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.Logger access$200(java.util.logging.LogManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.Logger access$200(java.util.logging.LogManager)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.Logger access$202(java.util.logging.LogManager, java.util.logging.Logger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.Logger access$202(java.util.logging.LogManager, java.util.logging.Logger)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.Logger demandLogger(java.lang.String, java.lang.String, java.lang.Class&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LogManager java.util.logging.Logger demandLogger(java.lang.String, java.lang.String, java.lang.Class&lt;?&gt;) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LogManager void access$1500(java.util.logging.LogManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager void addPropertyChangeListener(java.beans.PropertyChangeListener) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager void loadLoggerHandlers(java.util.logging.Logger, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LogManager void resetLogger(java.util.logging.Logger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogManager.Cleaner Cleaner(java.util.logging.LogManager, java.util.logging.LogManager.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LogManager.LoggerContext LoggerContext(boolean, java.util.logging.LogManager.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LogManager.LoggerContext LoggerContext(java.util.logging.LogManager.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LogManager.LoggerContext boolean addLocalLogger(java.util.logging.Logger, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager.LoggerContext java.util.logging.LogManager.LogNode getNode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LogManager.LoggerContext void ensureDefaultLogger(java.util.logging.Logger) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LogManager.LoggerContext void processParentHandlers(java.util.logging.Logger, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager.LoggerWeakRef LoggerWeakRef(java.util.logging.LogManager, java.util.logging.Logger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager.LoggerWeakRef LoggerWeakRef(java.util.logging.LogManager, java.util.logging.Logger) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager.RootLogger RootLogger(java.util.logging.LogManager, java.util.logging.LogManager.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LogManager.RootLogger void addHandler(java.util.logging.Handler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager.RootLogger void log(java.util.logging.LogRecord) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogManager.RootLogger void removeHandler(java.util.logging.Handler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LogManager.SystemLoggerContext java.util.logging.Logger demandLogger(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LogRecord LogRecord(java.util.logging.Level, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogRecord boolean isLoggerImplFrame(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogRecord boolean isLoggerImplFrame(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogRecord int getThreadID()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogRecord java.lang.Object[] getParameters()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogRecord java.lang.String getLoggerName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogRecord java.lang.String getMessage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogRecord java.lang.String getResourceBundleName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogRecord java.lang.Throwable getThrown()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogRecord java.util.ResourceBundle getResourceBundle()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogRecord java.util.logging.Level getLevel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogRecord long getMillis()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogRecord long getSequenceNumber()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LogRecord void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogRecord void setLevel(java.util.logging.Level) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LogRecord void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger Logger(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger Logger(java.lang.String, java.lang.String, java.lang.Class&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger Logger(java.lang.String, java.lang.String, java.lang.Class&lt;?&gt;) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger boolean getUseParentHandlers()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Logger boolean isLoggable(java.util.logging.Level) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger boolean isLoggable(java.util.logging.Level)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Logger java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Logger java.lang.String getResourceBundleName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Logger java.util.ResourceBundle findResourceBundle(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger java.util.ResourceBundle findResourceBundle(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.util.logging.Logger java.util.ResourceBundle findResourceBundleFromStack(java.lang.String, java.util.Locale, java.lang.ClassLoader) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger java.util.logging.Filter getFilter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Logger java.util.logging.Level getLevel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Logger java.util.logging.Logger getAnonymousLogger()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger java.util.logging.Logger getAnonymousLogger(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger java.util.logging.Logger getAnonymousLogger(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger java.util.logging.Logger getGlobal()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Logger java.util.logging.Logger getParent()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Logger void addHandler(java.util.logging.Handler) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void doLog(java.util.logging.LogRecord) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void doLog(java.util.logging.LogRecord, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void doLog(java.util.logging.LogRecord, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger void entering(java.lang.String, java.lang.String, java.lang.Object[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger void log(java.util.logging.Level, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void log(java.util.logging.Level, java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void log(java.util.logging.Level, java.lang.String, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void log(java.util.logging.Level, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void log(java.util.logging.LogRecord) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void logp(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger void removeChildLogger(java.util.logging.LogManager.LoggerWeakRef) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger void removeHandler(java.util.logging.Handler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger void setCallersClassLoaderRef(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger void setParent(java.util.logging.Logger) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logger void setupResourceInfo(java.lang.String, java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger void setupResourceInfo(java.lang.String, java.lang.Class&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.Logger.LoggerHelper LoggerHelper()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Logging Logging()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.Logging void setLoggerLevel(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.Logging void setLoggerLevel(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LoggingPermission LoggingPermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LoggingPermission LoggingPermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.LoggingProxyImpl LoggingProxyImpl()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LoggingProxyImpl boolean isLoggable(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LoggingProxyImpl int getLevelValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LoggingProxyImpl int getLevelValue(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LoggingProxyImpl java.lang.Object getLevel(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LoggingProxyImpl java.lang.Object parseLevel(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LoggingProxyImpl java.lang.String getLevelName(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LoggingProxyImpl java.lang.String getLevelName(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.LoggingProxyImpl void log(java.lang.Object, java.lang.Object, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LoggingProxyImpl void log(java.lang.Object, java.lang.Object, java.lang.String, java.lang.Object...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LoggingProxyImpl void log(java.lang.Object, java.lang.Object, java.lang.String, java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.LoggingProxyImpl void setLevel(java.lang.Object, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.MemoryHandler MemoryHandler(java.util.logging.Handler, int, java.util.logging.Level) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.MemoryHandler MemoryHandler(java.util.logging.Handler, int, java.util.logging.Level) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.MemoryHandler boolean isLoggable(java.util.logging.LogRecord) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.MemoryHandler java.util.logging.Level getPushLevel()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.MemoryHandler void setPushLevel(java.util.logging.Level) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.SimpleFormatter java.lang.String format(java.util.logging.LogRecord) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.StreamHandler boolean isLoggable(java.util.logging.LogRecord) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.StreamHandler boolean isLoggable(java.util.logging.LogRecord)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.util.logging.StreamHandler void setOutputStream(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.XMLFormatter java.lang.String format(java.util.logging.LogRecord) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.XMLFormatter java.lang.String format(java.util.logging.LogRecord)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.XMLFormatter java.lang.String getHead(java.util.logging.Handler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.XMLFormatter java.lang.String getHead(java.util.logging.Handler)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.XMLFormatter java.lang.String getTail(java.util.logging.Handler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.util.logging.XMLFormatter java.lang.String getTail(java.util.logging.Handler)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.util.logging.XMLFormatter void a2(java.lang.StringBuffer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.XMLFormatter void appendISO8601(java.lang.StringBuffer, long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.util.logging.XMLFormatter void escape(java.lang.StringBuffer, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
</root>
