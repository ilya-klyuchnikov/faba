<root>
  <item name="java.lang.AbstractStringBuilder AbstractStringBuilder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.AbstractStringBuilder char[] getValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.AbstractStringBuilder int capacity()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.AbstractStringBuilder int indexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder int lastIndexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder int length()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder append(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder appendCodePoint(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder delete(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder deleteCharAt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder replace(int, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder replace(int, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.AbstractStringBuilder reverse()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.AbstractStringBuilder java.lang.String substring(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ApplicationShutdownHooks ApplicationShutdownHooks()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ApplicationShutdownHooks boolean remove(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ApplicationShutdownHooks void add(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ApplicationShutdownHooks.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.AssertionError AssertionError(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.AssertionStatusDirectives AssertionStatusDirectives()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Boolean Boolean(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Boolean boolean booleanValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Boolean boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Boolean boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Boolean boolean parseBoolean(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Boolean boolean parseBoolean(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Boolean boolean toBoolean(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Boolean boolean toBoolean(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Boolean int compare(boolean, boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Boolean int compareTo(java.lang.Boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Boolean int compareTo(java.lang.Boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Boolean int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Boolean int compareTo(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Boolean int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Boolean java.lang.Boolean valueOf(boolean)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Boolean java.lang.Boolean valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Boolean java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Boolean java.lang.String toString(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte Byte(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Byte boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte byte byteValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte byte parseByte(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte byte parseByte(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte double doubleValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte float floatValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte int compare(byte, byte)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte int compareTo(java.lang.Byte) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte int compareTo(java.lang.Byte)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte int compareTo(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte int intValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte java.lang.Byte decode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte java.lang.Byte valueOf(byte)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte java.lang.Byte valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte java.lang.Byte valueOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte java.lang.String toString(byte)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Byte long longValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte short shortValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Byte.ByteCache ByteCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Character boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character boolean isBmpCodePoint(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character boolean isHighSurrogate(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character boolean isISOControl(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character boolean isISOControl(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character boolean isLowSurrogate(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character boolean isSpace(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character boolean isSupplementaryCodePoint(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character boolean isSurrogate(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character boolean isSurrogatePair(char, char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character boolean isValidCodePoint(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character char charValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character char forDigit(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character char highSurrogate(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character char lowSurrogate(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character char reverseBytes(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character char[] toChars(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int charCount(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character int codePointAt(char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointAt(char[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character int codePointAt(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointAt(java.lang.CharSequence, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointAtImpl(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointAtImpl(char[], int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character int codePointBefore(char[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointBefore(char[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character int codePointBefore(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointBefore(java.lang.CharSequence, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointBeforeImpl(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointBeforeImpl(char[], int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character int codePointCount(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointCount(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int codePointCountImpl(char[], int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character int compare(char, char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character int compareTo(java.lang.Character) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int compareTo(java.lang.Character)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int compareTo(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character int offsetByCodePoints(char[], int, int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int offsetByCodePoints(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int toChars(int, char[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character int toCodePoint(char, char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character java.lang.String toString(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character void toSurrogates(int, char[], int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.CharacterCache CharacterCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character.Subset Subset(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.Subset boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Character.Subset boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character.Subset java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Character.UnicodeBlock UnicodeBlock(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.UnicodeBlock UnicodeBlock(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.UnicodeBlock UnicodeBlock(java.lang.String, java.lang.String...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.UnicodeBlock UnicodeBlock(java.lang.String, java.lang.String...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.UnicodeBlock java.lang.Character.UnicodeBlock forName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Character.UnicodeScript java.lang.Character.UnicodeScript forName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.CharacterData CharacterData()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData boolean isIdeographic(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData boolean isOtherAlphabetic(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData boolean isOtherLowercase(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData boolean isOtherUppercase(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData char[] toUpperCaseCharArray(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData java.lang.CharacterData of(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData00 CharacterData00()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData00 int findInCharMap(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData00 int getProperties(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData00 int getPropertiesEx(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData01 CharacterData01()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData01 int getProperties(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData01 int getPropertiesEx(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData02 CharacterData02()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData02 int getProperties(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData02 int getPropertiesEx(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData0E CharacterData0E()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData0E int getProperties(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterData0E int getPropertiesEx(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataLatin1 CharacterDataLatin1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataLatin1 int getProperties(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataLatin1 int getPropertiesEx(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse CharacterDataPrivateUse()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse boolean isIdentifierIgnorable(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse boolean isJavaIdentifierPart(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse boolean isJavaIdentifierStart(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse boolean isMirrored(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse boolean isUnicodeIdentifierPart(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse boolean isUnicodeIdentifierStart(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse boolean isWhitespace(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse byte getDirectionality(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse int digit(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse int getNumericValue(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse int getProperties(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse int getType(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse int toLowerCase(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse int toTitleCase(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataPrivateUse int toUpperCase(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined CharacterDataUndefined()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined boolean isIdentifierIgnorable(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined boolean isJavaIdentifierPart(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined boolean isJavaIdentifierStart(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined boolean isMirrored(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined boolean isUnicodeIdentifierPart(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined boolean isUnicodeIdentifierStart(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined boolean isWhitespace(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined byte getDirectionality(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined int digit(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined int getNumericValue(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined int getProperties(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined int getType(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined int toLowerCase(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined int toTitleCase(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterDataUndefined int toUpperCase(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterName CharacterName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.CharacterName.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class A getAnnotation(java.lang.Class&lt;A&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class T cast(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class boolean access$100(java.lang.Object[], java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class boolean access$100(java.lang.Object[], java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class boolean access$100(java.lang.Object[], java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class boolean access$202(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;false-&gt;false;true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class boolean access$302(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;false-&gt;false;true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class boolean arrayContentsEq(java.lang.Object[], java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class boolean arrayContentsEq(java.lang.Object[], java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class boolean arrayContentsEq(java.lang.Object[], java.lang.Object[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class boolean isAnnotationPresent(java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class boolean isAsciiDigit(char)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class boolean isCheckMemberAccessOverridden(java.lang.SecurityManager) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.Class&lt;? extends U&gt; asSubclass(java.lang.Class&lt;U&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.Class&lt;? extends U&gt; asSubclass(java.lang.Class&lt;U&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.Class&lt;?&gt; toClass(java.lang.reflect.Type)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.String argumentTypesToString(java.lang.Class&lt;?&gt;[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.String argumentTypesToString(java.lang.Class&lt;?&gt;[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.String cannotCastMsg(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.String cannotCastMsg(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.String getSimpleName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.String resolveName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Class java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Constructor&lt;T&gt; getConstructor(java.lang.Class&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Constructor&lt;T&gt; getConstructor0(java.lang.Class&lt;?&gt;[], int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Constructor&lt;T&gt; getDeclaredConstructor(java.lang.Class&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Constructor&lt;U&gt;[] copyConstructors(java.lang.reflect.Constructor&lt;U&gt;[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field getDeclaredField(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field getField(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field getField0(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field searchFields(java.lang.reflect.Field[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field searchFields(java.lang.reflect.Field[], java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field[] copyFields(java.lang.reflect.Field[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Field[] privateGetPublicFields(java.util.Set&lt;java.lang.Class&lt;?&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method getDeclaredMethod(java.lang.String, java.lang.Class&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method getDeclaredMethod(java.lang.String, java.lang.Class&lt;?&gt;...) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method getMethod(java.lang.String, java.lang.Class&lt;?&gt;...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method getMethod0(java.lang.String, java.lang.Class&lt;?&gt;[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method searchMethods(java.lang.reflect.Method[], java.lang.String, java.lang.Class&lt;?&gt;[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method searchMethods(java.lang.reflect.Method[], java.lang.String, java.lang.Class&lt;?&gt;[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method searchMethods(java.lang.reflect.Method[], java.lang.String, java.lang.Class&lt;?&gt;[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class java.lang.reflect.Method[] copyMethods(java.lang.reflect.Method[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class sun.reflect.annotation.AnnotationType getAnnotationType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class sun.reflect.generics.factory.GenericsFactory getFactory()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class void addAll(java.util.Collection&lt;java.lang.reflect.Field&gt;, java.lang.reflect.Field[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class void checkMemberAccess(int, java.lang.Class&lt;?&gt;, boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class void checkPackageAccess(java.lang.ClassLoader, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class.3 3()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class.EnclosingMethodInfo EnclosingMethodInfo(java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class.EnclosingMethodInfo EnclosingMethodInfo(java.lang.Object[], java.lang.Class.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class.EnclosingMethodInfo EnclosingMethodInfo(java.lang.Object[], java.lang.Class.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Class.EnclosingMethodInfo boolean isConstructor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class.EnclosingMethodInfo boolean isMethod()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class.EnclosingMethodInfo boolean isPartial()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class.EnclosingMethodInfo java.lang.Class&lt;?&gt; getEnclosingClass()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class.EnclosingMethodInfo java.lang.String getDescriptor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class.EnclosingMethodInfo java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class.MethodArray int length()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class.MethodArray java.lang.reflect.Method get(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class.MethodArray java.lang.reflect.Method[] getArray()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Class.MethodArray void addAll(java.lang.Class.MethodArray) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class.MethodArray void addAll(java.lang.reflect.Method[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Class.MethodArray void addAllIfNotPresent(java.lang.Class.MethodArray) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader ClassLoader(java.lang.Void, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader boolean checkName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader boolean checkName(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ClassLoader boolean compareCerts(java.security.cert.Certificate[], java.security.cert.Certificate[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader boolean compareCerts(java.security.cert.Certificate[], java.security.cert.Certificate[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader boolean isAncestor(java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader boolean isAncestor(java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassLoader boolean loadLibrary1(java.lang.Class, java.io.File)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ClassLoader boolean needsClassLoaderPermissionCheck(java.lang.ClassLoader, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader boolean needsClassLoaderPermissionCheck(java.lang.ClassLoader, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;false;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class defineTransformedClass(java.lang.String, byte[], int, int, java.security.ProtectionDomain, java.lang.ClassFormatError, java.lang.String) 5">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; defineClass(java.lang.String, byte[], int, int, java.security.ProtectionDomain) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; defineClass(java.lang.String, java.nio.ByteBuffer, java.security.ProtectionDomain) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.Class&lt;?&gt; defineClass(java.lang.String, java.nio.ByteBuffer, java.security.ProtectionDomain) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.ClassLoader getClassLoader(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.ClassLoader getClassLoader(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ClassLoader java.lang.Package definePackage(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.net.URL)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.String defineClassSourceLocation(java.security.ProtectionDomain) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.String findLibrary(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.String findLibrary(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassLoader java.lang.String[] initializePath(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.net.URL findResource(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.net.URL findResource(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassLoader java.security.ProtectionDomain preDefineClass(java.lang.String, java.security.ProtectionDomain) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.security.ProtectionDomain preDefineClass(java.lang.String, java.security.ProtectionDomain) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.security.ProtectionDomain preDefineClass(java.lang.String, java.security.ProtectionDomain)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,!null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; findResources(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; findResources(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; getBootstrapResources(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.util.Enumeration&lt;java.net.URL&gt; getResources(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader java.util.Stack access$100()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassLoader java.util.Vector access$000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassLoader sun.misc.URLClassPath getBootstrapClassPath()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassLoader void checkCerts(java.lang.String, java.security.CodeSource) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader void checkClassLoaderPermission(java.lang.ClassLoader, java.lang.Class&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassLoader void postDefineClass(java.lang.Class, java.security.ProtectionDomain) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader void setSigners(java.lang.Class&lt;?&gt;, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader.NativeLibrary java.lang.Class access$200(java.lang.ClassLoader.NativeLibrary) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoader.NativeLibrary java.lang.Class access$200(java.lang.ClassLoader.NativeLibrary)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassLoader.ParallelLoaders ParallelLoaders()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassLoader.ParallelLoaders boolean register(java.lang.Class&lt;? extends java.lang.ClassLoader&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassLoaderHelper ClassLoaderHelper()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassLoaderHelper java.io.File mapAlternativeName(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassNotFoundException java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassNotFoundException java.lang.Throwable getException()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassValue T get(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue T getFromBackup(java.lang.ClassValue.Entry&lt;?&gt;[], java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue T getFromHashMap(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue boolean match(java.lang.ClassValue.Entry&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassValue boolean match(java.lang.ClassValue.Entry&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ClassValue java.lang.ClassValue.ClassValueMap getMap(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue java.lang.ClassValue.ClassValueMap initializeMap(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue java.lang.ClassValue.Entry&lt;?&gt;[] getCacheCarefully(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue java.lang.ClassValue.Entry&lt;T&gt; castEntry(java.lang.ClassValue.Entry&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassValue java.lang.ClassValue.Entry&lt;T&gt; makeEntry(java.lang.ClassValue.Version&lt;T&gt;, T)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue java.lang.ClassValue.Version&lt;T&gt; version()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassValue void put(java.lang.Class&lt;?&gt;, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue void remove(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap int entryDislocation(java.lang.ClassValue.Entry&lt;?&gt;[], int, java.lang.ClassValue.Entry&lt;?&gt;) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;?&gt; findReplacement(java.lang.ClassValue.Entry&lt;?&gt;[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;?&gt; loadFromCache(java.lang.ClassValue.Entry&lt;?&gt;[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;?&gt; loadFromCache(java.lang.ClassValue.Entry&lt;?&gt;[], int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;?&gt; placeInCache(java.lang.ClassValue.Entry&lt;?&gt;[], int, java.lang.ClassValue.Entry&lt;?&gt;, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;?&gt;[] getCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;T&gt; finishEntry(java.lang.ClassValue&lt;T&gt;, java.lang.ClassValue.Entry&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;T&gt; finishEntry(java.lang.ClassValue&lt;T&gt;, java.lang.ClassValue.Entry&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;T&gt; overwrittenEntry(java.lang.ClassValue.Entry&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;T&gt; overwrittenEntry(java.lang.ClassValue.Entry&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;T&gt; probeBackupLocations(java.lang.ClassValue.Entry&lt;?&gt;[], java.lang.ClassValue&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;T&gt; probeBackupLocations(java.lang.ClassValue.Entry&lt;?&gt;[], java.lang.ClassValue&lt;T&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;T&gt; probeHomeLocation(java.lang.ClassValue.Entry&lt;?&gt;[], java.lang.ClassValue&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;T&gt; probeHomeLocation(java.lang.ClassValue.Entry&lt;?&gt;[], java.lang.ClassValue&lt;T&gt;) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap java.lang.ClassValue.Entry&lt;T&gt; startEntry(java.lang.ClassValue&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap void addToCache(java.lang.ClassValue&lt;T&gt;, java.lang.ClassValue.Entry&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap void addToCache(java.lang.ClassValue.Entry&lt;T&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap void changeEntry(java.lang.ClassValue&lt;T&gt;, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap void removeEntry(java.lang.ClassValue&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap void removeStaleEntries(java.lang.ClassValue&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.ClassValueMap void removeStaleEntries(java.lang.ClassValue.Entry&lt;?&gt;[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.Entry boolean isPromise()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassValue.Entry java.lang.ClassValue.Entry&lt;T&gt; refreshVersion(java.lang.ClassValue.Version&lt;T&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ClassValue.Identity Identity()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassValue.Version java.lang.ClassValue&lt;T&gt; classValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ClassValue.Version java.lang.ClassValue.Entry&lt;T&gt; promise()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Compiler Compiler()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Compiler.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing ConditionalSpecialCasing()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing boolean isAfterI(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ConditionalSpecialCasing boolean isAfterSoftDotted(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ConditionalSpecialCasing boolean isBeforeDot(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing boolean isFinalCased(java.lang.String, int, java.util.Locale)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ConditionalSpecialCasing boolean isMoreAbove(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing boolean isSoftDotted(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing char[] lookUpTable(java.lang.String, int, java.util.Locale, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing char[] lookUpTable(java.lang.String, int, java.util.Locale, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ConditionalSpecialCasing char[] toLowerCaseCharArray(java.lang.String, int, java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing char[] toLowerCaseCharArray(java.lang.String, int, java.util.Locale)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ConditionalSpecialCasing char[] toUpperCaseCharArray(java.lang.String, int, java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing int toLowerCaseEx(java.lang.String, int, java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing int toUpperCaseEx(java.lang.String, int, java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing.Entry char[] getLowerCase()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing.Entry char[] getUpperCase()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing.Entry int getCodePoint()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing.Entry int getCondition()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ConditionalSpecialCasing.Entry java.lang.String getLanguage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Double Double(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Double boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Double boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Double boolean isInfinite()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Double boolean isInfinite(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Double boolean isNaN()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Double boolean isNaN(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Double byte byteValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Double double doubleValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Double double parseDouble(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Double float floatValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Double int compareTo(java.lang.Double) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Double int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Double int intValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Double java.lang.Double valueOf(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Double java.lang.Double valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Double java.lang.Double valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Double long longValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Double short shortValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Enum T valueOf(java.lang.Class&lt;T&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Enum boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Enum boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Enum int compareTo(E) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Enum int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Enum int ordinal()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Enum java.lang.String name()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Enum java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Enum void finalize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Enum void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.EnumConstantNotPresentException EnumConstantNotPresentException(java.lang.Class&lt;? extends java.lang.Enum&gt;, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.EnumConstantNotPresentException java.lang.Class&lt;? extends java.lang.Enum&gt; enumType()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.EnumConstantNotPresentException java.lang.String constantName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ExceptionInInitializerError java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ExceptionInInitializerError java.lang.Throwable getException()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Float Float(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Float boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Float boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.Float boolean isInfinite()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Float boolean isInfinite(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Float boolean isNaN()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Float boolean isNaN(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Float byte byteValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Float double doubleValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Float float floatValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Float float parseFloat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Float int compareTo(java.lang.Float) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Float int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Float int intValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Float java.lang.Float valueOf(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Float java.lang.Float valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Float java.lang.Float valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Float long longValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Float short shortValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.InheritableThreadLocal T childValue(T)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.InheritableThreadLocal java.lang.ThreadLocal.ThreadLocalMap getMap(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.InheritableThreadLocal java.lang.ThreadLocal.ThreadLocalMap getMap(java.lang.Thread)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.InheritableThreadLocal void createMap(java.lang.Thread, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer Integer(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Integer boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer byte byteValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer double doubleValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer float floatValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int bitCount(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int compare(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int compareTo(java.lang.Integer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer int compareTo(java.lang.Integer)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer int compareTo(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int highestOneBit(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int intValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int lowestOneBit(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int numberOfLeadingZeros(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int numberOfTrailingZeros(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int parseInt(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer int parseInt(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer int reverse(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int reverseBytes(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int rotateLeft(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int rotateRight(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int signum(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer int stringSize(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer java.lang.Integer decode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.Integer valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.Integer valueOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toBinaryString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toHexString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toOctalString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer java.lang.String toUnsignedString(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer long longValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer short shortValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Integer void getChars(int, int, char[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Integer.IntegerCache IntegerCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long Long(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Long boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long byte byteValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long double doubleValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long float floatValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long int bitCount(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long int compare(long, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long int compareTo(java.lang.Long) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long int compareTo(java.lang.Long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long int compareTo(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long int intValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long int numberOfLeadingZeros(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long int numberOfTrailingZeros(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long int signum(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long int stringSize(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long java.lang.Long decode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.Long valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.Long valueOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toBinaryString(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toHexString(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toOctalString(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toString(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toString(long, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long java.lang.String toUnsignedString(long, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long long highestOneBit(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long long longValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long long lowestOneBit(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long long parseLong(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long long parseLong(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long long reverse(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long long reverseBytes(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long long rotateLeft(long, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long long rotateRight(long, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long short shortValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Long void getChars(long, int, char[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Long.LongCache LongCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Math Math()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Math double abs(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Math double toDegrees(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Math double toRadians(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Math float abs(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Math int abs(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Math int max(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Math int min(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Math long abs(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Math long max(long, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Math long min(long, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Number Number()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.NumberFormatException java.lang.NumberFormatException forInputString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.NumberFormatException java.lang.NumberFormatException forInputString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Object Object()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Object boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Object boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Object java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Object void finalize()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Package A getAnnotation(java.lang.Class&lt;A&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package Package(java.lang.String, java.util.jar.Manifest, java.net.URL, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package Package(java.lang.String, java.util.jar.Manifest, java.net.URL, java.lang.ClassLoader) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package Package(java.lang.String, java.util.jar.Manifest, java.net.URL, java.lang.ClassLoader, java.lang.Package.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package Package(java.lang.String, java.util.jar.Manifest, java.net.URL, java.lang.ClassLoader, java.lang.Package.1) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package Package(java.lang.String, java.util.jar.Manifest, java.net.URL, java.lang.ClassLoader, java.lang.Package.1) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Package boolean isAnnotationPresent(java.lang.Class&lt;? extends java.lang.annotation.Annotation&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package boolean isCompatibleWith(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package boolean isSealed()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Package boolean isSealed(java.net.URL) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package java.lang.Package getPackage(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package java.lang.String getImplementationTitle()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Package java.lang.String getImplementationVendor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Package java.lang.String getImplementationVersion()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Package java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Package java.lang.String getSpecificationTitle()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Package java.lang.String getSpecificationVendor()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Package java.lang.String getSpecificationVersion()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Package java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package java.util.Map access$000()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Package java.util.Map access$200()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Package java.util.Map access$400()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Package java.util.jar.Manifest access$100(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Package java.util.jar.Manifest loadManifest(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Package.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Package.1 java.lang.Package run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Process Process()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder ProcessBuilder(java.lang.String...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder ProcessBuilder(java.util.List&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder boolean redirectErrorStream()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder java.io.File directory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.Process start()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder command(java.lang.String...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder command(java.lang.String...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder command(java.util.List&lt;java.lang.String&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder command(java.util.List&lt;java.lang.String&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder directory(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder environment(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder environment(java.lang.String[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder inheritIO()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectError(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectError(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectError(java.lang.ProcessBuilder.Redirect) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectError(java.lang.ProcessBuilder.Redirect)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectErrorStream(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectInput(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectInput(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectInput(java.lang.ProcessBuilder.Redirect) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectInput(java.lang.ProcessBuilder.Redirect)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectOutput(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectOutput(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectOutput(java.lang.ProcessBuilder.Redirect) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder redirectOutput(java.lang.ProcessBuilder.Redirect)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder.Redirect redirectError()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder.Redirect redirectInput()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder java.lang.ProcessBuilder.Redirect redirectOutput()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder java.util.List&lt;java.lang.String&gt; command()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.NullInputStream NullInputStream()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.NullInputStream int available()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.NullInputStream int read()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.NullOutputStream NullOutputStream()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect Redirect()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect Redirect(java.lang.ProcessBuilder.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect Redirect(java.lang.ProcessBuilder.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.io.File file()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect appendTo(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect appendTo(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect from(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect from(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect to(java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect java.lang.ProcessBuilder.Redirect to(java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.1 java.lang.ProcessBuilder.Redirect.Type type()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.2 2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.2 java.lang.ProcessBuilder.Redirect.Type type()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.3 java.io.File file()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.3 java.lang.ProcessBuilder.Redirect.Type type()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.3 java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.4 boolean append()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.4 java.io.File file()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.4 java.lang.ProcessBuilder.Redirect.Type type()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.4 java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.5 boolean append()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.5 java.io.File file()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.5 java.lang.ProcessBuilder.Redirect.Type type()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessBuilder.Redirect.5 java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment ProcessEnvironment()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment boolean access$000(byte[], byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment boolean access$000(byte[], byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment boolean access$000(byte[], byte[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment boolean arrayEquals(byte[], byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment boolean arrayEquals(byte[], byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment boolean arrayEquals(byte[], byte[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment byte[] toEnvironmentBlock(java.util.Map&lt;java.lang.String,java.lang.String&gt;, int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment byte[] toEnvironmentBlock(java.util.Map&lt;java.lang.String,java.lang.String&gt;, int[])">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ProcessEnvironment int access$100(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment int access$100(byte[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment int access$300(byte[], byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment int access$300(byte[], byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment int access$300(byte[], byte[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment int arrayCompare(byte[], byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment int arrayCompare(byte[], byte[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment int arrayCompare(byte[], byte[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment int arrayHash(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment int arrayHash(byte[])">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment java.util.Map&lt;java.lang.String,java.lang.String&gt; emptyEnvironment(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment java.util.Map&lt;java.lang.String,java.lang.String&gt; environment()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment java.util.Map&lt;java.lang.String,java.lang.String&gt; getenv()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment void access$200(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment void access$400(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment void validateValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment void validateVariable(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.ExternalData boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.ExternalData boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ProcessEnvironment.ExternalData byte[] getBytes()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment.ExternalData java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntry boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntry boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntry java.lang.String setValue(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntry java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntry java.util.Map.Entry access$600(java.lang.ProcessEnvironment.StringEntry) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntry java.util.Map.Entry access$600(java.lang.ProcessEnvironment.StringEntry)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet java.util.Iterator&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.String&gt;&gt; iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet java.util.Map.Entry&lt;java.lang.ProcessEnvironment.Variable,java.lang.ProcessEnvironment.Value&gt; vvEntry(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet java.util.Set access$500(java.lang.ProcessEnvironment.StringEntrySet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet java.util.Set access$500(java.lang.ProcessEnvironment.StringEntrySet)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet.1 java.util.Map.Entry&lt;java.lang.String,java.lang.String&gt; next()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet.2 java.lang.Object getKey()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet.2 java.lang.Object getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet.2 java.lang.Object setValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet.2 java.lang.ProcessEnvironment.Value getValue()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet.2 java.lang.ProcessEnvironment.Value setValue(java.lang.ProcessEnvironment.Value) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEntrySet.2 java.lang.ProcessEnvironment.Variable getKey()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment boolean containsKey(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment boolean containsValue(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment byte[] toEnvironmentBlock(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.String get(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.String put(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.String put(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.String remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.String toString(java.lang.ProcessEnvironment.Value) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.lang.String toString(java.lang.ProcessEnvironment.Value)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.util.Collection&lt;java.lang.String&gt; values()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.util.Set&lt;java.lang.String&gt; keySet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringEnvironment java.util.Set&lt;java.util.Map.Entry&lt;java.lang.String,java.lang.String&gt;&gt; entrySet()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringKeySet boolean contains(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringKeySet boolean remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringKeySet java.util.Iterator&lt;java.lang.String&gt; iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringKeySet java.util.Set access$800(java.lang.ProcessEnvironment.StringKeySet) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringKeySet java.util.Set access$800(java.lang.ProcessEnvironment.StringKeySet)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringValues boolean contains(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringValues boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringValues boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ProcessEnvironment.StringValues boolean remove(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringValues java.util.Collection access$700(java.lang.ProcessEnvironment.StringValues) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringValues java.util.Collection access$700(java.lang.ProcessEnvironment.StringValues)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessEnvironment.StringValues java.util.Iterator&lt;java.lang.String&gt; iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Value boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Value boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ProcessEnvironment.Value int compareTo(java.lang.ProcessEnvironment.Value) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Value java.lang.ProcessEnvironment.Value valueOf(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Value java.lang.ProcessEnvironment.Value valueOf(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Value java.lang.ProcessEnvironment.Value valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Value java.lang.ProcessEnvironment.Value valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Value java.lang.ProcessEnvironment.Value valueOfQueryOnly(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Value java.lang.ProcessEnvironment.Value valueOfQueryOnly(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Value java.lang.ProcessEnvironment.Value valueOfQueryOnly(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Value java.lang.ProcessEnvironment.Value valueOfQueryOnly(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Variable boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Variable boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ProcessEnvironment.Variable int compareTo(java.lang.ProcessEnvironment.Variable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Variable java.lang.ProcessEnvironment.Variable valueOf(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Variable java.lang.ProcessEnvironment.Variable valueOf(byte[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Variable java.lang.ProcessEnvironment.Variable valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Variable java.lang.ProcessEnvironment.Variable valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Variable java.lang.ProcessEnvironment.Variable valueOfQueryOnly(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Variable java.lang.ProcessEnvironment.Variable valueOfQueryOnly(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Variable java.lang.ProcessEnvironment.Variable valueOfQueryOnly(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessEnvironment.Variable java.lang.ProcessEnvironment.Variable valueOfQueryOnly(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessImpl ProcessImpl()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ProcessImpl byte[] toCString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessImpl byte[] toCString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ProcessImpl java.lang.Process start(java.lang.String[], java.util.Map&lt;java.lang.String,java.lang.String&gt;, java.lang.String, java.lang.ProcessBuilder.Redirect[], boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ProcessImpl java.lang.Process start(java.lang.String[], java.util.Map&lt;java.lang.String,java.lang.String&gt;, java.lang.String, java.lang.ProcessBuilder.Redirect[], boolean) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessImpl java.lang.Process start(java.lang.String[], java.util.Map&lt;java.lang.String,java.lang.String&gt;, java.lang.String, java.lang.ProcessBuilder.Redirect[], boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ProcessImpl java.lang.Process start(java.lang.String[], java.util.Map&lt;java.lang.String,java.lang.String&gt;, java.lang.String, java.lang.ProcessBuilder.Redirect[], boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime Runtime()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Runtime boolean removeShutdownHook(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime java.io.InputStream getLocalizedInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Runtime java.io.OutputStream getLocalizedOutputStream(java.io.OutputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;!null;null-&gt;null&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String, java.lang.String[], java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String[], java.lang.String[], java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String[], java.lang.String[], java.io.File) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Runtime java.lang.Process exec(java.lang.String[], java.lang.String[], java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime java.lang.Runtime getRuntime()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Runtime void addShutdownHook(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime void load0(java.lang.Class, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Runtime void loadLibrary0(java.lang.Class, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.RuntimePermission RuntimePermission(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.RuntimePermission RuntimePermission(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.RuntimePermission RuntimePermission(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.SecurityManager boolean checkTopLevelWindow(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager boolean getInCheck()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.SecurityManager java.lang.String[] getPackages(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.SecurityManager void checkAccept(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkAccess(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkAccess(java.lang.ThreadGroup) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkConnect(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkConnect(java.lang.String, int, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkExec(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkLink(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkMemberAccess(java.lang.Class&lt;?&gt;, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkMulticast(java.net.InetAddress) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkMulticast(java.net.InetAddress, byte) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkPackageAccess(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkPackageDefinition(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkPermission(java.security.Permission) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkPermission(java.security.Permission, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkPermission(java.security.Permission, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkPropertyAccess(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkRead(java.io.FileDescriptor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkSecurityAccess(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.SecurityManager void checkWrite(java.io.FileDescriptor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short Short(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Short boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Short byte byteValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Short double doubleValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Short float floatValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Short int compare(short, short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Short int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short int compareTo(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Short int compareTo(java.lang.Short) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short int compareTo(java.lang.Short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Short int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Short int intValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Short java.lang.Short decode(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short java.lang.Short valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short java.lang.Short valueOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short java.lang.String toString(short)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short long longValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Short short parseShort(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short short parseShort(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Short short reverseBytes(short)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Short short shortValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Short.ShortCache ShortCache()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Shutdown Shutdown()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Shutdown.Lock Lock()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Shutdown.Lock Lock(java.lang.Shutdown.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Shutdown.Lock Lock(java.lang.Shutdown.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StackTraceElement StackTraceElement(java.lang.String, java.lang.String, java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StackTraceElement StackTraceElement(java.lang.String, java.lang.String, java.lang.String, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StackTraceElement boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StackTraceElement boolean isNativeMethod()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StackTraceElement int getLineNumber()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StackTraceElement java.lang.String getClassName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StackTraceElement java.lang.String getFileName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StackTraceElement java.lang.String getMethodName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StackTraceElement java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StrictMath StrictMath()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StrictMath double abs(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StrictMath double toDegrees(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StrictMath double toRadians(double)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StrictMath float abs(float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StrictMath int abs(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StrictMath int max(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StrictMath int min(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StrictMath long abs(long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StrictMath long max(long, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StrictMath long min(long, long)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String String(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int, int, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int, int, java.lang.String) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int, int, java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], int, int, java.nio.charset.Charset) 3">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(byte[], java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(int, int, char[]) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(int[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String String(java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean contains(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean contentEquals(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean contentEquals(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean endsWith(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean endsWith(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.String boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String boolean equalsIgnoreCase(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.String boolean isEmpty()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String boolean regionMatches(boolean, int, java.lang.String, int, int) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean regionMatches(int, java.lang.String, int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean regionMatches(int, java.lang.String, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String boolean startsWith(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean startsWith(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String boolean startsWith(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String boolean startsWith(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String byte[] getBytes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String byte[] getBytes(java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String char[] toCharArray()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int compareTo(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int compareTo(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int compareTo(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int compareTo(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int indexOf(char[], int, int, char[], int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int indexOf(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int indexOf(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int indexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int indexOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int indexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int indexOf(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int indexOfSupplementary(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int lastIndexOf(char[], int, int, char[], int, int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int lastIndexOf(int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int lastIndexOf(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int lastIndexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int lastIndexOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int lastIndexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String int lastIndexOf(java.lang.String, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int lastIndexOfSupplementary(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String int length()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String java.lang.CharSequence subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String concat(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String concat(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String copyValueOf(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String copyValueOf(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String copyValueOf(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String copyValueOf(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String format(java.lang.String, java.lang.Object...) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String format(java.lang.String, java.lang.Object...) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.String java.lang.String format(java.util.Locale, java.lang.String, java.lang.Object...) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String format(java.util.Locale, java.lang.String, java.lang.Object...) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.String java.lang.String replace(char, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replace(java.lang.CharSequence, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String replaceFirst(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String substring(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String substring(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String toLowerCase()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String toLowerCase(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String toLowerCase(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String java.lang.String toUpperCase()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String toUpperCase(java.util.Locale) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String toUpperCase(java.util.Locale)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String trim()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.String java.lang.String valueOf(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.String java.lang.String valueOf(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String[] split(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String java.lang.String[] split(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String void checkBounds(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String.CaseInsensitiveComparator CaseInsensitiveComparator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String.CaseInsensitiveComparator CaseInsensitiveComparator(java.lang.String.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.String.CaseInsensitiveComparator CaseInsensitiveComparator(java.lang.String.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.String.CaseInsensitiveComparator int compare(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.String.CaseInsensitiveComparator int compare(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer StringBuffer(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer StringBuffer(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer int capacity()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StringBuffer int indexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer int indexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer int lastIndexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer int lastIndexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer int length()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder append(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder appendCodePoint(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder delete(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder deleteCharAt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder insert(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder replace(int, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder replace(int, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.AbstractStringBuilder reverse()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.Appendable append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.Appendable append(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.Appendable append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.Appendable append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.CharSequence subSequence(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.String substring(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.String substring(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer append(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer appendCodePoint(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer delete(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer deleteCharAt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, char[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer insert(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer replace(int, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer replace(int, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer java.lang.StringBuffer reverse()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuffer void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder StringBuilder(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder StringBuilder(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder int capacity()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StringBuilder int indexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder int indexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder int lastIndexOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder int lastIndexOf(java.lang.String, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder int length()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder append(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder appendCodePoint(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder delete(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder deleteCharAt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder insert(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder replace(int, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder replace(int, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.AbstractStringBuilder reverse()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.Appendable append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.Appendable append(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.Appendable append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.Appendable append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.String substring(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.StringBuffer) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.StringBuffer)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.StringBuilder) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(java.lang.StringBuilder)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder append(long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder appendCodePoint(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder delete(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder deleteCharAt(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, char[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, char[])">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, char[], int, int) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, char[], int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, double)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, float)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.CharSequence) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder insert(int, long)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder replace(int, int, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder replace(int, int, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder java.lang.StringBuilder reverse()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringBuilder void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding StringCoding()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StringCoding T deref(java.lang.ThreadLocal&lt;java.lang.ref.SoftReference&lt;T&gt;&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding byte[] access$300(byte[], int, java.nio.charset.Charset, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding byte[] access$300(byte[], int, java.nio.charset.Charset, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringCoding byte[] access$300(byte[], int, java.nio.charset.Charset, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.StringCoding byte[] encode(java.nio.charset.Charset, char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding byte[] safeTrim(byte[], int, java.nio.charset.Charset, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding byte[] safeTrim(byte[], int, java.nio.charset.Charset, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringCoding byte[] safeTrim(byte[], int, java.nio.charset.Charset, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.StringCoding char[] access$100(char[], int, java.nio.charset.Charset, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding char[] access$100(char[], int, java.nio.charset.Charset, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringCoding char[] access$100(char[], int, java.nio.charset.Charset, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.StringCoding char[] decode(java.nio.charset.Charset, byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding char[] safeTrim(char[], int, java.nio.charset.Charset, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding char[] safeTrim(char[], int, java.nio.charset.Charset, boolean) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringCoding char[] safeTrim(char[], int, java.nio.charset.Charset, boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null,_,_,_-&gt;!null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.StringCoding int access$000(int, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StringCoding int scale(int, float)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StringCoding java.nio.charset.Charset lookupCharset(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding java.nio.charset.Charset lookupCharset(java.lang.String)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.StringCoding void set(java.lang.ThreadLocal&lt;java.lang.ref.SoftReference&lt;T&gt;&gt;, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding void warnUnsupportedCharset(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringCoding.StringDecoder StringDecoder(java.nio.charset.Charset, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding.StringDecoder StringDecoder(java.nio.charset.Charset, java.lang.String, java.lang.StringCoding.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding.StringDecoder StringDecoder(java.nio.charset.Charset, java.lang.String, java.lang.StringCoding.1) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringCoding.StringDecoder java.lang.String requestedCharsetName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.StringCoding.StringEncoder StringEncoder(java.nio.charset.Charset, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding.StringEncoder StringEncoder(java.nio.charset.Charset, java.lang.String, java.lang.StringCoding.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.StringCoding.StringEncoder StringEncoder(java.nio.charset.Charset, java.lang.String, java.lang.StringCoding.1) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.StringCoding.StringEncoder java.lang.String requestedCharsetName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.System System()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.System java.lang.SecurityManager getSecurityManager()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.System java.lang.String clearProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System java.lang.String getProperty(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System java.lang.String getProperty(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System java.lang.String lineSeparator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.System java.lang.String setProperty(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System void checkKey(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System void setProperties(java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.System void setSecurityManager0(java.lang.SecurityManager) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.System.2 2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.System.2 E[] getEnumConstantsShared(java.lang.Class&lt;E&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System.2 int getStackTraceDepth(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System.2 int getStringHash32(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System.2 java.lang.StackTraceElement getStackTraceElement(java.lang.Throwable, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System.2 java.lang.Thread newThreadWithAcc(java.lang.Runnable, java.security.AccessControlContext) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.System.2 java.lang.Thread newThreadWithAcc(java.lang.Runnable, java.security.AccessControlContext)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System.2 sun.reflect.ConstantPool getConstantPool(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System.2 sun.reflect.annotation.AnnotationType getAnnotationType(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System.2 sun.reflect.annotation.AnnotationType getAnnotationType(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.System.2 void blockedOn(java.lang.Thread, sun.nio.ch.Interruptible) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.System.2 void setAnnotationType(java.lang.Class, sun.reflect.annotation.AnnotationType) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Terminator Terminator()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Terminator void teardown()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Terminator.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Terminator.1 void handle(sun.misc.Signal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.Runnable, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.Runnable, java.security.AccessControlContext) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.ThreadGroup, java.lang.Runnable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.ThreadGroup, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Thread Thread(java.lang.ThreadGroup, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread boolean isDaemon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Thread int getPriority()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Thread java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread java.lang.Thread.State getState()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Thread java.lang.Thread.UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Thread java.lang.Thread.UncaughtExceptionHandler getUncaughtExceptionHandler()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Thread java.lang.ThreadGroup getThreadGroup()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Thread long getId()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Thread void init(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Thread void init(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread void init(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long, java.security.AccessControlContext) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Thread void init(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long, java.security.AccessControlContext) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread void init(java.lang.ThreadGroup, java.lang.Runnable, java.lang.String, long, java.security.AccessControlContext) 4">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Thread void processQueue(java.lang.ref.ReferenceQueue&lt;java.lang.Class&lt;?&gt;&gt;, java.util.concurrent.ConcurrentMap&lt;? extends java.lang.ref.WeakReference&lt;java.lang.Class&lt;?&gt;&gt;,?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread void setDefaultUncaughtExceptionHandler(java.lang.Thread.UncaughtExceptionHandler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Thread void setName(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread void stop(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Thread.Caches Caches()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Thread.WeakClassKey WeakClassKey(java.lang.Class&lt;?&gt;, java.lang.ref.ReferenceQueue&lt;java.lang.Class&lt;?&gt;&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Thread.WeakClassKey boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Thread.WeakClassKey int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ThreadGroup ThreadGroup(java.lang.ThreadGroup, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadGroup ThreadGroup(java.lang.Void, java.lang.ThreadGroup, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadGroup ThreadGroup(java.lang.Void, java.lang.ThreadGroup, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadGroup boolean allowThreadSuspension(boolean)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;false-&gt;true;true-&gt;true&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ThreadGroup boolean isDaemon()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ThreadGroup boolean isDestroyed()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ThreadGroup boolean parentOf(java.lang.ThreadGroup) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadGroup boolean parentOf(java.lang.ThreadGroup)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ThreadGroup int getMaxPriority()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ThreadGroup java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ThreadGroup java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadGroup java.lang.Void checkParentAccess(java.lang.ThreadGroup) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadGroup java.lang.Void checkParentAccess(java.lang.ThreadGroup)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;!null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ThreadGroup void list(java.io.PrintStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadGroup void remove(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadGroup void remove(java.lang.ThreadGroup) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadGroup void threadStartFailed(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadGroup void threadTerminated(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadLocal T childValue(T) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadLocal T initialValue()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ThreadLocal int access$400(java.lang.ThreadLocal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal int access$400(java.lang.ThreadLocal)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ThreadLocal java.lang.ThreadLocal.ThreadLocalMap createInheritedMap(java.lang.ThreadLocal.ThreadLocalMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal java.lang.ThreadLocal.ThreadLocalMap createInheritedMap(java.lang.ThreadLocal.ThreadLocalMap)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal java.lang.ThreadLocal.ThreadLocalMap getMap(java.lang.Thread) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal java.lang.ThreadLocal.ThreadLocalMap getMap(java.lang.Thread)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ThreadLocal void createMap(java.lang.Thread, T) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap ThreadLocalMap(java.lang.ThreadLocal, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap ThreadLocalMap(java.lang.ThreadLocal.ThreadLocalMap) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap ThreadLocalMap(java.lang.ThreadLocal.ThreadLocalMap, java.lang.ThreadLocal.1) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap ThreadLocalMap(java.lang.ThreadLocal.ThreadLocalMap, java.lang.ThreadLocal.1) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap int nextIndex(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap int prevIndex(int, int)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry access$000(java.lang.ThreadLocal.ThreadLocalMap, java.lang.ThreadLocal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry access$000(java.lang.ThreadLocal.ThreadLocalMap, java.lang.ThreadLocal) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry getEntry(java.lang.ThreadLocal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry getEntryAfterMiss(java.lang.ThreadLocal, int, java.lang.ThreadLocal.ThreadLocalMap.Entry) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry getEntryAfterMiss(java.lang.ThreadLocal, int, java.lang.ThreadLocal.ThreadLocalMap.Entry) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap java.lang.ThreadLocal.ThreadLocalMap.Entry getEntryAfterMiss(java.lang.ThreadLocal, int, java.lang.ThreadLocal.ThreadLocalMap.Entry)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;_,_,null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap void access$100(java.lang.ThreadLocal.ThreadLocalMap, java.lang.ThreadLocal, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap void access$100(java.lang.ThreadLocal.ThreadLocalMap, java.lang.ThreadLocal, java.lang.Object) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap void access$200(java.lang.ThreadLocal.ThreadLocalMap, java.lang.ThreadLocal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap void access$200(java.lang.ThreadLocal.ThreadLocalMap, java.lang.ThreadLocal) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap void remove(java.lang.ThreadLocal) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.ThreadLocal.ThreadLocalMap void set(java.lang.ThreadLocal, java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable java.lang.String getMessage()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Throwable java.lang.Throwable fillInStackTrace()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Throwable java.lang.Throwable initCause(java.lang.Throwable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable void addSuppressed(java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable void printEnclosedStackTrace(java.lang.Throwable.PrintStreamOrWriter, java.lang.StackTraceElement[], java.lang.String, java.lang.String, java.util.Set&lt;java.lang.Throwable&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable void printEnclosedStackTrace(java.lang.Throwable.PrintStreamOrWriter, java.lang.StackTraceElement[], java.lang.String, java.lang.String, java.util.Set&lt;java.lang.Throwable&gt;) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Throwable void printEnclosedStackTrace(java.lang.Throwable.PrintStreamOrWriter, java.lang.StackTraceElement[], java.lang.String, java.lang.String, java.util.Set&lt;java.lang.Throwable&gt;) 4">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable void printStackTrace(java.lang.Throwable.PrintStreamOrWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable void setStackTrace(java.lang.StackTraceElement[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.Throwable.PrintStreamOrWriter PrintStreamOrWriter()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Throwable.PrintStreamOrWriter PrintStreamOrWriter(java.lang.Throwable.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.Throwable.PrintStreamOrWriter PrintStreamOrWriter(java.lang.Throwable.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Throwable.SentinelHolder SentinelHolder()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Throwable.WrappedPrintStream java.lang.Object lock()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Throwable.WrappedPrintWriter java.lang.Object lock()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.TypeNotPresentException java.lang.String typeName()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.UNIXProcess int access$100(java.lang.UNIXProcess) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.UNIXProcess int access$100(java.lang.UNIXProcess)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.UNIXProcess int access$200(java.lang.UNIXProcess, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.UNIXProcess java.io.FileDescriptor newFileDescriptor(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.UNIXProcess java.io.InputStream getErrorStream()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.UNIXProcess java.io.InputStream getInputStream()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.UNIXProcess java.io.OutputStream getOutputStream()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.UNIXProcess void initStreams(int[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.UNIXProcess.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.UNIXProcess.1 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.UNIXProcess.1 java.util.concurrent.Executor run()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.UNIXProcess.ProcessPipeInputStream byte[] drainInputStream(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.UNIXProcess.ProcessPipeInputStream byte[] drainInputStream(java.io.InputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.lang.UNIXProcess.ProcessReaperThreadFactory ProcessReaperThreadFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.UNIXProcess.ProcessReaperThreadFactory ProcessReaperThreadFactory(java.lang.UNIXProcess.1) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.lang.UNIXProcess.ProcessReaperThreadFactory ProcessReaperThreadFactory(java.lang.UNIXProcess.1)">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.UNIXProcess.ProcessReaperThreadFactory java.lang.Thread newThread(java.lang.Runnable)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.lang.UNIXProcess.ProcessReaperThreadFactory.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.lang.Void Void()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
</root>
