<root>
  <item name="java.rmi.server.LogStream int parseLevel(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.LogStream java.io.OutputStream getOutputStream()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.LogStream java.io.PrintStream getDefaultStream()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.LogStream java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.LogStream void setDefaultStream(java.io.PrintStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.ObjID ObjID(int)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.ObjID ObjID(long, java.rmi.server.UID)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.ObjID boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.ObjID boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.ObjID int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.ObjID java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.ObjID java.rmi.server.ObjID read(java.io.ObjectInput) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.ObjID java.rmi.server.ObjID read(java.io.ObjectInput)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.ObjID void write(java.io.ObjectOutput) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.Operation Operation(java.lang.String)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.Operation java.lang.String getOperation()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.Operation java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.RMIClassLoader RMIClassLoader()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.RMIClassLoader java.lang.Class&lt;?&gt; loadClass(java.net.URL, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.RMIClassLoader java.lang.Object getSecurityContext(java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.RMIClassLoader java.lang.Object getSecurityContext(java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;null&quot;"/>
    </annotation>
  </item>
  <item name="java.rmi.server.RMIClassLoader java.rmi.server.RMIClassLoaderSpi newDefaultProviderInstance()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.RMIClassLoader.1 1()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.RMIClassLoader.2 2()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.RMIClassLoader.2 java.lang.Class&lt;?&gt; loadClass(java.lang.String, java.lang.String, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.RMIClassLoader.2 java.lang.Class&lt;?&gt; loadClass(java.lang.String, java.lang.String, java.lang.ClassLoader) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.RMIClassLoader.2 java.lang.Class&lt;?&gt; loadProxyClass(java.lang.String, java.lang.String[], java.lang.ClassLoader) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RMIClassLoader.2 java.lang.ClassLoader getClassLoader(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.RMIClassLoader.2 java.lang.String getClassAnnotation(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RMIClassLoaderSpi RMIClassLoaderSpi()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.RMISocketFactory RMISocketFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.RMISocketFactory java.rmi.server.RMIFailureHandler getFailureHandler()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.RMISocketFactory java.rmi.server.RMISocketFactory getSocketFactory()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.RMISocketFactory void setFailureHandler(java.rmi.server.RMIFailureHandler) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.RMISocketFactory void setSocketFactory(java.rmi.server.RMISocketFactory) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.RemoteObject RemoteObject()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteObject RemoteObject(java.rmi.server.RemoteRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteObject boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.RemoteObject boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.rmi.server.RemoteObject java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RemoteObject java.rmi.server.RemoteRef getRef()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.RemoteObject void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RemoteObject void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RemoteObjectInvocationHandler RemoteObjectInvocationHandler(java.rmi.server.RemoteRef) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RemoteObjectInvocationHandler java.lang.Object invoke(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RemoteObjectInvocationHandler java.lang.Object invokeObjectMethod(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RemoteObjectInvocationHandler java.lang.Object invokeRemoteMethod(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RemoteObjectInvocationHandler java.lang.Object invokeRemoteMethod(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RemoteObjectInvocationHandler java.lang.String proxyToString(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RemoteObjectInvocationHandler java.lang.String proxyToString(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RemoteObjectInvocationHandler long getMethodHash(java.lang.reflect.Method) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RemoteObjectInvocationHandler.MethodToHash_Maps java.util.Map&lt;java.lang.reflect.Method,java.lang.Long&gt; computeValue(java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.RemoteObjectInvocationHandler.MethodToHash_Maps java.util.Map&lt;java.lang.reflect.Method,java.lang.Long&gt; computeValue(java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.RemoteServer RemoteServer()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteServer RemoteServer(java.rmi.server.RemoteRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteStub RemoteStub()">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteStub RemoteStub(java.rmi.server.RemoteRef)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.RemoteStub void setRef(java.rmi.server.RemoteStub, java.rmi.server.RemoteRef) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.RemoteStub void setRef(java.rmi.server.RemoteStub, java.rmi.server.RemoteRef) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.ServerCloneException java.lang.Throwable getCause()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.UID UID(int, long, short)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.UID UID(short)">
    <annotation name="org.jetbrains.annotations.LocalEffect"/>
  </item>
  <item name="java.rmi.server.UID boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.rmi.server.UID boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.UID int hashCode()">
    <annotation name="org.jetbrains.annotations.Pure"/>
  </item>
  <item name="java.rmi.server.UID java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.UID java.rmi.server.UID read(java.io.DataInput) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.UID java.rmi.server.UID read(java.io.DataInput)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.UID void write(java.io.DataOutput) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.UnicastRemoteObject java.rmi.Remote exportObject(java.rmi.Remote, sun.rmi.server.UnicastServerRef) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.rmi.server.UnicastRemoteObject void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
