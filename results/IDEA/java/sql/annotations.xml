<root>
  <item name="java.sql.BatchUpdateException BatchUpdateException(int[]) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.BatchUpdateException BatchUpdateException(int[], java.lang.Throwable) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.BatchUpdateException BatchUpdateException(java.lang.String, int[]) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.BatchUpdateException BatchUpdateException(java.lang.String, int[], java.lang.Throwable) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.BatchUpdateException BatchUpdateException(java.lang.String, java.lang.String, int, int[]) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.BatchUpdateException BatchUpdateException(java.lang.String, java.lang.String, int, int[], java.lang.Throwable) 3">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.BatchUpdateException BatchUpdateException(java.lang.String, java.lang.String, int[]) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.BatchUpdateException BatchUpdateException(java.lang.String, java.lang.String, int[], java.lang.Throwable) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.BatchUpdateException int[] getUpdateCounts()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.DataTruncation boolean getParameter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.DataTruncation boolean getRead()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.DataTruncation int getDataSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.DataTruncation int getIndex()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.DataTruncation int getTransferSize()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.Date java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.Date java.sql.Date valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.Date java.sql.Date valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.DriverInfo boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.DriverInfo boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;null-&gt;false&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.DriverInfo java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.DriverManager DriverManager()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.DriverManager boolean isDriverAllowed(java.sql.Driver, java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.DriverManager boolean isDriverAllowed(java.sql.Driver, java.lang.Class&lt;?&gt;) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.DriverManager boolean isDriverAllowed(java.sql.Driver, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.sql.DriverManager boolean isDriverAllowed(java.sql.Driver, java.lang.ClassLoader) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.DriverManager boolean isDriverAllowed(java.sql.Driver, java.lang.ClassLoader)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null,_-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.sql.DriverManager int getLoginTimeout()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.DriverManager java.io.PrintStream getLogStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.DriverManager java.io.PrintWriter getLogWriter()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.lang.String, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.util.Properties) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.util.Properties)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.util.Properties, java.lang.Class&lt;?&gt;) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.DriverManager java.sql.Connection getConnection(java.lang.String, java.util.Properties, java.lang.Class&lt;?&gt;)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.DriverManager void deregisterDriver(java.sql.Driver) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.DriverManager void registerDriver(java.sql.Driver) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.DriverManager void setLogStream(java.io.PrintStream) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.DriverManager void setLogWriter(java.io.PrintWriter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.DriverManager.1 1()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.DriverManager.2 2()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.DriverManager.2 java.lang.Object run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.DriverManager.2 java.lang.Void run()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.SQLClientInfoException java.util.Map&lt;java.lang.String,java.sql.ClientInfoStatus&gt; getFailedProperties()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.SQLException int getErrorCode()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.SQLException java.lang.String getSQLState()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.SQLException java.sql.SQLException getNextException()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.SQLException java.util.Iterator&lt;java.lang.Throwable&gt; iterator()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.SQLException.1 boolean hasNext()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.Time java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.Time java.sql.Time valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.Time java.sql.Time valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.Timestamp boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.sql.Timestamp boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.sql.Timestamp int compareTo(java.sql.Timestamp) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.Timestamp int compareTo(java.util.Date) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.Timestamp int getNanos()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.sql.Timestamp java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.Timestamp java.sql.Timestamp valueOf(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.Timestamp java.sql.Timestamp valueOf(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.sql.Types Types()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
</root>
