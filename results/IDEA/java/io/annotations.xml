<root>
  <item name="java.io.BufferedInputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.BufferedInputStream byte[] getBufIfOpen()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.BufferedInputStream int read(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.BufferedInputStream java.io.InputStream getInIfOpen()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.BufferedReader BufferedReader(java.io.Reader) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.BufferedReader BufferedReader(java.io.Reader, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.BufferedReader boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.BufferedReader int read(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.BufferedReader java.lang.String readLine()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.BufferedReader java.lang.String readLine(boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.BufferedWriter BufferedWriter(java.io.Writer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.BufferedWriter BufferedWriter(java.io.Writer, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.BufferedWriter int min(int, int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.BufferedWriter void write(char[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ByteArrayInputStream ByteArrayInputStream(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ByteArrayInputStream ByteArrayInputStream(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ByteArrayInputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ByteArrayInputStream int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ByteArrayInputStream int read(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ByteArrayInputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ByteArrayOutputStream int size()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ByteArrayOutputStream java.lang.String toString()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ByteArrayOutputStream java.lang.String toString(int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ByteArrayOutputStream java.lang.String toString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ByteArrayOutputStream java.lang.String toString(java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ByteArrayOutputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ByteArrayOutputStream void write(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ByteArrayOutputStream void writeTo(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.DataInputStream int read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.DataInputStream java.lang.String readLine()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.DataInputStream java.lang.String readUTF()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.DataInputStream java.lang.String readUTF(java.io.DataInput) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.DataInputStream java.lang.String readUTF(java.io.DataInput)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.DataInputStream void readFully(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File File(java.io.File, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File File(java.io.File, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File File(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File File(java.lang.String, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File File(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File File(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File File(java.net.URI) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File boolean checkAndCreate(java.lang.String, java.lang.SecurityManager) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File boolean equals(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File boolean equals(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="&quot;null-&gt;false&quot;"/>
    </annotation>
  </item>
  <item name="java.io.File int getPrefixLength()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.File java.io.File createTempFile(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File java.io.File createTempFile(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.io.File createTempFile(java.lang.String, java.lang.String)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File java.io.File createTempFile(java.lang.String, java.lang.String, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File java.io.File createTempFile(java.lang.String, java.lang.String, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.io.File createTempFile(java.lang.String, java.lang.String, java.io.File) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.io.File createTempFile(java.lang.String, java.lang.String, java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File java.io.File generateFile(java.lang.String, java.lang.String, java.io.File) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.io.File generateFile(java.lang.String, java.lang.String, java.io.File) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.io.File generateFile(java.lang.String, java.lang.String, java.io.File) 2">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.io.File generateFile(java.lang.String, java.lang.String, java.io.File)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File java.io.File getAbsoluteFile()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File java.io.File getCanonicalFile()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File java.io.File getParentFile()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.io.FileSystem access$000()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.File java.io.File[] listFiles()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.io.File[] listFiles(java.io.FileFilter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.io.File[] listFiles(java.io.FileFilter)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.io.File[] listFiles(java.io.FilenameFilter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.io.File[] listFiles(java.io.FilenameFilter)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.lang.String getName()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File java.lang.String getParent()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.lang.String getPath()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.File java.lang.String slashify(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File java.lang.String slashify(java.lang.String, boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File java.lang.String[] list(java.io.FilenameFilter) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.File java.net.URI toURI()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File java.net.URL toURL()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File void readObject(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File void writeObject(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.File.LazyInitialization LazyInitialization()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.FileInputStream FileInputStream(java.io.FileDescriptor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.FileInputStream FileInputStream(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.FileInputStream int read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.FileNotFoundException FileNotFoundException(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.FileNotFoundException FileNotFoundException(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.FileOutputStream FileOutputStream(java.io.FileDescriptor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.FileOutputStream FileOutputStream(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.FileOutputStream FileOutputStream(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.FileOutputStream void write(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.FileReader FileReader(java.io.FileDescriptor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.FileReader FileReader(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.FileWriter FileWriter(java.io.FileDescriptor) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.FileWriter FileWriter(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.FileWriter FileWriter(java.lang.String, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.FilterOutputStream void write(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.FilterOutputStream void write(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.InputStream InputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.InputStream boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.InputStream int available()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.InputStream int read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.InputStream int read(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.InputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.InputStream void mark(int)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.InputStreamReader InputStreamReader(java.io.InputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.InputStreamReader InputStreamReader(java.io.InputStream, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.InputStreamReader InputStreamReader(java.io.InputStream, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.InputStreamReader InputStreamReader(java.io.InputStream, java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.InputStreamReader InputStreamReader(java.io.InputStream, java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.InputStreamReader InputStreamReader(java.io.InputStream, java.nio.charset.CharsetDecoder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.InputStreamReader InputStreamReader(java.io.InputStream, java.nio.charset.CharsetDecoder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream boolean access$400(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream boolean access$400(java.io.ObjectInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ObjectInputStream int access$000(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream int access$000(java.io.ObjectInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ObjectInputStream int access$002(java.io.ObjectInputStream, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream int read(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream java.io.ObjectInputStream.BlockDataInputStream access$200(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream java.io.ObjectInputStream.BlockDataInputStream access$200(java.io.ObjectInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ObjectInputStream java.io.ObjectInputStream.HandleTable access$100(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream java.io.ObjectInputStream.HandleTable access$100(java.io.ObjectInputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ObjectInputStream java.io.ObjectStreamClass readClassDescriptor()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream java.io.ObjectStreamClass readNonProxyDesc(boolean)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream java.lang.Class resolveClass(java.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream java.lang.Class resolveProxyClass(java.lang.String[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream java.lang.Enum readEnum(boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectInputStream java.lang.Object access$300(java.io.ObjectInputStream, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream java.lang.Object access$300(java.io.ObjectInputStream, boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectInputStream java.lang.Object readArray(boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectInputStream java.lang.Object readNull()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectInputStream java.lang.Object readObject()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectInputStream java.lang.Object readObject0(boolean)">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectInputStream java.lang.Object readObjectOverride()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectInputStream java.lang.Object readUnshared()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectInputStream java.lang.Object resolveObject(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ObjectInputStream void access$500(java.io.ObjectInputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream void defaultReadFields(java.lang.Object, java.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectInputStream void defaultReadFields(java.lang.Object, java.io.ObjectStreamClass) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream void readExternalData(java.io.Externalizable, java.io.ObjectStreamClass) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream void readFully(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream void readFully(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectInputStream void readSerialData(java.lang.Object, java.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectInputStream void readSerialData(java.lang.Object, java.io.ObjectStreamClass) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream int getProtocolVersion()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ObjectOutputStream java.io.ObjectOutputStream.BlockDataOutputStream access$000(java.io.ObjectOutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream java.io.ObjectOutputStream.BlockDataOutputStream access$000(java.io.ObjectOutputStream)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ObjectOutputStream java.lang.Object replaceObject(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="value=&quot;!null-&gt;!null;null-&gt;null&quot;,pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ObjectOutputStream void access$100(java.io.ObjectOutputStream, java.lang.Object, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void annotateClass(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectOutputStream void annotateClass(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ObjectOutputStream void annotateProxyClass(java.lang.Class) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectOutputStream void annotateProxyClass(java.lang.Class)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ObjectOutputStream void defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void write(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void write(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeArray(java.lang.Object, java.io.ObjectStreamClass, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeArray(java.lang.Object, java.io.ObjectStreamClass, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeClassDesc(java.io.ObjectStreamClass, boolean) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeClassDescriptor(java.io.ObjectStreamClass) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeEnum(java.lang.Enum, java.io.ObjectStreamClass, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeEnum(java.lang.Enum, java.io.ObjectStreamClass, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeExternalData(java.io.Externalizable) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeNonProxyDesc(java.io.ObjectStreamClass, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeObjectOverride(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeObjectOverride(java.lang.Object)">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.ObjectOutputStream void writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeProxyDesc(java.io.ObjectStreamClass, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeSerialData(java.lang.Object, java.io.ObjectStreamClass) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.ObjectOutputStream void writeTypeString(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.OutputStream OutputStream()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.OutputStream void close()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.OutputStream void flush()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.OutputStream void write(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.OutputStream void write(byte[], int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.OutputStreamWriter OutputStreamWriter(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.OutputStreamWriter OutputStreamWriter(java.io.OutputStream, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.OutputStreamWriter OutputStreamWriter(java.io.OutputStream, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.OutputStreamWriter OutputStreamWriter(java.io.OutputStream, java.nio.charset.Charset) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.OutputStreamWriter OutputStreamWriter(java.io.OutputStream, java.nio.charset.Charset) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.OutputStreamWriter OutputStreamWriter(java.io.OutputStream, java.nio.charset.CharsetEncoder) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.OutputStreamWriter OutputStreamWriter(java.io.OutputStream, java.nio.charset.CharsetEncoder) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream PrintStream(boolean, java.io.OutputStream) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream PrintStream(java.io.File, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream PrintStream(java.io.OutputStream) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream PrintStream(java.io.OutputStream, boolean) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream PrintStream(java.io.OutputStream, boolean, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream PrintStream(java.io.OutputStream, boolean, java.lang.String) 2">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream PrintStream(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.PrintStream PrintStream(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.PrintStream PrintStream(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream java.io.PrintStream append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream java.io.PrintStream append(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.PrintStream java.io.PrintStream append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream java.io.PrintStream append(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.PrintStream java.io.PrintStream append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream java.io.PrintStream format(java.lang.String, java.lang.Object...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream java.io.PrintStream format(java.util.Locale, java.lang.String, java.lang.Object...)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream void init(java.io.OutputStreamWriter) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.PrintStream void print(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.PrintStream void print(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.PrintStream void println(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.RandomAccessFile RandomAccessFile(java.io.File, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.RandomAccessFile RandomAccessFile(java.lang.String, java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.RandomAccessFile RandomAccessFile(java.lang.String, java.lang.String) 1">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.RandomAccessFile int read(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.RandomAccessFile java.lang.String readLine()">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.RandomAccessFile java.lang.String readUTF()">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.RandomAccessFile void readFully(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.RandomAccessFile void write(byte[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.RandomAccessFile void writeBytes(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.RandomAccessFile void writeChars(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.Reader Reader(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.Reader boolean markSupported()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.Reader boolean ready()">
    <annotation name="org.jetbrains.annotations.Contract">
      <val val="pure=true"/>
    </annotation>
  </item>
  <item name="java.io.Reader int read(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.Reader int read(java.nio.CharBuffer) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.Writer Writer(java.lang.Object) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.Writer java.io.Writer append(char)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.Writer java.io.Writer append(java.lang.CharSequence) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.Writer java.io.Writer append(java.lang.CharSequence)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.Writer java.io.Writer append(java.lang.CharSequence, int, int) 0">
    <annotation name="org.jetbrains.annotations.Nullable"/>
  </item>
  <item name="java.io.Writer java.io.Writer append(java.lang.CharSequence, int, int)">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.Writer void write(char[]) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.Writer void write(java.lang.String) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
  <item name="java.io.Writer void write(java.lang.String, int, int) 0">
    <annotation name="org.jetbrains.annotations.NotNull"/>
  </item>
</root>
